
2025-08-17_v1.724: Diversas otimizações, nem tudo foi testado.
Removida utilização da função sprintf(), pois ocupava 593 words de programa.
Criado módulo utils e fuções util_uint16_to_str() e util_uint8_to_strhex().
Ajustados módulos base_adcon, base_rs232, mq6, serv_adcon, serv_dht22.
Ajustado módulo ct_handler para responder interrupção da porta serial.
Ajustado módulo ct_prot_rs232 para responder ao comando AMON.
Ajustado main().

=============================================================================
2025-08-15_v1.723: não foi testado.
serv_menu.c: Menu "Config->Monit" estava sem título (mostrava lixo).
Modificações nos nomes das variáveis e na ordem das declarações.

util_menu.h:
Modificações em nomes.
Removidos os tipos TMenuSystemStruct, TMenuStruct e TMenuItemStruct.
Redeclarados os tipos TMenuSystem, TMenu e TMenuItem utilizando declaração antecipada.

ct_estados.c: ajustes de nomes de variáveis para refletir a mudança em em util_menu.h.
base_eeprom.c: type cast.

=============================================================================
20250506_v1.722: diversas modificações.
- base_eeprom: mudança de big endian para little endian.
- Mudança na forma das interrupções: retirada lógica do ct_handler e passado para o main().
- Mudança na máquina de estados.
- ct_handler
- ct_estados
- adcon
- main

=============================================================================
20250422_v1.720b:
- Desabilitada a interrupção da porta serial e a chamada a prot_rs232_executa() em ct_handler() pois estava dando erro aleatório ao se acessar algum submenu da aplicação.
  Talvez seja acesso a alguma área inválida de memória, embora não faça sentido ter que retirar a chamada a prot_rs232_executa().
- Criadas funções menu_atual_get_titulo(), menu_get_tipo_item_menu_ativado(), menu_get_acao_item_menu_ativado() no módulo util_menu.
- Revisão geral e remoção dos acessos diretos aos campus das structs TMenu e TMenuItem.

=============================================================================
20250415v1.720a: com ERRO. Modificações no funcionamento do módulo util_menu. Modificações na máquina de estados: eliminação dos estados de configuração e criação de um EST_ESTADO_TRATA_MENUS. Ainda com erro ao mostrar o submenu "Qt Sensores", parece estar sobrescrevendo alguma posição de memória. Antes o erro era no submenu "Configs". Foram trocadas as posições dos menus e o erro desapareceu temporariamente. Após novas trocas nas posições dos menus o erro voltou para o submenu "Qt Sensores".

=============================================================================
20250408v1.717e: retirado init() do menu_configuracoes_itens2 de serv_menus.c, pois código não estava rodando no equipamento (embora funcionava no MPLabSim).
util_menu.h e util_menu.c:adicionado str_titulo e retorno_pai nas structs.
ct_estados.c: removida função est_testa_estado_trata_menu().est_atualizar_menu() imprime titulo do menu.

=============================================================================
20241215v1.717d: retornado pinos do LCD (D4 a D7) para valores anteriores pois o commit 20241206v1.717b estava com erro.

=============================================================================
20241206v1.717b: lcd.h: trocados pinos do LCD (R4 com R5 e R6 com R7) devido às posições já existentes na versão do hardware 2016.

=============================================================================
20241110v1.717a: diversas modificações no sistema de menus e na máquina de estados.
RAM free: 87 bytes.
ROM free: 2016 words (14 bit).

=============================================================================
20241030v1.716a
Adição da funcionalidade para leitura do sensor DHT22. Criado os módulos base_dht22 e serv_dht22.
Adicionada função timer1_init() no módulo base_timer.

=============================================================================
20241027v1.715
Adição do Menu Configurações e sub-menu Item1 com sub-itens.
Inicialização dos menus colocado na função serv_menu_princ_inicializa().

=============================================================================
20241020v1.714
Modificações nos nomes das macros dos pinos LCD e BTN.

=============================================================================
20241013v1.714
base_lcd.h: modificação pinos LCD.

base_adcon.h:
ADCON_CFG_QUANT_SENSORES_MAX renomeado para ADCON_CFG_QUANT_MAX_SENSORES_ANALOGICOS.
ADCON_CFG_QUANT_MAX_SENSORES_ANALOGICOS = 8.

base_adcon.c
ADCON_QUANT_LEITURAS_PARA_MEDIA_AMOSTRA trocado de 32 para 1 para testar com os sensores MQ.
Vetor acon_canais[] renomeado para adcon_canais[].

base_lcd.h: modificado pinos do LCD (D5 e D7).

base_lcd.c
LCD_V_POSICOES[] ajustado para 8 sensores.

serv_adcon.c:
serv_adcon_print() modificado para imprimir valor absoluto dos sensores analógicos. Ainda não foi implementada impressão do sensor DHT22.

ser_menus.h: menu_cfg_quant_sensores_itens -> 8 sensores.

=============================================================================
20241009v1.713
Correção bug debouncing: arquivos base_botoes.c e ct_handler.c.

=============================================================================
20241008v1.712
Ajustes para a versão do hardware 2016.

Movido local de configuração dos pinos do microcontrolador:
retirado dos módulos específicos e colocado na função main().

Arquivos modificados:

versao.h:
- ajuste do template e adição comentários sobre PRAGMA.
- Modificado nome da macro _HARDWARE_ANTIGO_ para _HARDWARE_2013_.
- Modificado nome da macro _HARDWARE_NOVO_   para _HARDWARE_2016_.
Arquivos modificados:
botoes.h
botoes.c
base_lcd.h
ct_handler.c
main.c

main.c: 
Ajuste do template e adição comentários sobre PRAGMA.
Adicionado include "base_botoes.h".
Adicionado include "base_lcd.h".

base_botoes.h
Excluídas macros BTN_xxx_TRIS.
Redefinidas portas digitais dos botões.

base_botoes.c
Excluída função btns_init().

base_adcon.h
#include versao.h para configurar ADCON_CFG_QUANT_SENSORES_MAX.

base_adcon.c
Excluída função adcon_init().
Variável canais renomeada para adcon_canais.
Variável adcon_canais para as duas versões de hardware (2013 e 2016).

serv_adcon.c
#include versao.h
Adicionado array privado serv_adcon_amostras[].
Adicionada função serv_adcon_print().
Modificado serv_adcon_aquisicao_print() para serv_adcon_aquisicao().
Modificado ct_handler() e ct_estados() para chamar essas funções.

base_rs_232_init().
Movido configuração TRISC6 e TRISC7 para main().

base_lcd.h
Excluídas macros LCD_xxx_TRIS.
Redefinidas portas digitais do LCD.

base_lcd.c
lcd_init().
Movido configuração bits para main().

versao.h
Removidas macros _LM_35_ e _MQ_.

=============================================================================
2024-08-05
Modificações nesta versão:

Modificação no nome do diretório do projeto, de mq-2016.X para sensores2023.

Modificações gerais em nomes de variáveis, constantes, defines e funções em todos os módulos (arquivos).

Mudança na terminologia utilizada (ver modulo base_adcon):
aquisicao -> passou a se chamar de leitura.
leitura -> passou a se chamar de amostra.
amostra -> passou a se chamar de aquisicao.

Nova terminologia:

Leitura: é a leitura de um valor da porta analógica.
  
Amostra: é a leitura de vários valores da porta analógica, resultando no valor médio, sendo este considerado 
como o valor lido (amostrado) do sensor. Por exemplo, uma amostra de um sensor pode corresponder à leitura de 10 valores do sensor.
 
Aquisição: é um conjunto de amostras de todos os sensores atualmente configurados.
Por exemplo, se está configurado para 4 sensores, então uma aquisição corresponde a 4 amostras.
Supondo que cada amostra corresponda à média da leitura de 10 valores,
então uma aquisição corresponderá à leitura de 40 valores (armazenamento de apenas 4 amostras).
 
Sessão de monitoramento: corresponde a uma sessão onde são realizadas várias aquisições, 
todas com o mesmo intervalo de tempo (tempo entre aquisções), conforme configuração escolhida pelo usuário.

=============================================================================
2023-12-01
- Modificação na implementação da máquina de estados.
- Modificação na estrutura geral: todo código passado para o handler, assim eliminou a duplicação de código que o compilador fazia para as funções não reentrantes. Ocupação da memória de programa diminui de 98% para 75%.
- Ajustes gerais.

=============================================================================
2023-11-27
Modificações para reduzir o tamanho do call stack.

=============================================================================
2023-11-26
Um merge de modificações do Laboratório de Hardware (IFRS) para tentar encontrar o bug das funcionalidades "monitora" e "monitora e grava". Ainda precisa ser corrigido.

=============================================================================
2023-11-05
Modificações nesta versão:

Diversas modificações.

Habilitado _MODULO_ANTIGO_.
>>> Gravar no hardware ANTIGO e verificar se funciona <<<

Criados os módulos serv_adcon, serv_eeprom, serv_rs232.
Removido o módulo servicos e funções passadas para os módulos serv_adcon, serv_eeprom, serv_rs232.

Criado o módulo prot_rs232.

=============================================================================
2023-11-03
Modificações nesta versão:

adcon:
Variável adcon_quant_amostras_gravadas renomeada para adcon_quant_leituras_gravadas.
Função adcon_le_sensor() renomeada para adcon_leitura_sensor().
Função adcon_print() transformada em privada (static).
Função modificada adcon_amostra_print_grava().

cfg_quant_sensores: retirada variável cfg_quant_sensores_amostrados.

cfg_tempo_amostra: tipo da variável cfg_tempo_amostra_atual modificada para uint16_t.

eeprom.h:
EEPROM_END_QTDE_AMOSTRAS modificado para EEPROM_END_QTDE_LEITURAS.
Foi declarado extern nas funções para ficar de acordo com as convenções definidas.

eeprom.c:
Foi declarado static em algumas funções para ficar de acordo com as convenções definidas.

estados:
Variável est_ver_todos_index_amostra renomeada para est_mostra_todos_index_amostra.
Função est_executa() renomeada para est_executa_acao_do().
Função est_estado_ver_todos() renomeada para est_estado_mostra_todos().
Função est_estado_menu_limpar() renomeada para est_estado_limpar().
Modificações na função est_estado_mostra_todos().
Modificações na função est_executa_acao_do(): estado EST_ESTADO_MOSTRA_TODOS.

main.c: modificações para chamar as funções do módulo eeprom_util.

rs232:
Função rs232_transmite() renomeada para rs232_envia_leituras_gravadas_eeprom().
Função rs232_envia_leituras_gravadas_eeprom() ajustada.

Habilitada a funcionalidade para enviar dados pela serial (módulos modificados: estados, menu_principal, versao.h).
versao.h: habilitada a macro _ENVIA_DADOS_SERIAL_.

Criado o módulo servicos: algumas funções dos módulos adcon, rs232 e eeprom foram renomeadas (adicionado prefixo serv no nome da função) e passadas para este novo módulo.
=============================================================================
