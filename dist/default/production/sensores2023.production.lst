

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Oct 08 19:49:07 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73     0000                     
    74                           ; Generated 22/03/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F886 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     008F                     	;# 
   151     0090                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0093                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0095                     	;# 
   159     0096                     	;# 
   160     0097                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009A                     	;# 
   164     009B                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     0105                     	;# 
   170     0107                     	;# 
   171     0108                     	;# 
   172     0109                     	;# 
   173     010C                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     0185                     	;# 
   179     0187                     	;# 
   180     0188                     	;# 
   181     0189                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184     0000                     	;# 
   185     0001                     	;# 
   186     0002                     	;# 
   187     0003                     	;# 
   188     0004                     	;# 
   189     0005                     	;# 
   190     0006                     	;# 
   191     0007                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0089                     	;# 
   223     008C                     	;# 
   224     008D                     	;# 
   225     008E                     	;# 
   226     008F                     	;# 
   227     0090                     	;# 
   228     0091                     	;# 
   229     0092                     	;# 
   230     0093                     	;# 
   231     0093                     	;# 
   232     0093                     	;# 
   233     0094                     	;# 
   234     0095                     	;# 
   235     0096                     	;# 
   236     0097                     	;# 
   237     0098                     	;# 
   238     0099                     	;# 
   239     009A                     	;# 
   240     009B                     	;# 
   241     009C                     	;# 
   242     009D                     	;# 
   243     009E                     	;# 
   244     009F                     	;# 
   245     0105                     	;# 
   246     0107                     	;# 
   247     0108                     	;# 
   248     0109                     	;# 
   249     010C                     	;# 
   250     010C                     	;# 
   251     010D                     	;# 
   252     010E                     	;# 
   253     010F                     	;# 
   254     0185                     	;# 
   255     0187                     	;# 
   256     0188                     	;# 
   257     0189                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0009                     	;# 
   269     000A                     	;# 
   270     000B                     	;# 
   271     000C                     	;# 
   272     000D                     	;# 
   273     000E                     	;# 
   274     000E                     	;# 
   275     000F                     	;# 
   276     0010                     	;# 
   277     0011                     	;# 
   278     0012                     	;# 
   279     0013                     	;# 
   280     0014                     	;# 
   281     0015                     	;# 
   282     0015                     	;# 
   283     0016                     	;# 
   284     0017                     	;# 
   285     0018                     	;# 
   286     0019                     	;# 
   287     001A                     	;# 
   288     001B                     	;# 
   289     001B                     	;# 
   290     001C                     	;# 
   291     001D                     	;# 
   292     001E                     	;# 
   293     001F                     	;# 
   294     0081                     	;# 
   295     0085                     	;# 
   296     0086                     	;# 
   297     0087                     	;# 
   298     0089                     	;# 
   299     008C                     	;# 
   300     008D                     	;# 
   301     008E                     	;# 
   302     008F                     	;# 
   303     0090                     	;# 
   304     0091                     	;# 
   305     0092                     	;# 
   306     0093                     	;# 
   307     0093                     	;# 
   308     0093                     	;# 
   309     0094                     	;# 
   310     0095                     	;# 
   311     0096                     	;# 
   312     0097                     	;# 
   313     0098                     	;# 
   314     0099                     	;# 
   315     009A                     	;# 
   316     009B                     	;# 
   317     009C                     	;# 
   318     009D                     	;# 
   319     009E                     	;# 
   320     009F                     	;# 
   321     0105                     	;# 
   322     0107                     	;# 
   323     0108                     	;# 
   324     0109                     	;# 
   325     010C                     	;# 
   326     010C                     	;# 
   327     010D                     	;# 
   328     010E                     	;# 
   329     010F                     	;# 
   330     0185                     	;# 
   331     0187                     	;# 
   332     0188                     	;# 
   333     0189                     	;# 
   334     018C                     	;# 
   335     018D                     	;# 
   336     0000                     	;# 
   337     0001                     	;# 
   338     0002                     	;# 
   339     0003                     	;# 
   340     0004                     	;# 
   341     0005                     	;# 
   342     0006                     	;# 
   343     0007                     	;# 
   344     0009                     	;# 
   345     000A                     	;# 
   346     000B                     	;# 
   347     000C                     	;# 
   348     000D                     	;# 
   349     000E                     	;# 
   350     000E                     	;# 
   351     000F                     	;# 
   352     0010                     	;# 
   353     0011                     	;# 
   354     0012                     	;# 
   355     0013                     	;# 
   356     0014                     	;# 
   357     0015                     	;# 
   358     0015                     	;# 
   359     0016                     	;# 
   360     0017                     	;# 
   361     0018                     	;# 
   362     0019                     	;# 
   363     001A                     	;# 
   364     001B                     	;# 
   365     001B                     	;# 
   366     001C                     	;# 
   367     001D                     	;# 
   368     001E                     	;# 
   369     001F                     	;# 
   370     0081                     	;# 
   371     0085                     	;# 
   372     0086                     	;# 
   373     0087                     	;# 
   374     0089                     	;# 
   375     008C                     	;# 
   376     008D                     	;# 
   377     008E                     	;# 
   378     008F                     	;# 
   379     0090                     	;# 
   380     0091                     	;# 
   381     0092                     	;# 
   382     0093                     	;# 
   383     0093                     	;# 
   384     0093                     	;# 
   385     0094                     	;# 
   386     0095                     	;# 
   387     0096                     	;# 
   388     0097                     	;# 
   389     0098                     	;# 
   390     0099                     	;# 
   391     009A                     	;# 
   392     009B                     	;# 
   393     009C                     	;# 
   394     009D                     	;# 
   395     009E                     	;# 
   396     009F                     	;# 
   397     0105                     	;# 
   398     0107                     	;# 
   399     0108                     	;# 
   400     0109                     	;# 
   401     010C                     	;# 
   402     010C                     	;# 
   403     010D                     	;# 
   404     010E                     	;# 
   405     010F                     	;# 
   406     0185                     	;# 
   407     0187                     	;# 
   408     0188                     	;# 
   409     0189                     	;# 
   410     018C                     	;# 
   411     018D                     	;# 
   412     0000                     	;# 
   413     0001                     	;# 
   414     0002                     	;# 
   415     0003                     	;# 
   416     0004                     	;# 
   417     0005                     	;# 
   418     0006                     	;# 
   419     0007                     	;# 
   420     0009                     	;# 
   421     000A                     	;# 
   422     000B                     	;# 
   423     000C                     	;# 
   424     000D                     	;# 
   425     000E                     	;# 
   426     000E                     	;# 
   427     000F                     	;# 
   428     0010                     	;# 
   429     0011                     	;# 
   430     0012                     	;# 
   431     0013                     	;# 
   432     0014                     	;# 
   433     0015                     	;# 
   434     0015                     	;# 
   435     0016                     	;# 
   436     0017                     	;# 
   437     0018                     	;# 
   438     0019                     	;# 
   439     001A                     	;# 
   440     001B                     	;# 
   441     001B                     	;# 
   442     001C                     	;# 
   443     001D                     	;# 
   444     001E                     	;# 
   445     001F                     	;# 
   446     0081                     	;# 
   447     0085                     	;# 
   448     0086                     	;# 
   449     0087                     	;# 
   450     0089                     	;# 
   451     008C                     	;# 
   452     008D                     	;# 
   453     008E                     	;# 
   454     008F                     	;# 
   455     0090                     	;# 
   456     0091                     	;# 
   457     0092                     	;# 
   458     0093                     	;# 
   459     0093                     	;# 
   460     0093                     	;# 
   461     0094                     	;# 
   462     0095                     	;# 
   463     0096                     	;# 
   464     0097                     	;# 
   465     0098                     	;# 
   466     0099                     	;# 
   467     009A                     	;# 
   468     009B                     	;# 
   469     009C                     	;# 
   470     009D                     	;# 
   471     009E                     	;# 
   472     009F                     	;# 
   473     0105                     	;# 
   474     0107                     	;# 
   475     0108                     	;# 
   476     0109                     	;# 
   477     010C                     	;# 
   478     010C                     	;# 
   479     010D                     	;# 
   480     010E                     	;# 
   481     010F                     	;# 
   482     0185                     	;# 
   483     0187                     	;# 
   484     0188                     	;# 
   485     0189                     	;# 
   486     018C                     	;# 
   487     018D                     	;# 
   488     0000                     	;# 
   489     0001                     	;# 
   490     0002                     	;# 
   491     0003                     	;# 
   492     0004                     	;# 
   493     0005                     	;# 
   494     0006                     	;# 
   495     0007                     	;# 
   496     0009                     	;# 
   497     000A                     	;# 
   498     000B                     	;# 
   499     000C                     	;# 
   500     000D                     	;# 
   501     000E                     	;# 
   502     000E                     	;# 
   503     000F                     	;# 
   504     0010                     	;# 
   505     0011                     	;# 
   506     0012                     	;# 
   507     0013                     	;# 
   508     0014                     	;# 
   509     0015                     	;# 
   510     0015                     	;# 
   511     0016                     	;# 
   512     0017                     	;# 
   513     0018                     	;# 
   514     0019                     	;# 
   515     001A                     	;# 
   516     001B                     	;# 
   517     001B                     	;# 
   518     001C                     	;# 
   519     001D                     	;# 
   520     001E                     	;# 
   521     001F                     	;# 
   522     0081                     	;# 
   523     0085                     	;# 
   524     0086                     	;# 
   525     0087                     	;# 
   526     0089                     	;# 
   527     008C                     	;# 
   528     008D                     	;# 
   529     008E                     	;# 
   530     008F                     	;# 
   531     0090                     	;# 
   532     0091                     	;# 
   533     0092                     	;# 
   534     0093                     	;# 
   535     0093                     	;# 
   536     0093                     	;# 
   537     0094                     	;# 
   538     0095                     	;# 
   539     0096                     	;# 
   540     0097                     	;# 
   541     0098                     	;# 
   542     0099                     	;# 
   543     009A                     	;# 
   544     009B                     	;# 
   545     009C                     	;# 
   546     009D                     	;# 
   547     009E                     	;# 
   548     009F                     	;# 
   549     0105                     	;# 
   550     0107                     	;# 
   551     0108                     	;# 
   552     0109                     	;# 
   553     010C                     	;# 
   554     010C                     	;# 
   555     010D                     	;# 
   556     010E                     	;# 
   557     010F                     	;# 
   558     0185                     	;# 
   559     0187                     	;# 
   560     0188                     	;# 
   561     0189                     	;# 
   562     018C                     	;# 
   563     018D                     	;# 
   564     0000                     	;# 
   565     0001                     	;# 
   566     0002                     	;# 
   567     0003                     	;# 
   568     0004                     	;# 
   569     0005                     	;# 
   570     0006                     	;# 
   571     0007                     	;# 
   572     0009                     	;# 
   573     000A                     	;# 
   574     000B                     	;# 
   575     000C                     	;# 
   576     000D                     	;# 
   577     000E                     	;# 
   578     000E                     	;# 
   579     000F                     	;# 
   580     0010                     	;# 
   581     0011                     	;# 
   582     0012                     	;# 
   583     0013                     	;# 
   584     0014                     	;# 
   585     0015                     	;# 
   586     0015                     	;# 
   587     0016                     	;# 
   588     0017                     	;# 
   589     0018                     	;# 
   590     0019                     	;# 
   591     001A                     	;# 
   592     001B                     	;# 
   593     001B                     	;# 
   594     001C                     	;# 
   595     001D                     	;# 
   596     001E                     	;# 
   597     001F                     	;# 
   598     0081                     	;# 
   599     0085                     	;# 
   600     0086                     	;# 
   601     0087                     	;# 
   602     0089                     	;# 
   603     008C                     	;# 
   604     008D                     	;# 
   605     008E                     	;# 
   606     008F                     	;# 
   607     0090                     	;# 
   608     0091                     	;# 
   609     0092                     	;# 
   610     0093                     	;# 
   611     0093                     	;# 
   612     0093                     	;# 
   613     0094                     	;# 
   614     0095                     	;# 
   615     0096                     	;# 
   616     0097                     	;# 
   617     0098                     	;# 
   618     0099                     	;# 
   619     009A                     	;# 
   620     009B                     	;# 
   621     009C                     	;# 
   622     009D                     	;# 
   623     009E                     	;# 
   624     009F                     	;# 
   625     0105                     	;# 
   626     0107                     	;# 
   627     0108                     	;# 
   628     0109                     	;# 
   629     010C                     	;# 
   630     010C                     	;# 
   631     010D                     	;# 
   632     010E                     	;# 
   633     010F                     	;# 
   634     0185                     	;# 
   635     0187                     	;# 
   636     0188                     	;# 
   637     0189                     	;# 
   638     018C                     	;# 
   639     018D                     	;# 
   640     0000                     	;# 
   641     0001                     	;# 
   642     0002                     	;# 
   643     0003                     	;# 
   644     0004                     	;# 
   645     0005                     	;# 
   646     0006                     	;# 
   647     0007                     	;# 
   648     0009                     	;# 
   649     000A                     	;# 
   650     000B                     	;# 
   651     000C                     	;# 
   652     000D                     	;# 
   653     000E                     	;# 
   654     000E                     	;# 
   655     000F                     	;# 
   656     0010                     	;# 
   657     0011                     	;# 
   658     0012                     	;# 
   659     0013                     	;# 
   660     0014                     	;# 
   661     0015                     	;# 
   662     0015                     	;# 
   663     0016                     	;# 
   664     0017                     	;# 
   665     0018                     	;# 
   666     0019                     	;# 
   667     001A                     	;# 
   668     001B                     	;# 
   669     001B                     	;# 
   670     001C                     	;# 
   671     001D                     	;# 
   672     001E                     	;# 
   673     001F                     	;# 
   674     0081                     	;# 
   675     0085                     	;# 
   676     0086                     	;# 
   677     0087                     	;# 
   678     0089                     	;# 
   679     008C                     	;# 
   680     008D                     	;# 
   681     008E                     	;# 
   682     008F                     	;# 
   683     0090                     	;# 
   684     0091                     	;# 
   685     0092                     	;# 
   686     0093                     	;# 
   687     0093                     	;# 
   688     0093                     	;# 
   689     0094                     	;# 
   690     0095                     	;# 
   691     0096                     	;# 
   692     0097                     	;# 
   693     0098                     	;# 
   694     0099                     	;# 
   695     009A                     	;# 
   696     009B                     	;# 
   697     009C                     	;# 
   698     009D                     	;# 
   699     009E                     	;# 
   700     009F                     	;# 
   701     0105                     	;# 
   702     0107                     	;# 
   703     0108                     	;# 
   704     0109                     	;# 
   705     010C                     	;# 
   706     010C                     	;# 
   707     010D                     	;# 
   708     010E                     	;# 
   709     010F                     	;# 
   710     0185                     	;# 
   711     0187                     	;# 
   712     0188                     	;# 
   713     0189                     	;# 
   714     018C                     	;# 
   715     018D                     	;# 
   716     0000                     	;# 
   717     0001                     	;# 
   718     0002                     	;# 
   719     0003                     	;# 
   720     0004                     	;# 
   721     0005                     	;# 
   722     0006                     	;# 
   723     0007                     	;# 
   724     0009                     	;# 
   725     000A                     	;# 
   726     000B                     	;# 
   727     000C                     	;# 
   728     000D                     	;# 
   729     000E                     	;# 
   730     000E                     	;# 
   731     000F                     	;# 
   732     0010                     	;# 
   733     0011                     	;# 
   734     0012                     	;# 
   735     0013                     	;# 
   736     0014                     	;# 
   737     0015                     	;# 
   738     0015                     	;# 
   739     0016                     	;# 
   740     0017                     	;# 
   741     0018                     	;# 
   742     0019                     	;# 
   743     001A                     	;# 
   744     001B                     	;# 
   745     001B                     	;# 
   746     001C                     	;# 
   747     001D                     	;# 
   748     001E                     	;# 
   749     001F                     	;# 
   750     0081                     	;# 
   751     0085                     	;# 
   752     0086                     	;# 
   753     0087                     	;# 
   754     0089                     	;# 
   755     008C                     	;# 
   756     008D                     	;# 
   757     008E                     	;# 
   758     008F                     	;# 
   759     0090                     	;# 
   760     0091                     	;# 
   761     0092                     	;# 
   762     0093                     	;# 
   763     0093                     	;# 
   764     0093                     	;# 
   765     0094                     	;# 
   766     0095                     	;# 
   767     0096                     	;# 
   768     0097                     	;# 
   769     0098                     	;# 
   770     0099                     	;# 
   771     009A                     	;# 
   772     009B                     	;# 
   773     009C                     	;# 
   774     009D                     	;# 
   775     009E                     	;# 
   776     009F                     	;# 
   777     0105                     	;# 
   778     0107                     	;# 
   779     0108                     	;# 
   780     0109                     	;# 
   781     010C                     	;# 
   782     010C                     	;# 
   783     010D                     	;# 
   784     010E                     	;# 
   785     010F                     	;# 
   786     0185                     	;# 
   787     0187                     	;# 
   788     0188                     	;# 
   789     0189                     	;# 
   790     018C                     	;# 
   791     018D                     	;# 
   792     0000                     	;# 
   793     0001                     	;# 
   794     0002                     	;# 
   795     0003                     	;# 
   796     0004                     	;# 
   797     0005                     	;# 
   798     0006                     	;# 
   799     0007                     	;# 
   800     0009                     	;# 
   801     000A                     	;# 
   802     000B                     	;# 
   803     000C                     	;# 
   804     000D                     	;# 
   805     000E                     	;# 
   806     000E                     	;# 
   807     000F                     	;# 
   808     0010                     	;# 
   809     0011                     	;# 
   810     0012                     	;# 
   811     0013                     	;# 
   812     0014                     	;# 
   813     0015                     	;# 
   814     0015                     	;# 
   815     0016                     	;# 
   816     0017                     	;# 
   817     0018                     	;# 
   818     0019                     	;# 
   819     001A                     	;# 
   820     001B                     	;# 
   821     001B                     	;# 
   822     001C                     	;# 
   823     001D                     	;# 
   824     001E                     	;# 
   825     001F                     	;# 
   826     0081                     	;# 
   827     0085                     	;# 
   828     0086                     	;# 
   829     0087                     	;# 
   830     0089                     	;# 
   831     008C                     	;# 
   832     008D                     	;# 
   833     008E                     	;# 
   834     008F                     	;# 
   835     0090                     	;# 
   836     0091                     	;# 
   837     0092                     	;# 
   838     0093                     	;# 
   839     0093                     	;# 
   840     0093                     	;# 
   841     0094                     	;# 
   842     0095                     	;# 
   843     0096                     	;# 
   844     0097                     	;# 
   845     0098                     	;# 
   846     0099                     	;# 
   847     009A                     	;# 
   848     009B                     	;# 
   849     009C                     	;# 
   850     009D                     	;# 
   851     009E                     	;# 
   852     009F                     	;# 
   853     0105                     	;# 
   854     0107                     	;# 
   855     0108                     	;# 
   856     0109                     	;# 
   857     010C                     	;# 
   858     010C                     	;# 
   859     010D                     	;# 
   860     010E                     	;# 
   861     010F                     	;# 
   862     0185                     	;# 
   863     0187                     	;# 
   864     0188                     	;# 
   865     0189                     	;# 
   866     018C                     	;# 
   867     018D                     	;# 
   868     0000                     	;# 
   869     0001                     	;# 
   870     0002                     	;# 
   871     0003                     	;# 
   872     0004                     	;# 
   873     0005                     	;# 
   874     0006                     	;# 
   875     0007                     	;# 
   876     0009                     	;# 
   877     000A                     	;# 
   878     000B                     	;# 
   879     000C                     	;# 
   880     000D                     	;# 
   881     000E                     	;# 
   882     000E                     	;# 
   883     000F                     	;# 
   884     0010                     	;# 
   885     0011                     	;# 
   886     0012                     	;# 
   887     0013                     	;# 
   888     0014                     	;# 
   889     0015                     	;# 
   890     0015                     	;# 
   891     0016                     	;# 
   892     0017                     	;# 
   893     0018                     	;# 
   894     0019                     	;# 
   895     001A                     	;# 
   896     001B                     	;# 
   897     001B                     	;# 
   898     001C                     	;# 
   899     001D                     	;# 
   900     001E                     	;# 
   901     001F                     	;# 
   902     0081                     	;# 
   903     0085                     	;# 
   904     0086                     	;# 
   905     0087                     	;# 
   906     0089                     	;# 
   907     008C                     	;# 
   908     008D                     	;# 
   909     008E                     	;# 
   910     008F                     	;# 
   911     0090                     	;# 
   912     0091                     	;# 
   913     0092                     	;# 
   914     0093                     	;# 
   915     0093                     	;# 
   916     0093                     	;# 
   917     0094                     	;# 
   918     0095                     	;# 
   919     0096                     	;# 
   920     0097                     	;# 
   921     0098                     	;# 
   922     0099                     	;# 
   923     009A                     	;# 
   924     009B                     	;# 
   925     009C                     	;# 
   926     009D                     	;# 
   927     009E                     	;# 
   928     009F                     	;# 
   929     0105                     	;# 
   930     0107                     	;# 
   931     0108                     	;# 
   932     0109                     	;# 
   933     010C                     	;# 
   934     010C                     	;# 
   935     010D                     	;# 
   936     010E                     	;# 
   937     010F                     	;# 
   938     0185                     	;# 
   939     0187                     	;# 
   940     0188                     	;# 
   941     0189                     	;# 
   942     018C                     	;# 
   943     018D                     	;# 
   944     0000                     	;# 
   945     0001                     	;# 
   946     0002                     	;# 
   947     0003                     	;# 
   948     0004                     	;# 
   949     0005                     	;# 
   950     0006                     	;# 
   951     0007                     	;# 
   952     0009                     	;# 
   953     000A                     	;# 
   954     000B                     	;# 
   955     000C                     	;# 
   956     000D                     	;# 
   957     000E                     	;# 
   958     000E                     	;# 
   959     000F                     	;# 
   960     0010                     	;# 
   961     0011                     	;# 
   962     0012                     	;# 
   963     0013                     	;# 
   964     0014                     	;# 
   965     0015                     	;# 
   966     0015                     	;# 
   967     0016                     	;# 
   968     0017                     	;# 
   969     0018                     	;# 
   970     0019                     	;# 
   971     001A                     	;# 
   972     001B                     	;# 
   973     001B                     	;# 
   974     001C                     	;# 
   975     001D                     	;# 
   976     001E                     	;# 
   977     001F                     	;# 
   978     0081                     	;# 
   979     0085                     	;# 
   980     0086                     	;# 
   981     0087                     	;# 
   982     0089                     	;# 
   983     008C                     	;# 
   984     008D                     	;# 
   985     008E                     	;# 
   986     008F                     	;# 
   987     0090                     	;# 
   988     0091                     	;# 
   989     0092                     	;# 
   990     0093                     	;# 
   991     0093                     	;# 
   992     0093                     	;# 
   993     0094                     	;# 
   994     0095                     	;# 
   995     0096                     	;# 
   996     0097                     	;# 
   997     0098                     	;# 
   998     0099                     	;# 
   999     009A                     	;# 
  1000     009B                     	;# 
  1001     009C                     	;# 
  1002     009D                     	;# 
  1003     009E                     	;# 
  1004     009F                     	;# 
  1005     0105                     	;# 
  1006     0107                     	;# 
  1007     0108                     	;# 
  1008     0109                     	;# 
  1009     010C                     	;# 
  1010     010C                     	;# 
  1011     010D                     	;# 
  1012     010E                     	;# 
  1013     010F                     	;# 
  1014     0185                     	;# 
  1015     0187                     	;# 
  1016     0188                     	;# 
  1017     0189                     	;# 
  1018     018C                     	;# 
  1019     018D                     	;# 
  1020     0000                     	;# 
  1021     0001                     	;# 
  1022     0002                     	;# 
  1023     0003                     	;# 
  1024     0004                     	;# 
  1025     0005                     	;# 
  1026     0006                     	;# 
  1027     0007                     	;# 
  1028     0009                     	;# 
  1029     000A                     	;# 
  1030     000B                     	;# 
  1031     000C                     	;# 
  1032     000D                     	;# 
  1033     000E                     	;# 
  1034     000E                     	;# 
  1035     000F                     	;# 
  1036     0010                     	;# 
  1037     0011                     	;# 
  1038     0012                     	;# 
  1039     0013                     	;# 
  1040     0014                     	;# 
  1041     0015                     	;# 
  1042     0015                     	;# 
  1043     0016                     	;# 
  1044     0017                     	;# 
  1045     0018                     	;# 
  1046     0019                     	;# 
  1047     001A                     	;# 
  1048     001B                     	;# 
  1049     001B                     	;# 
  1050     001C                     	;# 
  1051     001D                     	;# 
  1052     001E                     	;# 
  1053     001F                     	;# 
  1054     0081                     	;# 
  1055     0085                     	;# 
  1056     0086                     	;# 
  1057     0087                     	;# 
  1058     0089                     	;# 
  1059     008C                     	;# 
  1060     008D                     	;# 
  1061     008E                     	;# 
  1062     008F                     	;# 
  1063     0090                     	;# 
  1064     0091                     	;# 
  1065     0092                     	;# 
  1066     0093                     	;# 
  1067     0093                     	;# 
  1068     0093                     	;# 
  1069     0094                     	;# 
  1070     0095                     	;# 
  1071     0096                     	;# 
  1072     0097                     	;# 
  1073     0098                     	;# 
  1074     0099                     	;# 
  1075     009A                     	;# 
  1076     009B                     	;# 
  1077     009C                     	;# 
  1078     009D                     	;# 
  1079     009E                     	;# 
  1080     009F                     	;# 
  1081     0105                     	;# 
  1082     0107                     	;# 
  1083     0108                     	;# 
  1084     0109                     	;# 
  1085     010C                     	;# 
  1086     010C                     	;# 
  1087     010D                     	;# 
  1088     010E                     	;# 
  1089     010F                     	;# 
  1090     0185                     	;# 
  1091     0187                     	;# 
  1092     0188                     	;# 
  1093     0189                     	;# 
  1094     018C                     	;# 
  1095     018D                     	;# 
  1096                           
  1097                           	psect	idataBANK0
  1098     07FD                     __pidataBANK0:
  1099                           
  1100                           ;initializer for _adcon_leitura_min
  1101     07FD  34FF               	retlw	255
  1102     07FE  34FF               	retlw	255
  1103                           
  1104                           	psect	stringtext
  1105     0300                     __pstringtext:
  1106     0300                     stringtab:
  1107     0300                     __stringtab:
  1108                           
  1109                           ;	String table - string pointers are 2 bytes each
  1110     0300  1BFF               	btfsc	btemp+1,7
  1111     0301  2B0A               	ljmp	stringcode
  1112     0302  1383               	bcf	3,7
  1113     0303  187F               	btfsc	btemp+1,0
  1114     0304  1783               	bsf	3,7
  1115     0305  0800               	movf	0,w
  1116     0306  0A84               	incf	4,f
  1117     0307  1903               	skipnz
  1118     0308  0AFF               	incf	btemp+1,f
  1119     0309  0008               	return
  1120     030A                     stringcode:
  1121     030A  087F               	movf	btemp+1,w
  1122     030B  397F               	andlw	127
  1123     030C  008A               	movwf	10
  1124     030D  0804               	movf	4,w
  1125     030E  0A84               	incf	4,f
  1126     030F  1903               	skipnz
  1127     0310  0AFF               	incf	btemp+1,f
  1128     0311  0082               	movwf	2
  1129     0312                     __stringbase:
  1130     0312                     __end_of__stringtab:
  1131     0312                     _dpowers:
  1132     0312  3401               	retlw	1
  1133     0313  3400               	retlw	0
  1134     0314  340A               	retlw	10
  1135     0315  3400               	retlw	0
  1136     0316  3464               	retlw	100
  1137     0317  3400               	retlw	0
  1138     0318  34E8               	retlw	232
  1139     0319  3403               	retlw	3
  1140     031A  3410               	retlw	16
  1141     031B  3427               	retlw	39
  1142     031C                     __end_of_dpowers:
  1143     031C                     _LCD_V_POSICOES:
  1144     031C  3401               	retlw	1
  1145     031D  3400               	retlw	0
  1146     031E  3401               	retlw	1
  1147     031F  3408               	retlw	8
  1148     0320  3402               	retlw	2
  1149     0321  3400               	retlw	0
  1150     0322  3402               	retlw	2
  1151     0323  3408               	retlw	8
  1152     0324                     __end_of_LCD_V_POSICOES:
  1153     0324                     _canais:
  1154     0324  3400               	retlw	0
  1155     0325  3401               	retlw	1
  1156     0326  3402               	retlw	2
  1157     0327  3404               	retlw	4
  1158     0328                     __end_of_canais:
  1159     0328                     exp@coeff:
  1160     0328  3400               	retlw	0
  1161     0329  3400               	retlw	0
  1162     032A  3480               	retlw	128
  1163     032B  343F               	retlw	63
  1164     032C  3418               	retlw	24
  1165     032D  3472               	retlw	114
  1166     032E  3431               	retlw	49
  1167     032F  343F               	retlw	63
  1168     0330  34F0               	retlw	240
  1169     0331  34FD               	retlw	253
  1170     0332  3475               	retlw	117
  1171     0333  343E               	retlw	62
  1172     0334  3447               	retlw	71
  1173     0335  3458               	retlw	88
  1174     0336  3463               	retlw	99
  1175     0337  343D               	retlw	61
  1176     0338  3458               	retlw	88
  1177     0339  3495               	retlw	149
  1178     033A  341D               	retlw	29
  1179     033B  343C               	retlw	60
  1180     033C  3482               	retlw	130
  1181     033D  34C4               	retlw	196
  1182     033E  34AE               	retlw	174
  1183     033F  343A               	retlw	58
  1184     0340  34A8               	retlw	168
  1185     0341  3478               	retlw	120
  1186     0342  3421               	retlw	33
  1187     0343  3439               	retlw	57
  1188     0344  34EF               	retlw	239
  1189     0345  3493               	retlw	147
  1190     0346  3480               	retlw	128
  1191     0347  3437               	retlw	55
  1192     0348  34A0               	retlw	160
  1193     0349  3492               	retlw	146
  1194     034A  34A7               	retlw	167
  1195     034B  3435               	retlw	53
  1196     034C  3446               	retlw	70
  1197     034D  3456               	retlw	86
  1198     034E  3415               	retlw	21
  1199     034F  3434               	retlw	52
  1200     0350                     __end_ofexp@coeff:
  1201     0350                     log@coeff:
  1202     0350  3400               	retlw	0
  1203     0351  3400               	retlw	0
  1204     0352  3400               	retlw	0
  1205     0353  3400               	retlw	0
  1206     0354  34C4               	retlw	196
  1207     0355  34FF               	retlw	255
  1208     0356  347F               	retlw	127
  1209     0357  343F               	retlw	63
  1210     0358  3480               	retlw	128
  1211     0359  34EF               	retlw	239
  1212     035A  34FF               	retlw	255
  1213     035B  34BE               	retlw	190
  1214     035C  3490               	retlw	144
  1215     035D  34E1               	retlw	225
  1216     035E  34A9               	retlw	169
  1217     035F  343E               	retlw	62
  1218     0360  34EC               	retlw	236
  1219     0361  3482               	retlw	130
  1220     0362  3476               	retlw	118
  1221     0363  34BE               	retlw	190
  1222     0364  3482               	retlw	130
  1223     0365  34AD               	retlw	173
  1224     0366  342B               	retlw	43
  1225     0367  343E               	retlw	62
  1226     0368  340E               	retlw	14
  1227     0369  343C               	retlw	60
  1228     036A  34C3               	retlw	195
  1229     036B  34BD               	retlw	189
  1230     036C  3487               	retlw	135
  1231     036D  34D1               	retlw	209
  1232     036E  3413               	retlw	19
  1233     036F  343D               	retlw	61
  1234     0370  3441               	retlw	65
  1235     0371  3478               	retlw	120
  1236     0372  34D3               	retlw	211
  1237     0373  34BB               	retlw	187
  1238     0374                     __end_oflog@coeff:
  1239     0374                     _menu_cfg_tempo_amostra_itens:
  1240     0374  34E6               	retlw	low (STR_14| (0+32768))
  1241     0375  3484               	retlw	high (STR_14| (0+32768))
  1242     0376  3412               	retlw	18
  1243     0377  3400               	retlw	0
  1244     0378  34CA               	retlw	low (STR_15| (0+32768))
  1245     0379  3484               	retlw	high (STR_15| (0+32768))
  1246     037A  34B4               	retlw	180
  1247     037B  3400               	retlw	0
  1248     037C  34D1               	retlw	low (STR_16| (0+32768))
  1249     037D  3484               	retlw	high (STR_16| (0+32768))
  1250     037E  341C               	retlw	28
  1251     037F  3402               	retlw	2
  1252     0380  34EC               	retlw	low (STR_17| (0+32768))
  1253     0381  3484               	retlw	high (STR_17| (0+32768))
  1254     0382  3438               	retlw	56
  1255     0383  3404               	retlw	4
  1256     0384  34D8               	retlw	low (STR_18| (0+32768))
  1257     0385  3484               	retlw	high (STR_18| (0+32768))
  1258     0386  3430               	retlw	48
  1259     0387  342A               	retlw	42
  1260     0388  34DF               	retlw	low (STR_19| (0+32768))
  1261     0389  3484               	retlw	high (STR_19| (0+32768))
  1262     038A  3490               	retlw	144
  1263     038B  347E               	retlw	126
  1264     038C  34C3               	retlw	low (STR_20| (0+32768))
  1265     038D  3484               	retlw	high (STR_20| (0+32768))
  1266     038E  3420               	retlw	32
  1267     038F  34FD               	retlw	253
  1268     0390                     __end_of_menu_cfg_tempo_amostra_itens:
  1269     0390                     _menu_principal_itens:
  1270     0390  3457               	retlw	low (STR_3| (0+32768))
  1271     0391  3484               	retlw	high (STR_3| (0+32768))
  1272     0392  3400               	retlw	0
  1273     0393  3400               	retlw	0
  1274     0394  34F2               	retlw	low (STR_4| (0+32768))
  1275     0395  3483               	retlw	high (STR_4| (0+32768))
  1276     0396  3401               	retlw	1
  1277     0397  3400               	retlw	0
  1278     0398  344B               	retlw	low (STR_5| (0+32768))
  1279     0399  3484               	retlw	high (STR_5| (0+32768))
  1280     039A  3402               	retlw	2
  1281     039B  3400               	retlw	0
  1282     039C  3497               	retlw	low (STR_6| (0+32768))
  1283     039D  3484               	retlw	high (STR_6| (0+32768))
  1284     039E  3403               	retlw	3
  1285     039F  3400               	retlw	0
  1286     03A0  34A1               	retlw	low (STR_7| (0+32768))
  1287     03A1  3484               	retlw	high (STR_7| (0+32768))
  1288     03A2  3404               	retlw	4
  1289     03A3  3400               	retlw	0
  1290     03A4  34D2               	retlw	low (STR_8| (0+32768))
  1291     03A5  3483               	retlw	high (STR_8| (0+32768))
  1292     03A6  3405               	retlw	5
  1293     03A7  3400               	retlw	0
  1294     03A8  34E2               	retlw	low (STR_9| (0+32768))
  1295     03A9  3483               	retlw	high (STR_9| (0+32768))
  1296     03AA  3406               	retlw	6
  1297     03AB  3400               	retlw	0
  1298     03AC                     __end_of_menu_principal_itens:
  1299     03AC                     _menu_cfg_quant_sensores_itens:
  1300     03AC  34AA               	retlw	low (STR_10| (0+32768))
  1301     03AD  3484               	retlw	high (STR_10| (0+32768))
  1302     03AE  3401               	retlw	1
  1303     03AF  3400               	retlw	0
  1304     03B0  3462               	retlw	low (STR_11| (0+32768))
  1305     03B1  3484               	retlw	high (STR_11| (0+32768))
  1306     03B2  3402               	retlw	2
  1307     03B3  3400               	retlw	0
  1308     03B4  346D               	retlw	low (STR_12| (0+32768))
  1309     03B5  3484               	retlw	high (STR_12| (0+32768))
  1310     03B6  3403               	retlw	3
  1311     03B7  3400               	retlw	0
  1312     03B8  3478               	retlw	low (STR_13| (0+32768))
  1313     03B9  3484               	retlw	high (STR_13| (0+32768))
  1314     03BA  3404               	retlw	4
  1315     03BB  3400               	retlw	0
  1316     03BC                     __end_of_menu_cfg_quant_sensores_itens:
  1317     03BC                     _mq_gl_r0:
  1318     03BC  347A               	retlw	122
  1319     03BD  3401               	retlw	1
  1320     03BE                     __end_of_mq_gl_r0:
  1321     0003                     _STATUSbits	set	3
  1322     0019                     _TXREG	set	25
  1323     0018                     _RCSTAbits	set	24
  1324     0001                     _TMR0	set	1
  1325     001A                     _RCREG	set	26
  1326     000C                     _PIR1bits	set	12
  1327     001E                     _ADRESH	set	30
  1328     000B                     _INTCONbits	set	11
  1329     001F                     _ADCON0bits	set	31
  1330     00C4                     _CREN	set	196
  1331     00C7                     _SPEN	set	199
  1332     0058                     _RBIF	set	88
  1333     005B                     _RBIE	set	91
  1334     0037                     _RB7	set	55
  1335     0036                     _RB6	set	54
  1336     0035                     _RB5	set	53
  1337     0034                     _RB4	set	52
  1338     0030                     _RB0	set	48
  1339     0031                     _RB1	set	49
  1340     0032                     _RB2	set	50
  1341     003A                     _RC2	set	58
  1342     0039                     _RC1	set	57
  1343     0038                     _RC0	set	56
  1344     0099                     _SPBRG	set	153
  1345     0098                     _TXSTAbits	set	152
  1346     008C                     _PIE1bits	set	140
  1347     0096                     _IOCB	set	150
  1348     0095                     _WPUB	set	149
  1349     0081                     _OPTION_REGbits	set	129
  1350     009E                     _ADRESL	set	158
  1351     009F                     _ADCON1bits	set	159
  1352     0085                     _TRISA	set	133
  1353     04C6                     _TX9	set	1222
  1354     04C2                     _BRGH	set	1218
  1355     04C4                     _SYNC	set	1220
  1356     04C5                     _TXEN	set	1221
  1357     043F                     _TRISC7	set	1087
  1358     043E                     _TRISC6	set	1086
  1359     0437                     _TRISB7	set	1079
  1360     0436                     _TRISB6	set	1078
  1361     0435                     _TRISB5	set	1077
  1362     0434                     _TRISB4	set	1076
  1363     0430                     _TRISB0	set	1072
  1364     0431                     _TRISB1	set	1073
  1365     0432                     _TRISB2	set	1074
  1366     043A                     _TRISC2	set	1082
  1367     0439                     _TRISC1	set	1081
  1368     0438                     _TRISC0	set	1080
  1369     010C                     _EEDATA	set	268
  1370     010D                     _EEADR	set	269
  1371     018D                     _EECON2	set	397
  1372     018C                     _EECON1	set	396
  1373     018C                     _EECON1bits	set	396
  1374     0189                     _ANSELH	set	393
  1375     0188                     _ANSEL	set	392
  1376     0C3B                     _BRG16	set	3131
  1377     03BE                     STR_46:
  1378     03BE  3431               	retlw	49	;'1'
  1379     03BF  3431               	retlw	49	;'1'
  1380     03C0  342F               	retlw	47	;'/'
  1381     03C1  3430               	retlw	48	;'0'
  1382     03C2  3439               	retlw	57	;'9'
  1383     03C3  342F               	retlw	47	;'/'
  1384     03C4  3432               	retlw	50	;'2'
  1385     03C5  3430               	retlw	48	;'0'
  1386     03C6  3432               	retlw	50	;'2'
  1387     03C7  3433               	retlw	51	;'3'
  1388     03C8  3420               	retlw	32	;' '
  1389     03C9  342D               	retlw	45	;'-'
  1390     03CA  3420               	retlw	32	;' '
  1391     03CB  3476               	retlw	118	;'v'
  1392     03CC  3431               	retlw	49	;'1'
  1393     03CD  342E               	retlw	46	;'.'
  1394     03CE  3436               	retlw	54	;'6'
  1395     03CF  3430               	retlw	48	;'0'
  1396     03D0  342D               	retlw	45	;'-'
  1397     03D1  3400               	retlw	0
  1398     03D2                     STR_8:
  1399     03D2  3436               	retlw	54	;'6'
  1400     03D3  3429               	retlw	41	;')'
  1401     03D4  3454               	retlw	84	;'T'
  1402     03D5  3465               	retlw	101	;'e'
  1403     03D6  346D               	retlw	109	;'m'
  1404     03D7  3470               	retlw	112	;'p'
  1405     03D8  346F               	retlw	111	;'o'
  1406     03D9  3420               	retlw	32	;' '
  1407     03DA  3441               	retlw	65	;'A'
  1408     03DB  346D               	retlw	109	;'m'
  1409     03DC  346F               	retlw	111	;'o'
  1410     03DD  3473               	retlw	115	;'s'
  1411     03DE  3474               	retlw	116	;'t'
  1412     03DF  3472               	retlw	114	;'r'
  1413     03E0  3461               	retlw	97	;'a'
  1414     03E1  3400               	retlw	0
  1415     03E2                     STR_9:
  1416     03E2  3437               	retlw	55	;'7'
  1417     03E3  3429               	retlw	41	;')'
  1418     03E4  3451               	retlw	81	;'Q'
  1419     03E5  3475               	retlw	117	;'u'
  1420     03E6  3461               	retlw	97	;'a'
  1421     03E7  346E               	retlw	110	;'n'
  1422     03E8  3474               	retlw	116	;'t'
  1423     03E9  342E               	retlw	46	;'.'
  1424     03EA  3453               	retlw	83	;'S'
  1425     03EB  3465               	retlw	101	;'e'
  1426     03EC  346E               	retlw	110	;'n'
  1427     03ED  3473               	retlw	115	;'s'
  1428     03EE  346F               	retlw	111	;'o'
  1429     03EF  3472               	retlw	114	;'r'
  1430     03F0  3473               	retlw	115	;'s'
  1431     03F1  3400               	retlw	0
  1432     03F2                     STR_4:
  1433     03F2  3432               	retlw	50	;'2'
  1434     03F3  3429               	retlw	41	;')'
  1435     03F4  344D               	retlw	77	;'M'
  1436     03F5  346F               	retlw	111	;'o'
  1437     03F6  346E               	retlw	110	;'n'
  1438     03F7  3469               	retlw	105	;'i'
  1439     03F8  3474               	retlw	116	;'t'
  1440     03F9  342F               	retlw	47	;'/'
  1441     03FA  3447               	retlw	71	;'G'
  1442     03FB  3472               	retlw	114	;'r'
  1443     03FC  3461               	retlw	97	;'a'
  1444     03FD  3476               	retlw	118	;'v'
  1445     03FE  3461               	retlw	97	;'a'
  1446     03FF  3400               	retlw	0
  1447     0400                     STR_1:
  1448     0400  344D               	retlw	77	;'M'
  1449     0401  3465               	retlw	101	;'e'
  1450     0402  346D               	retlw	109	;'m'
  1451     0403  346F               	retlw	111	;'o'
  1452     0404  3472               	retlw	114	;'r'
  1453     0405  3469               	retlw	105	;'i'
  1454     0406  3461               	retlw	97	;'a'
  1455     0407  3420               	retlw	32	;' '
  1456     0408  3443               	retlw	67	;'C'
  1457     0409  3468               	retlw	104	;'h'
  1458     040A  3465               	retlw	101	;'e'
  1459     040B  3469               	retlw	105	;'i'
  1460     040C  3461               	retlw	97	;'a'
  1461     040D  3400               	retlw	0
  1462     040E                     STR_48:
  1463     040E  3449               	retlw	73	;'I'
  1464     040F  346E               	retlw	110	;'n'
  1465     0410  3469               	retlw	105	;'i'
  1466     0411  3463               	retlw	99	;'c'
  1467     0412  3469               	retlw	105	;'i'
  1468     0413  3461               	retlw	97	;'a'
  1469     0414  346E               	retlw	110	;'n'
  1470     0415  3464               	retlw	100	;'d'
  1471     0416  346F               	retlw	111	;'o'
  1472     0417  342E               	retlw	46	;'.'
  1473     0418  342E               	retlw	46	;'.'
  1474     0419  342E               	retlw	46	;'.'
  1475     041A  3400               	retlw	0
  1476     041B                     STR_49:
  1477     041B  3450               	retlw	80	;'P'
  1478     041C  3472               	retlw	114	;'r'
  1479     041D  346F               	retlw	111	;'o'
  1480     041E  346E               	retlw	110	;'n'
  1481     041F  3474               	retlw	116	;'t'
  1482     0420  346F               	retlw	111	;'o'
  1483     0421  3421               	retlw	33	;'!'
  1484     0422  3420               	retlw	32	;' '
  1485     0423  3420               	retlw	32	;' '
  1486     0424  3420               	retlw	32	;' '
  1487     0425  3420               	retlw	32	;' '
  1488     0426  3400               	retlw	0
  1489     0427                     STR_26:
  1490     0427  344C               	retlw	76	;'L'
  1491     0428  3469               	retlw	105	;'i'
  1492     0429  346D               	retlw	109	;'m'
  1493     042A  3470               	retlw	112	;'p'
  1494     042B  3461               	retlw	97	;'a'
  1495     042C  346E               	retlw	110	;'n'
  1496     042D  3464               	retlw	100	;'d'
  1497     042E  346F               	retlw	111	;'o'
  1498     042F  342E               	retlw	46	;'.'
  1499     0430  342E               	retlw	46	;'.'
  1500     0431  342E               	retlw	46	;'.'
  1501     0432  3400               	retlw	0
  1502     0433                     STR_27:
  1503     0433  3454               	retlw	84	;'T'
  1504     0434  3475               	retlw	117	;'u'
  1505     0435  3464               	retlw	100	;'d'
  1506     0436  346F               	retlw	111	;'o'
  1507     0437  3420               	retlw	32	;' '
  1508     0438  344C               	retlw	76	;'L'
  1509     0439  3469               	retlw	105	;'i'
  1510     043A  346D               	retlw	109	;'m'
  1511     043B  3470               	retlw	112	;'p'
  1512     043C  346F               	retlw	111	;'o'
  1513     043D  342E               	retlw	46	;'.'
  1514     043E  3400               	retlw	0
  1515     043F                     STR_21:
  1516     043F  344E               	retlw	78	;'N'
  1517     0440  3465               	retlw	101	;'e'
  1518     0441  346E               	retlw	110	;'n'
  1519     0442  3468               	retlw	104	;'h'
  1520     0443  3475               	retlw	117	;'u'
  1521     0444  346D               	retlw	109	;'m'
  1522     0445  3420               	retlw	32	;' '
  1523     0446  3444               	retlw	68	;'D'
  1524     0447  3461               	retlw	97	;'a'
  1525     0448  3464               	retlw	100	;'d'
  1526     0449  346F               	retlw	111	;'o'
  1527     044A  3400               	retlw	0
  1528     044B                     STR_5:
  1529     044B  3433               	retlw	51	;'3'
  1530     044C  3429               	retlw	41	;')'
  1531     044D  3456               	retlw	86	;'V'
  1532     044E  3465               	retlw	101	;'e'
  1533     044F  3472               	retlw	114	;'r'
  1534     0450  3420               	retlw	32	;' '
  1535     0451  3454               	retlw	84	;'T'
  1536     0452  346F               	retlw	111	;'o'
  1537     0453  3464               	retlw	100	;'d'
  1538     0454  346F               	retlw	111	;'o'
  1539     0455  3473               	retlw	115	;'s'
  1540     0456  3400               	retlw	0
  1541     0457                     STR_3:
  1542     0457  3431               	retlw	49	;'1'
  1543     0458  3429               	retlw	41	;')'
  1544     0459  344D               	retlw	77	;'M'
  1545     045A  346F               	retlw	111	;'o'
  1546     045B  346E               	retlw	110	;'n'
  1547     045C  3469               	retlw	105	;'i'
  1548     045D  3474               	retlw	116	;'t'
  1549     045E  346F               	retlw	111	;'o'
  1550     045F  3472               	retlw	114	;'r'
  1551     0460  3461               	retlw	97	;'a'
  1552     0461  3400               	retlw	0
  1553     0462                     STR_11:
  1554     0462  3432               	retlw	50	;'2'
  1555     0463  3420               	retlw	32	;' '
  1556     0464  3473               	retlw	115	;'s'
  1557     0465  3465               	retlw	101	;'e'
  1558     0466  346E               	retlw	110	;'n'
  1559     0467  3473               	retlw	115	;'s'
  1560     0468  346F               	retlw	111	;'o'
  1561     0469  3472               	retlw	114	;'r'
  1562     046A  3465               	retlw	101	;'e'
  1563     046B  3473               	retlw	115	;'s'
  1564     046C  3400               	retlw	0
  1565     046D                     STR_12:
  1566     046D  3433               	retlw	51	;'3'
  1567     046E  3420               	retlw	32	;' '
  1568     046F  3473               	retlw	115	;'s'
  1569     0470  3465               	retlw	101	;'e'
  1570     0471  346E               	retlw	110	;'n'
  1571     0472  3473               	retlw	115	;'s'
  1572     0473  346F               	retlw	111	;'o'
  1573     0474  3472               	retlw	114	;'r'
  1574     0475  3465               	retlw	101	;'e'
  1575     0476  3473               	retlw	115	;'s'
  1576     0477  3400               	retlw	0
  1577     0478                     STR_13:
  1578     0478  3434               	retlw	52	;'4'
  1579     0479  3420               	retlw	32	;' '
  1580     047A  3473               	retlw	115	;'s'
  1581     047B  3465               	retlw	101	;'e'
  1582     047C  346E               	retlw	110	;'n'
  1583     047D  3473               	retlw	115	;'s'
  1584     047E  346F               	retlw	111	;'o'
  1585     047F  3472               	retlw	114	;'r'
  1586     0480  3465               	retlw	101	;'e'
  1587     0481  3473               	retlw	115	;'s'
  1588     0482  3400               	retlw	0
  1589     0483                     STR_25:
  1590     0483  344D               	retlw	77	;'M'
  1591     0484  3469               	retlw	105	;'i'
  1592     0485  346E               	retlw	110	;'n'
  1593     0486  343D               	retlw	61	;'='
  1594     0487  3425               	retlw	37	;'%'
  1595     0488  3464               	retlw	100	;'d'
  1596     0489  342E               	retlw	46	;'.'
  1597     048A  3425               	retlw	37	;'%'
  1598     048B  3464               	retlw	100	;'d'
  1599     048C  3400               	retlw	0
  1600     048D                     STR_24:
  1601     048D  344D               	retlw	77	;'M'
  1602     048E  3461               	retlw	97	;'a'
  1603     048F  3478               	retlw	120	;'x'
  1604     0490  343D               	retlw	61	;'='
  1605     0491  3425               	retlw	37	;'%'
  1606     0492  3464               	retlw	100	;'d'
  1607     0493  342E               	retlw	46	;'.'
  1608     0494  3425               	retlw	37	;'%'
  1609     0495  3464               	retlw	100	;'d'
  1610     0496  3400               	retlw	0
  1611     0497                     STR_6:
  1612     0497  3434               	retlw	52	;'4'
  1613     0498  3429               	retlw	41	;')'
  1614     0499  344D               	retlw	77	;'M'
  1615     049A  3461               	retlw	97	;'a'
  1616     049B  3478               	retlw	120	;'x'
  1617     049C  342F               	retlw	47	;'/'
  1618     049D  344D               	retlw	77	;'M'
  1619     049E  3469               	retlw	105	;'i'
  1620     049F  346E               	retlw	110	;'n'
  1621     04A0  3400               	retlw	0
  1622     04A1                     STR_7:
  1623     04A1  3435               	retlw	53	;'5'
  1624     04A2  3429               	retlw	41	;')'
  1625     04A3  344C               	retlw	76	;'L'
  1626     04A4  3469               	retlw	105	;'i'
  1627     04A5  346D               	retlw	109	;'m'
  1628     04A6  3470               	retlw	112	;'p'
  1629     04A7  3461               	retlw	97	;'a'
  1630     04A8  3472               	retlw	114	;'r'
  1631     04A9  3400               	retlw	0
  1632     04AA                     STR_10:
  1633     04AA  3431               	retlw	49	;'1'
  1634     04AB  3420               	retlw	32	;' '
  1635     04AC  3473               	retlw	115	;'s'
  1636     04AD  3465               	retlw	101	;'e'
  1637     04AE  346E               	retlw	110	;'n'
  1638     04AF  3473               	retlw	115	;'s'
  1639     04B0  346F               	retlw	111	;'o'
  1640     04B1  3472               	retlw	114	;'r'
  1641     04B2  3400               	retlw	0
  1642     04B3                     STR_2:
  1643     04B3  3425               	retlw	37	;'%'
  1644     04B4  3464               	retlw	100	;'d'
  1645     04B5  343D               	retlw	61	;'='
  1646     04B6  3425               	retlw	37	;'%'
  1647     04B7  3464               	retlw	100	;'d'
  1648     04B8  342E               	retlw	46	;'.'
  1649     04B9  3425               	retlw	37	;'%'
  1650     04BA  3464               	retlw	100	;'d'
  1651     04BB  3400               	retlw	0
  1652     04BC                     STR_50:
  1653     04BC  3470               	retlw	112	;'p'
  1654     04BD  3470               	retlw	112	;'p'
  1655     04BE  346D               	retlw	109	;'m'
  1656     04BF  343D               	retlw	61	;'='
  1657     04C0  3425               	retlw	37	;'%'
  1658     04C1  3475               	retlw	117	;'u'
  1659     04C2  3400               	retlw	0
  1660     04C3                     STR_20:
  1661     04C3  3431               	retlw	49	;'1'
  1662     04C4  3420               	retlw	32	;' '
  1663     04C5  3468               	retlw	104	;'h'
  1664     04C6  346F               	retlw	111	;'o'
  1665     04C7  3472               	retlw	114	;'r'
  1666     04C8  3461               	retlw	97	;'a'
  1667     04C9  3400               	retlw	0
  1668     04CA                     STR_15:
  1669     04CA  3431               	retlw	49	;'1'
  1670     04CB  3430               	retlw	48	;'0'
  1671     04CC  3420               	retlw	32	;' '
  1672     04CD  3473               	retlw	115	;'s'
  1673     04CE  3465               	retlw	101	;'e'
  1674     04CF  3467               	retlw	103	;'g'
  1675     04D0  3400               	retlw	0
  1676     04D1                     STR_16:
  1677     04D1  3433               	retlw	51	;'3'
  1678     04D2  3430               	retlw	48	;'0'
  1679     04D3  3420               	retlw	32	;' '
  1680     04D4  3473               	retlw	115	;'s'
  1681     04D5  3465               	retlw	101	;'e'
  1682     04D6  3467               	retlw	103	;'g'
  1683     04D7  3400               	retlw	0
  1684     04D8                     STR_18:
  1685     04D8  3431               	retlw	49	;'1'
  1686     04D9  3430               	retlw	48	;'0'
  1687     04DA  3420               	retlw	32	;' '
  1688     04DB  346D               	retlw	109	;'m'
  1689     04DC  3469               	retlw	105	;'i'
  1690     04DD  346E               	retlw	110	;'n'
  1691     04DE  3400               	retlw	0
  1692     04DF                     STR_19:
  1693     04DF  3433               	retlw	51	;'3'
  1694     04E0  3430               	retlw	48	;'0'
  1695     04E1  3420               	retlw	32	;' '
  1696     04E2  346D               	retlw	109	;'m'
  1697     04E3  3469               	retlw	105	;'i'
  1698     04E4  346E               	retlw	110	;'n'
  1699     04E5  3400               	retlw	0
  1700     04E6                     STR_14:
  1701     04E6  3431               	retlw	49	;'1'
  1702     04E7  3420               	retlw	32	;' '
  1703     04E8  3473               	retlw	115	;'s'
  1704     04E9  3465               	retlw	101	;'e'
  1705     04EA  3467               	retlw	103	;'g'
  1706     04EB  3400               	retlw	0
  1707     04EC                     STR_17:
  1708     04EC  3431               	retlw	49	;'1'
  1709     04ED  3420               	retlw	32	;' '
  1710     04EE  346D               	retlw	109	;'m'
  1711     04EF  3469               	retlw	105	;'i'
  1712     04F0  346E               	retlw	110	;'n'
  1713     04F1  3400               	retlw	0
  1714     04F2                     STR_47:
  1715     04F2  344E               	retlw	78	;'N'
  1716     04F3  3400               	retlw	0
  1717     04C3                     
  1718                           	psect	cinit
  1719     0015                     start_initialization:	
  1720                           ; #config settings
  1721                           
  1722     0015                     __initialization:
  1723                           
  1724                           ; Initialize objects allocated to BANK0
  1725     0015  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1726     001A  00EC               	movwf	__pdataBANK0& (0+127)
  1727     001B  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1728     0020  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  1729                           
  1730                           ; Clear objects allocated to BANK3
  1731     0021  1783               	bsf	3,7	;select IRP bank2
  1732     0022  3090               	movlw	low __pbssBANK3
  1733     0023  0084               	movwf	4
  1734     0024  30A0               	movlw	low (__pbssBANK3+16)
  1735     0025  160A  118A  25D3  120A  118A  	fcall	clear_ram0
  1736                           
  1737                           ; Clear objects allocated to BANK1
  1738     002A  1383               	bcf	3,7	;select IRP bank0
  1739     002B  30A0               	movlw	low __pbssBANK1
  1740     002C  0084               	movwf	4
  1741     002D  30DE               	movlw	low (__pbssBANK1+62)
  1742     002E  160A  118A  25D3  120A  118A  	fcall	clear_ram0
  1743                           
  1744                           ; Clear objects allocated to BANK0
  1745     0033  01E5               	clrf	__pbssBANK0& (0+127)
  1746     0034  01E6               	clrf	(__pbssBANK0+1)& (0+127)
  1747     0035  01E7               	clrf	(__pbssBANK0+2)& (0+127)
  1748     0036  01E8               	clrf	(__pbssBANK0+3)& (0+127)
  1749     0037  01E9               	clrf	(__pbssBANK0+4)& (0+127)
  1750     0038  01EA               	clrf	(__pbssBANK0+5)& (0+127)
  1751     0039  01EB               	clrf	(__pbssBANK0+6)& (0+127)
  1752     003A                     end_of_initialization:	
  1753                           ;End of C runtime variable initialization code
  1754                           
  1755     003A                     __end_of__initialization:
  1756     003A  0183               	clrf	3
  1757     003B  120A  118A  2CF4   	ljmp	_main	;jump to C main() function
  1758                           
  1759                           	psect	bssBANK0
  1760     0065                     __pbssBANK0:
  1761     0065                     handler@count_t0:
  1762     0065                     	ds	2
  1763     0067                     _est_ver_todos_index_amostra:
  1764     0067                     	ds	1
  1765     0068                     _est_estado_atual:
  1766     0068                     	ds	1
  1767     0069                     _cfg_tempo_amostra_atual:
  1768     0069                     	ds	1
  1769     006A                     _adcon_quant_amostras_gravadas:
  1770     006A                     	ds	1
  1771     006B                     _cfg_quant_sensores_atual:
  1772     006B                     	ds	1
  1773                           
  1774                           	psect	dataBANK0
  1775     006C                     __pdataBANK0:
  1776     006C                     _adcon_leitura_min:
  1777     006C                     	ds	2
  1778                           
  1779                           	psect	bssBANK1
  1780     00A0                     __pbssBANK1:
  1781     00A0                     est_executa@F1430:
  1782     00A0                     	ds	17
  1783     00B1                     mq_mostra@F1379:
  1784     00B1                     	ds	16
  1785     00C1                     adcon_print@F1457:
  1786     00C1                     	ds	9
  1787     00CA                     _errno:
  1788     00CA                     	ds	2
  1789     00CC                     _adcon_leitura_max:
  1790     00CC                     	ds	2
  1791     00CE                     _cfg_quant_sensores_amostrados:
  1792     00CE                     	ds	1
  1793     00CF                     _menu_cfg_tempo_amostra:
  1794     00CF                     	ds	5
  1795     00D4                     _menu_cfg_quant_sensores:
  1796     00D4                     	ds	5
  1797     00D9                     _menu_principal:
  1798     00D9                     	ds	5
  1799                           
  1800                           	psect	bssBANK3
  1801     0190                     __pbssBANK3:
  1802     0190                     mq_mostra@F1381:
  1803     0190                     	ds	16
  1804                           
  1805                           	psect	clrtext
  1806     15D3                     clear_ram0:	
  1807                           ;	Called with FSR containing the base address, and
  1808                           ;	W with the last address+1
  1809                           
  1810     15D3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1811     15D4                     clrloop0:
  1812     15D4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1813     15D5  0A84               	incf	4,f	;increment pointer
  1814     15D6  0604               	xorwf	4,w	;XOR with final address
  1815     15D7  1903               	btfsc	3,2	;have we reached the end yet?
  1816     15D8  3400               	retlw	0	;all done for this memory range, return
  1817     15D9  0604               	xorwf	4,w	;XOR again to restore value
  1818     15DA  2DD4               	goto	clrloop0	;do the next byte
  1819                           
  1820                           	psect	cstackBANK3
  1821     01A0                     __pcstackBANK3:
  1822     01A0                     menu_set_value_indexes@i:
  1823                           
  1824                           ; 1 bytes @ 0x0
  1825     01A0                     	ds	1
  1826     01A1                     menu_set_value_indexes@menu:
  1827                           
  1828                           ; 1 bytes @ 0x1
  1829     01A1                     	ds	1
  1830     01A2                     ??_main:
  1831                           
  1832                           ; 1 bytes @ 0x2
  1833     01A2                     	ds	3
  1834     01A5                     main@qtd_sens:
  1835                           
  1836                           ; 1 bytes @ 0x5
  1837     01A5                     	ds	1
  1838     01A6                     main@i:
  1839                           
  1840                           ; 1 bytes @ 0x6
  1841     01A6                     	ds	1
  1842                           
  1843                           	psect	cstackBANK1
  1844     00DE                     __pcstackBANK1:
  1845     00DE                     handler@tempo_amostra:
  1846                           
  1847                           ; 2 bytes @ 0x0
  1848     00DE                     	ds	2
  1849     00E0                     handler@botao:
  1850                           
  1851                           ; 1 bytes @ 0x2
  1852     00E0                     	ds	1
  1853     00E1                     ??_lcd_write:
  1854     00E1                     ?_eeprom_write:	
  1855                           ; 1 bytes @ 0x3
  1856                           
  1857     00E1                     ??_eeprom_read:	
  1858                           ; 1 bytes @ 0x3
  1859                           
  1860     00E1                     ??_rs232_init:	
  1861                           ; 1 bytes @ 0x3
  1862                           
  1863     00E1                     ??_timer0_init:	
  1864                           ; 1 bytes @ 0x3
  1865                           
  1866     00E1                     ?_menu_set_value_indexes:	
  1867                           ; 1 bytes @ 0x3
  1868                           
  1869     00E1                     ?_menu_init:	
  1870                           ; 1 bytes @ 0x3
  1871                           
  1872     00E1                     ??_adcon_init:	
  1873                           ; 1 bytes @ 0x3
  1874                           
  1875     00E1                     ??_btns_init:	
  1876                           ; 1 bytes @ 0x3
  1877                           
  1878     00E1                     eeprom_read@addr:	
  1879                           ; 1 bytes @ 0x3
  1880                           
  1881     00E1                     eeprom_write@value:	
  1882                           ; 1 bytes @ 0x3
  1883                           
  1884     00E1                     menu_init@itens:	
  1885                           ; 1 bytes @ 0x3
  1886                           
  1887     00E1                     menu_set_value_indexes@value:	
  1888                           ; 2 bytes @ 0x3
  1889                           
  1890                           
  1891                           ; 2 bytes @ 0x3
  1892     00E1                     	ds	1
  1893     00E2                     ??_eeprom_write:
  1894     00E2                     lcd_write@c:	
  1895                           ; 1 bytes @ 0x4
  1896                           
  1897     00E2                     eeprom_write@addr:	
  1898                           ; 1 bytes @ 0x4
  1899                           
  1900                           
  1901                           ; 1 bytes @ 0x4
  1902     00E2                     	ds	1
  1903     00E3                     ?_eeprom_grava_word:
  1904     00E3                     ??_menu_set_value_indexes:	
  1905                           ; 1 bytes @ 0x5
  1906                           
  1907     00E3                     ??_lcd_init:	
  1908                           ; 1 bytes @ 0x5
  1909                           
  1910     00E3                     ?_lcd_goto:	
  1911                           ; 1 bytes @ 0x5
  1912                           
  1913     00E3                     ?_lcd_puts:	
  1914                           ; 1 bytes @ 0x5
  1915                           
  1916     00E3                     lcd_goto@coluna:	
  1917                           ; 1 bytes @ 0x5
  1918                           
  1919     00E3                     menu_init@quant_itens:	
  1920                           ; 1 bytes @ 0x5
  1921                           
  1922     00E3                     lcd_puts@str:	
  1923                           ; 1 bytes @ 0x5
  1924                           
  1925     00E3                     eeprom_grava_word@dado:	
  1926                           ; 2 bytes @ 0x5
  1927                           
  1928                           
  1929                           ; 2 bytes @ 0x5
  1930     00E3                     	ds	1
  1931     00E4                     ??_menu_init:
  1932     00E4                     ??_lcd_goto:	
  1933                           ; 1 bytes @ 0x6
  1934                           
  1935     00E4                     menu_init@menu:	
  1936                           ; 1 bytes @ 0x6
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x6
  1940     00E4                     	ds	1
  1941     00E5                     ??_eeprom_grava_word:
  1942     00E5                     ??_lcd_puts:	
  1943                           ; 1 bytes @ 0x7
  1944                           
  1945     00E5                     eeprom_grava_word@end:	
  1946                           ; 1 bytes @ 0x7
  1947                           
  1948                           
  1949                           ; 1 bytes @ 0x7
  1950     00E5                     	ds	1
  1951     00E6                     lcd_goto@linha:
  1952     00E6                     lcd_puts@cmd:	
  1953                           ; 1 bytes @ 0x8
  1954                           
  1955                           
  1956                           ; 1 bytes @ 0x8
  1957     00E6                     	ds	6
  1958                           
  1959                           	psect	cstackCOMMON
  1960     0070                     __pcstackCOMMON:
  1961     0070                     ?_lcd_write:
  1962     0070                     ?_eeprom_read:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     0070                     ?_est_estado_inicial:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968     0070                     ?_est_estado_menu_principal:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971     0070                     ?_est_estado_monitora:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974     0070                     ?_est_estado_ver_todos:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977     0070                     ?_est_estado_mostra_max_min:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980     0070                     ?_est_estado_menu_limpar:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983     0070                     ?_est_estado_menu_conf_tempo_amostra:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986     0070                     ?_est_estado_menu_conf_quant_sensores:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989     0070                     ?_est_executa:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992     0070                     ?_menu_dec_index:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995     0070                     ??_menu_dec_index:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998     0070                     ?_menu_inc_index:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001     0070                     ??_menu_inc_index:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004     0070                     ?_menu_get_index_nav:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007     0070                     ??_menu_get_index_nav:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010     0070                     ?_menu_confirma_index:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013     0070                     ??_menu_confirma_index:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016     0070                     ?_menu_restore_index:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019     0070                     ??_menu_restore_index:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022     0070                     ?_rs232_transmite:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025     0070                     ?_rs232_init:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028     0070                     ?_timer0_init:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031     0070                     ?_lcd_init:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034     0070                     ?_lcd_clear:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037     0070                     ?_lcd_goto_sensor:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040     0070                     ?_adcon_init:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043     0070                     ?_adcon_amostra_print:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046     0070                     ?_adcon_amostra_print_grava:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049     0070                     ?_btns_init:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052     0070                     ?_btns_testa:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055     0070                     ??_btns_testa:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058     0070                     ?_est_maquina:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061     0070                     ?_handler:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064     0070                     ?___bmul:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067     0070                     ?i1_lcd_write:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070     0070                     ??i1_lcd_write:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073     0070                     ?i1_eeprom_read:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076     0070                     ??i1_eeprom_read:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079     0070                     ?i1_eeprom_write:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082     0070                     ?_adcon_le_sensor:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0070                     ?_menu_get_value_active:	
  2086                           ; 2 bytes @ 0x0
  2087                           
  2088     0070                     ?_main:	
  2089                           ; 2 bytes @ 0x0
  2090                           
  2091     0070                     ?___awdiv:	
  2092                           ; 2 bytes @ 0x0
  2093                           
  2094     0070                     ?___awmod:	
  2095                           ; 2 bytes @ 0x0
  2096                           
  2097     0070                     ?___lwdiv:	
  2098                           ; 2 bytes @ 0x0
  2099                           
  2100     0070                     est_estado_inicial@botao:	
  2101                           ; 2 bytes @ 0x0
  2102                           
  2103     0070                     menu_get_index_nav@menu:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106     0070                     menu_dec_index@menu:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109     0070                     menu_restore_index@menu:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112     0070                     menu_confirma_index@menu:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ___bmul@multiplicand:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     i1eeprom_read@addr:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     i1eeprom_write@value:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ___awdiv@divisor:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ___awmod@divisor:	
  2128                           ; 2 bytes @ 0x0
  2129                           
  2130     0070                     ___lwdiv@divisor:	
  2131                           ; 2 bytes @ 0x0
  2132                           
  2133                           
  2134                           ; 2 bytes @ 0x0
  2135     0070                     	ds	1
  2136     0071                     ??_rs232_transmite:
  2137     0071                     ??___bmul:	
  2138                           ; 1 bytes @ 0x1
  2139                           
  2140     0071                     ??i1_eeprom_write:	
  2141                           ; 1 bytes @ 0x1
  2142                           
  2143     0071                     ?_eeprom_le_word:	
  2144                           ; 1 bytes @ 0x1
  2145                           
  2146     0071                     ___bmul@product:	
  2147                           ; 2 bytes @ 0x1
  2148                           
  2149     0071                     i1lcd_write@c:	
  2150                           ; 1 bytes @ 0x1
  2151                           
  2152     0071                     i1eeprom_write@addr:	
  2153                           ; 1 bytes @ 0x1
  2154                           
  2155                           
  2156                           ; 1 bytes @ 0x1
  2157     0071                     	ds	1
  2158     0072                     ??_adcon_le_sensor:
  2159     0072                     ??_menu_get_value_active:	
  2160                           ; 1 bytes @ 0x2
  2161                           
  2162     0072                     ??_lcd_clear:	
  2163                           ; 1 bytes @ 0x2
  2164                           
  2165     0072                     ?i1_lcd_goto:	
  2166                           ; 1 bytes @ 0x2
  2167                           
  2168     0072                     ?i1_lcd_puts:	
  2169                           ; 1 bytes @ 0x2
  2170                           
  2171     0072                     ?i1_eeprom_grava_word:	
  2172                           ; 1 bytes @ 0x2
  2173                           
  2174     0072                     menu_inc_index@menu:	
  2175                           ; 1 bytes @ 0x2
  2176                           
  2177     0072                     ___bmul@multiplier:	
  2178                           ; 1 bytes @ 0x2
  2179                           
  2180     0072                     i1lcd_goto@coluna:	
  2181                           ; 1 bytes @ 0x2
  2182                           
  2183     0072                     ___awdiv@dividend:	
  2184                           ; 1 bytes @ 0x2
  2185                           
  2186     0072                     ___awmod@dividend:	
  2187                           ; 2 bytes @ 0x2
  2188                           
  2189     0072                     ___lwdiv@dividend:	
  2190                           ; 2 bytes @ 0x2
  2191                           
  2192     0072                     i1lcd_puts@str:	
  2193                           ; 2 bytes @ 0x2
  2194                           
  2195     0072                     i1eeprom_grava_word@dado:	
  2196                           ; 2 bytes @ 0x2
  2197                           
  2198                           
  2199                           ; 2 bytes @ 0x2
  2200     0072                     	ds	1
  2201     0073                     ??_eeprom_le_word:
  2202     0073                     ??i1_lcd_goto:	
  2203                           ; 1 bytes @ 0x3
  2204                           
  2205     0073                     rs232_transmite@qtd_val:	
  2206                           ; 1 bytes @ 0x3
  2207                           
  2208                           
  2209                           ; 1 bytes @ 0x3
  2210     0073                     	ds	1
  2211     0074                     ??___awdiv:
  2212     0074                     ??___awmod:	
  2213                           ; 1 bytes @ 0x4
  2214                           
  2215     0074                     ??___lwdiv:	
  2216                           ; 1 bytes @ 0x4
  2217                           
  2218     0074                     ??i1_lcd_puts:	
  2219                           ; 1 bytes @ 0x4
  2220                           
  2221     0074                     ??i1_eeprom_grava_word:	
  2222                           ; 1 bytes @ 0x4
  2223                           
  2224     0074                     rs232_transmite@qtd_sens:	
  2225                           ; 1 bytes @ 0x4
  2226                           
  2227     0074                     ___awdiv@counter:	
  2228                           ; 1 bytes @ 0x4
  2229                           
  2230     0074                     ___awmod@counter:	
  2231                           ; 1 bytes @ 0x4
  2232                           
  2233     0074                     ___lwdiv@counter:	
  2234                           ; 1 bytes @ 0x4
  2235                           
  2236     0074                     i1eeprom_grava_word@end:	
  2237                           ; 1 bytes @ 0x4
  2238                           
  2239                           
  2240                           ; 1 bytes @ 0x4
  2241     0074                     	ds	1
  2242     0075                     eeprom_le_word@end:
  2243     0075                     rs232_transmite@qtd_bytes:	
  2244                           ; 1 bytes @ 0x5
  2245                           
  2246     0075                     ___awdiv@sign:	
  2247                           ; 1 bytes @ 0x5
  2248                           
  2249     0075                     ___awmod@sign:	
  2250                           ; 1 bytes @ 0x5
  2251                           
  2252     0075                     i1lcd_goto@linha:	
  2253                           ; 1 bytes @ 0x5
  2254                           
  2255     0075                     i1lcd_puts@cmd:	
  2256                           ; 1 bytes @ 0x5
  2257                           
  2258     0075                     ___lwdiv@quotient:	
  2259                           ; 1 bytes @ 0x5
  2260                           
  2261                           
  2262                           ; 2 bytes @ 0x5
  2263     0075                     	ds	1
  2264     0076                     ??_lcd_goto_sensor:
  2265     0076                     adcon_le_sensor@num_sensor:	
  2266                           ; 1 bytes @ 0x6
  2267                           
  2268     0076                     rs232_transmite@x:	
  2269                           ; 1 bytes @ 0x6
  2270                           
  2271     0076                     eeprom_le_word@temp_int:	
  2272                           ; 1 bytes @ 0x6
  2273                           
  2274     0076                     ___awdiv@quotient:	
  2275                           ; 2 bytes @ 0x6
  2276                           
  2277                           
  2278                           ; 2 bytes @ 0x6
  2279     0076                     	ds	1
  2280     0077                     ?___lwmod:
  2281     0077                     lcd_goto_sensor@num_sensor:	
  2282                           ; 2 bytes @ 0x7
  2283                           
  2284     0077                     rs232_transmite@i:	
  2285                           ; 1 bytes @ 0x7
  2286                           
  2287     0077                     ___lwmod@divisor:	
  2288                           ; 1 bytes @ 0x7
  2289                           
  2290     0077                     adcon_le_sensor@acc:	
  2291                           ; 2 bytes @ 0x7
  2292                           
  2293                           
  2294                           ; 4 bytes @ 0x7
  2295     0077                     	ds	1
  2296     0078                     ?_div:
  2297     0078                     div@number:	
  2298                           ; 4 bytes @ 0x8
  2299                           
  2300                           
  2301                           ; 2 bytes @ 0x8
  2302     0078                     	ds	1
  2303     0079                     menu_get_value_active@menu:
  2304     0079                     ___lwmod@dividend:	
  2305                           ; 1 bytes @ 0x9
  2306                           
  2307                           
  2308                           ; 2 bytes @ 0x9
  2309     0079                     	ds	1
  2310     007A                     div@denom:
  2311                           
  2312                           ; 2 bytes @ 0xA
  2313     007A                     	ds	1
  2314     007B                     ??___lwmod:
  2315     007B                     ___lwmod@counter:	
  2316                           ; 1 bytes @ 0xB
  2317                           
  2318     007B                     adcon_le_sensor@n:	
  2319                           ; 1 bytes @ 0xB
  2320                           
  2321                           
  2322                           ; 2 bytes @ 0xB
  2323     007B                     	ds	1
  2324     007C                     ??_div:
  2325     007C                     ??_est_estado_inicial:	
  2326                           ; 1 bytes @ 0xC
  2327                           
  2328     007C                     ??_est_estado_monitora:	
  2329                           ; 1 bytes @ 0xC
  2330                           
  2331     007C                     ??_est_estado_ver_todos:	
  2332                           ; 1 bytes @ 0xC
  2333                           
  2334     007C                     ??_est_estado_mostra_max_min:	
  2335                           ; 1 bytes @ 0xC
  2336                           
  2337     007C                     ??_est_estado_menu_limpar:	
  2338                           ; 1 bytes @ 0xC
  2339                           
  2340     007C                     ??_est_estado_menu_conf_tempo_amostra:	
  2341                           ; 1 bytes @ 0xC
  2342                           
  2343     007C                     ??_est_estado_menu_conf_quant_sensores:	
  2344                           ; 1 bytes @ 0xC
  2345                           
  2346     007C                     est_estado_menu_limpar@botao:	
  2347                           ; 1 bytes @ 0xC
  2348                           
  2349     007C                     est_estado_monitora@botao:	
  2350                           ; 1 bytes @ 0xC
  2351                           
  2352     007C                     est_estado_mostra_max_min@botao:	
  2353                           ; 1 bytes @ 0xC
  2354                           
  2355                           
  2356                           ; 1 bytes @ 0xC
  2357     007C                     	ds	1
  2358     007D                     ??_adcon_amostra_print:
  2359     007D                     ??_adcon_amostra_print_grava:	
  2360                           ; 1 bytes @ 0xD
  2361                           
  2362                           
  2363                           ; 1 bytes @ 0xD
  2364     007D                     	ds	1
  2365                           
  2366                           	psect	cstackBANK0
  2367     0020                     __pcstackBANK0:
  2368     0020                     ?_sprintf:
  2369     0020                     sprintf@f:	
  2370                           ; 2 bytes @ 0x0
  2371                           
  2372     0020                     div@rv:	
  2373                           ; 2 bytes @ 0x0
  2374                           
  2375                           
  2376                           ; 4 bytes @ 0x0
  2377     0020                     	ds	8
  2378     0028                     ??_sprintf:
  2379                           
  2380                           ; 1 bytes @ 0x8
  2381     0028                     	ds	4
  2382     002C                     sprintf@prec:
  2383                           
  2384                           ; 1 bytes @ 0xC
  2385     002C                     	ds	1
  2386     002D                     sprintf@ap:
  2387                           
  2388                           ; 1 bytes @ 0xD
  2389     002D                     	ds	1
  2390     002E                     sprintf@flag:
  2391                           
  2392                           ; 1 bytes @ 0xE
  2393     002E                     	ds	1
  2394     002F                     sprintf@val:
  2395                           
  2396                           ; 2 bytes @ 0xF
  2397     002F                     	ds	2
  2398     0031                     sprintf@sp:
  2399                           
  2400                           ; 1 bytes @ 0x11
  2401     0031                     	ds	1
  2402     0032                     sprintf@c:
  2403                           
  2404                           ; 1 bytes @ 0x12
  2405     0032                     	ds	1
  2406     0033                     ?_adcon_print:
  2407     0033                     ??_est_executa:	
  2408                           ; 1 bytes @ 0x13
  2409                           
  2410     0033                     adcon_print@valor_sensor:	
  2411                           ; 1 bytes @ 0x13
  2412                           
  2413                           
  2414                           ; 2 bytes @ 0x13
  2415     0033                     	ds	2
  2416     0035                     adcon_print@num_sensor:
  2417                           
  2418                           ; 1 bytes @ 0x15
  2419     0035                     	ds	1
  2420     0036                     ??_adcon_print:
  2421                           
  2422                           ; 1 bytes @ 0x16
  2423     0036                     	ds	1
  2424     0037                     est_executa@tmp:
  2425                           
  2426                           ; 17 bytes @ 0x17
  2427     0037                     	ds	3
  2428     003A                     adcon_print@temp_str:
  2429                           
  2430                           ; 9 bytes @ 0x1A
  2431     003A                     	ds	9
  2432     0043                     adcon_print@temp_div:
  2433                           
  2434                           ; 4 bytes @ 0x23
  2435     0043                     	ds	4
  2436     0047                     adcon_amostra_print@x:
  2437     0047                     adcon_amostra_print_grava@maior:	
  2438                           ; 2 bytes @ 0x27
  2439                           
  2440                           
  2441                           ; 2 bytes @ 0x27
  2442     0047                     	ds	1
  2443     0048                     est_executa@novo_estado:
  2444                           
  2445                           ; 1 bytes @ 0x28
  2446     0048                     	ds	1
  2447     0049                     adcon_amostra_print@i:
  2448     0049                     adcon_amostra_print_grava@menor:	
  2449                           ; 1 bytes @ 0x29
  2450                           
  2451     0049                     est_executa@maior:	
  2452                           ; 2 bytes @ 0x29
  2453                           
  2454                           
  2455                           ; 2 bytes @ 0x29
  2456     0049                     	ds	2
  2457     004B                     adcon_amostra_print_grava@qtd_leituras:
  2458     004B                     est_executa@temp_int:	
  2459                           ; 1 bytes @ 0x2B
  2460                           
  2461                           
  2462                           ; 2 bytes @ 0x2B
  2463     004B                     	ds	1
  2464     004C                     adcon_amostra_print_grava@i:
  2465                           
  2466                           ; 1 bytes @ 0x2C
  2467     004C                     	ds	1
  2468     004D                     est_executa@qtd_sens:
  2469     004D                     adcon_amostra_print_grava@t_int:	
  2470                           ; 1 bytes @ 0x2D
  2471                           
  2472                           
  2473                           ; 2 bytes @ 0x2D
  2474     004D                     	ds	1
  2475     004E                     est_executa@endereco:
  2476                           
  2477                           ; 1 bytes @ 0x2E
  2478     004E                     	ds	1
  2479     004F                     est_executa@menor:
  2480                           
  2481                           ; 2 bytes @ 0x2F
  2482     004F                     	ds	2
  2483     0051                     est_executa@i:
  2484                           
  2485                           ; 1 bytes @ 0x31
  2486     0051                     	ds	1
  2487     0052                     est_executa@i_569:
  2488                           
  2489                           ; 1 bytes @ 0x32
  2490     0052                     	ds	1
  2491     0053                     _est_executa$1904:
  2492                           
  2493                           ; 2 bytes @ 0x33
  2494     0053                     	ds	2
  2495     0055                     _est_executa$1905:
  2496                           
  2497                           ; 2 bytes @ 0x35
  2498     0055                     	ds	2
  2499     0057                     est_executa@index:
  2500                           
  2501                           ; 1 bytes @ 0x37
  2502     0057                     	ds	1
  2503     0058                     ??_est_estado_menu_principal:
  2504     0058                     est_estado_ver_todos@botao:	
  2505                           ; 1 bytes @ 0x38
  2506                           
  2507     0058                     est_estado_menu_conf_tempo_amostra@botao:	
  2508                           ; 1 bytes @ 0x38
  2509                           
  2510     0058                     est_estado_menu_conf_quant_sensores@botao:	
  2511                           ; 1 bytes @ 0x38
  2512                           
  2513                           
  2514                           ; 1 bytes @ 0x38
  2515     0058                     	ds	2
  2516     005A                     est_estado_menu_principal@botao:
  2517                           
  2518                           ; 1 bytes @ 0x3A
  2519     005A                     	ds	1
  2520     005B                     est_estado_menu_principal@index:
  2521                           
  2522                           ; 1 bytes @ 0x3B
  2523     005B                     	ds	1
  2524     005C                     ??_est_maquina:
  2525                           
  2526                           ; 1 bytes @ 0x3C
  2527     005C                     	ds	2
  2528     005E                     est_maquina@botao:
  2529                           
  2530                           ; 1 bytes @ 0x3E
  2531     005E                     	ds	1
  2532     005F                     ??_handler:
  2533                           
  2534                           ; 1 bytes @ 0x3F
  2535     005F                     	ds	6
  2536                           
  2537                           	psect	maintext
  2538     04F4                     __pmaintext:	
  2539 ;;
  2540 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2541 ;;
  2542 ;; *************** function _main *****************
  2543 ;; Defined at:
  2544 ;;		line 54 in file "src/main.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  i               1    6[BANK3 ] unsigned char 
  2549 ;;  qtd_sens        1    5[BANK3 ] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2  495[None  ] int 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : B00/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       0       0       0       0
  2560 ;;      Locals:         0       0       0       2       0
  2561 ;;      Temps:          0       0       0       3       0
  2562 ;;      Totals:         0       0       0       5       0
  2563 ;;Total ram usage:        5 bytes
  2564 ;; Hardware stack levels required when called: 10
  2565 ;; This function calls:
  2566 ;;		_adcon_init
  2567 ;;		_btns_init
  2568 ;;		_eeprom_grava_word
  2569 ;;		_eeprom_read
  2570 ;;		_eeprom_write
  2571 ;;		_lcd_goto
  2572 ;;		_lcd_init
  2573 ;;		_lcd_puts
  2574 ;;		_menu_init
  2575 ;;		_menu_set_value_indexes
  2576 ;;		_rs232_init
  2577 ;;		_timer0_init
  2578 ;; This function is called by:
  2579 ;;		Startup code after reset
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583     04F4                     _main:	
  2584                           ;psect for function _main
  2585                           
  2586     04F4                     l5797:	
  2587                           ;incstack = 0
  2588 ;; hardware stack exceeded
  2589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2590                           
  2591                           
  2592                           ;src/main.c: 63:   rs232_init();
  2593     04F4  160A  118A  26CD  120A  118A  	fcall	_rs232_init
  2594                           
  2595                           ;src/main.c: 64:   lcd_init();
  2596     04F9  120A  158A  216B  120A  118A  	fcall	_lcd_init
  2597     04FE                     l5799:
  2598                           
  2599                           ;src/main.c: 72:   lcd_puts("11/09/2023 - v1.60-");
  2600     04FE  30BE               	movlw	low (STR_46| (0+32768))
  2601     04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2602     0500  1303               	bcf	3,6	;RP1=0, select bank1
  2603     0501  00E3               	movwf	lcd_puts@str^(0+128)
  2604     0502  3083               	movlw	high (STR_46| (0+32768))
  2605     0503  00E4               	movwf	(lcd_puts@str^(0+128)+1)
  2606     0504  120A  158A  24A1  120A  118A  	fcall	_lcd_puts
  2607     0509                     l5801:
  2608                           
  2609                           ;src/main.c: 74:     lcd_puts("N");
  2610     0509  30F2               	movlw	low (STR_47| (0+32768))
  2611     050A  1683               	bsf	3,5	;RP0=1, select bank1
  2612     050B  1303               	bcf	3,6	;RP1=0, select bank1
  2613     050C  00E3               	movwf	lcd_puts@str^(0+128)
  2614     050D  3084               	movlw	high (STR_47| (0+32768))
  2615     050E  00E4               	movwf	(lcd_puts@str^(0+128)+1)
  2616     050F  120A  158A  24A1  120A  118A  	fcall	_lcd_puts
  2617     0514                     l5803:
  2618                           
  2619                           ;src/main.c: 84:   lcd_goto(2, 0);
  2620     0514  1683               	bsf	3,5	;RP0=1, select bank1
  2621     0515  1303               	bcf	3,6	;RP1=0, select bank1
  2622     0516  01E3               	clrf	lcd_goto@coluna^(0+128)
  2623     0517  3002               	movlw	2
  2624     0518  120A  158A  20FA  120A  118A  	fcall	_lcd_goto
  2625     051D                     l5805:
  2626                           
  2627                           ;src/main.c: 85:   lcd_puts("Iniciando...");
  2628     051D  300E               	movlw	low (STR_48| (0+32768))
  2629     051E  1683               	bsf	3,5	;RP0=1, select bank1
  2630     051F  1303               	bcf	3,6	;RP1=0, select bank1
  2631     0520  00E3               	movwf	lcd_puts@str^(0+128)
  2632     0521  3084               	movlw	high (STR_48| (0+32768))
  2633     0522  00E4               	movwf	(lcd_puts@str^(0+128)+1)
  2634     0523  120A  158A  24A1  120A  118A  	fcall	_lcd_puts
  2635     0528                     l5807:
  2636                           
  2637                           ;src/main.c: 87:   adcon_init();
  2638     0528  160A  118A  26B4  120A  118A  	fcall	_adcon_init
  2639     052D                     l5809:
  2640                           
  2641                           ;src/main.c: 88:   timer0_init();
  2642     052D  160A  118A  25F1  120A  118A  	fcall	_timer0_init
  2643     0532                     l5811:
  2644                           
  2645                           ;src/main.c: 90:   TXSTAbits.TXEN = 1;
  2646     0532  1683               	bsf	3,5	;RP0=1, select bank1
  2647     0533  1303               	bcf	3,6	;RP1=0, select bank1
  2648     0534  1698               	bsf	24,5	;volatile
  2649     0535                     l5813:
  2650                           
  2651                           ;src/main.c: 91:   RCSTAbits.SPEN = 1;
  2652     0535  1283               	bcf	3,5	;RP0=0, select bank0
  2653     0536  1303               	bcf	3,6	;RP1=0, select bank0
  2654     0537  1798               	bsf	24,7	;volatile
  2655     0538                     l5815:
  2656                           
  2657                           ;src/main.c: 98:   _delay((unsigned long)((200)*(4000000/4000.0)));
  2658     0538  3002               	movlw	2
  2659     0539  1683               	bsf	3,5	;RP0=1, select bank3
  2660     053A  1703               	bsf	3,6	;RP1=1, select bank3
  2661     053B  00A4               	movwf	(??_main^(0+384)+2)
  2662     053C  3004               	movlw	4
  2663     053D  00A3               	movwf	(??_main^(0+384)+1)
  2664     053E  30B9               	movlw	185
  2665     053F  00A2               	movwf	??_main^(0+384)
  2666     0540                     u5707:
  2667     0540  0BA2               	decfsz	??_main^(0+384),f
  2668     0541  2D40               	goto	u5707
  2669     0542  0BA3               	decfsz	(??_main^(0+384)+1),f
  2670     0543  2D40               	goto	u5707
  2671     0544  0BA4               	decfsz	(??_main^(0+384)+2),f
  2672     0545  2D40               	goto	u5707
  2673     0546  2D47               	nop2
  2674     0547                     l5817:
  2675                           
  2676                           ;src/main.c: 102:   if (eeprom_read(0x0c) != 93) {
  2677     0547  300C               	movlw	12
  2678     0548  160A  118A  26E6  120A  118A  	fcall	_eeprom_read
  2679     054D  3A5D               	xorlw	93
  2680     054E  1903               	skipnz
  2681     054F  2D51               	goto	u5521
  2682     0550  2D52               	goto	u5520
  2683     0551                     u5521:
  2684     0551  2DC7               	goto	l5847
  2685     0552                     u5520:
  2686     0552                     l5819:
  2687                           
  2688                           ;src/main.c: 103:     cfg_quant_sensores_atual = 1;
  2689     0552  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0553  1303               	bcf	3,6	;RP1=0, select bank0
  2691     0554  01EB               	clrf	_cfg_quant_sensores_atual
  2692     0555  0AEB               	incf	_cfg_quant_sensores_atual,f
  2693                           
  2694                           ;src/main.c: 104:     cfg_quant_sensores_amostrados = 1;
  2695     0556  1683               	bsf	3,5	;RP0=1, select bank1
  2696     0557  1303               	bcf	3,6	;RP1=0, select bank1
  2697     0558  01CE               	clrf	_cfg_quant_sensores_amostrados^(0+128)
  2698     0559  0ACE               	incf	_cfg_quant_sensores_amostrados^(0+128),f
  2699     055A                     l5821:
  2700                           
  2701                           ;src/main.c: 105:     cfg_tempo_amostra_atual = 18;
  2702     055A  3012               	movlw	18
  2703     055B  1283               	bcf	3,5	;RP0=0, select bank0
  2704     055C  1303               	bcf	3,6	;RP1=0, select bank0
  2705     055D  00E9               	movwf	_cfg_tempo_amostra_atual
  2706     055E                     l5823:
  2707                           
  2708                           ;src/main.c: 106:     eeprom_write(0x08, 0);
  2709     055E  1683               	bsf	3,5	;RP0=1, select bank1
  2710     055F  1303               	bcf	3,6	;RP1=0, select bank1
  2711     0560  01E1               	clrf	eeprom_write@value^(0+128)
  2712     0561  3008               	movlw	8
  2713     0562  120A  158A  2058  120A  118A  	fcall	_eeprom_write
  2714     0567                     l5825:
  2715                           
  2716                           ;src/main.c: 107:     eeprom_write(0x00, cfg_quant_sensores_atual);
  2717     0567  1283               	bcf	3,5	;RP0=0, select bank0
  2718     0568  1303               	bcf	3,6	;RP1=0, select bank0
  2719     0569  086B               	movf	_cfg_quant_sensores_atual,w
  2720     056A  1683               	bsf	3,5	;RP0=1, select bank1
  2721     056B  1303               	bcf	3,6	;RP1=0, select bank1
  2722     056C  00E1               	movwf	eeprom_write@value^(0+128)
  2723     056D  3000               	movlw	0
  2724     056E  120A  158A  2058  120A  118A  	fcall	_eeprom_write
  2725     0573                     l5827:
  2726                           
  2727                           ;src/main.c: 108:     eeprom_grava_word(0x02, cfg_tempo_amostra_atual);
  2728     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0575  0869               	movf	_cfg_tempo_amostra_atual,w
  2731     0576  1683               	bsf	3,5	;RP0=1, select bank3
  2732     0577  1703               	bsf	3,6	;RP1=1, select bank3
  2733     0578  00A2               	movwf	??_main^(0+384)
  2734     0579  01A3               	clrf	(??_main^(0+384)+1)
  2735     057A  0822               	movf	??_main^(0+384),w
  2736     057B  1683               	bsf	3,5	;RP0=1, select bank1
  2737     057C  1303               	bcf	3,6	;RP1=0, select bank1
  2738     057D  00E3               	movwf	eeprom_grava_word@dado^(0+128)
  2739     057E  1683               	bsf	3,5	;RP0=1, select bank3
  2740     057F  1703               	bsf	3,6	;RP1=1, select bank3
  2741     0580  0823               	movf	(??_main+1)^(0+384),w
  2742     0581  1683               	bsf	3,5	;RP0=1, select bank1
  2743     0582  1303               	bcf	3,6	;RP1=0, select bank1
  2744     0583  00E4               	movwf	(eeprom_grava_word@dado+1)^(0+128)
  2745     0584  3002               	movlw	2
  2746     0585  160A  118A  266C  120A  118A  	fcall	_eeprom_grava_word
  2747     058A                     l5829:
  2748                           
  2749                           ;src/main.c: 109:     eeprom_grava_word(0x04, 0xFFFF);
  2750     058A  30FF               	movlw	255
  2751     058B  1683               	bsf	3,5	;RP0=1, select bank1
  2752     058C  1303               	bcf	3,6	;RP1=0, select bank1
  2753     058D  00E3               	movwf	eeprom_grava_word@dado^(0+128)
  2754     058E  30FF               	movlw	255
  2755     058F  00E4               	movwf	(eeprom_grava_word@dado^(0+128)+1)
  2756     0590  3004               	movlw	4
  2757     0591  160A  118A  266C  120A  118A  	fcall	_eeprom_grava_word
  2758     0596                     l5831:
  2759                           
  2760                           ;src/main.c: 110:     eeprom_grava_word(0x06, 0);
  2761     0596  3000               	movlw	0
  2762     0597  1683               	bsf	3,5	;RP0=1, select bank1
  2763     0598  1303               	bcf	3,6	;RP1=0, select bank1
  2764     0599  00E3               	movwf	eeprom_grava_word@dado^(0+128)
  2765     059A  00E4               	movwf	(eeprom_grava_word@dado+1)^(0+128)
  2766     059B  3006               	movlw	6
  2767     059C  160A  118A  266C  120A  118A  	fcall	_eeprom_grava_word
  2768     05A1                     l5833:
  2769                           
  2770                           ;src/main.c: 113:     for (uint8_t i = 0; i < 120 * 2; i++) {
  2771     05A1  1683               	bsf	3,5	;RP0=1, select bank3
  2772     05A2  1703               	bsf	3,6	;RP1=1, select bank3
  2773     05A3  01A6               	clrf	main@i^(0+384)
  2774     05A4                     l5839:
  2775                           
  2776                           ;src/main.c: 114:       eeprom_write(i + 0x10, 0);
  2777     05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2778     05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2779     05A6  01E1               	clrf	eeprom_write@value^(0+128)
  2780     05A7  1683               	bsf	3,5	;RP0=1, select bank3
  2781     05A8  1703               	bsf	3,6	;RP1=1, select bank3
  2782     05A9  0826               	movf	main@i^(0+384),w
  2783     05AA  3E10               	addlw	16
  2784     05AB  120A  158A  2058  120A  118A  	fcall	_eeprom_write
  2785     05B0                     l5841:
  2786                           
  2787                           ;src/main.c: 115:     }
  2788     05B0  3001               	movlw	1
  2789     05B1  00FF               	movwf	btemp+1
  2790     05B2  087F               	movf	btemp+1,w
  2791     05B3  1683               	bsf	3,5	;RP0=1, select bank3
  2792     05B4  1703               	bsf	3,6	;RP1=1, select bank3
  2793     05B5  07A6               	addwf	main@i^(0+384),f
  2794     05B6                     l5843:
  2795     05B6  30F0               	movlw	240
  2796     05B7  0226               	subwf	main@i^(0+384),w
  2797     05B8  1C03               	skipc
  2798     05B9  2DBB               	goto	u5531
  2799     05BA  2DBC               	goto	u5530
  2800     05BB                     u5531:
  2801     05BB  2DA4               	goto	l5839
  2802     05BC                     u5530:
  2803     05BC                     l5845:
  2804                           
  2805                           ;src/main.c: 121:     eeprom_write(0x0c, 93);
  2806     05BC  305D               	movlw	93
  2807     05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2808     05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2809     05BF  00E1               	movwf	eeprom_write@value^(0+128)
  2810     05C0  300C               	movlw	12
  2811     05C1  120A  158A  2058  120A  118A  	fcall	_eeprom_write
  2812                           
  2813                           ;src/main.c: 125:   }
  2814     05C6  2DF5               	goto	l5853
  2815     05C7                     l5847:
  2816                           
  2817                           ;src/main.c: 129:     adcon_quant_amostras_gravadas = eeprom_read(0x08);
  2818     05C7  3008               	movlw	8
  2819     05C8  160A  118A  26E6  120A  118A  	fcall	_eeprom_read
  2820     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2821     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2822     05CF  00EA               	movwf	_adcon_quant_amostras_gravadas
  2823                           
  2824                           ;src/main.c: 130:     uint8_t qtd_sens = eeprom_read(0x01);
  2825     05D0  3001               	movlw	1
  2826     05D1  160A  118A  26E6  120A  118A  	fcall	_eeprom_read
  2827     05D6  1683               	bsf	3,5	;RP0=1, select bank3
  2828     05D7  1703               	bsf	3,6	;RP1=1, select bank3
  2829     05D8  00A5               	movwf	main@qtd_sens^(0+384)
  2830     05D9                     l5849:
  2831                           
  2832                           ;src/main.c: 131:     menu_set_value_indexes(&menu_cfg_quant_sensores, qtd_sens);
  2833     05D9  0825               	movf	main@qtd_sens^(0+384),w
  2834     05DA  00A2               	movwf	??_main^(0+384)
  2835     05DB  01A3               	clrf	(??_main^(0+384)+1)
  2836     05DC  0822               	movf	??_main^(0+384),w
  2837     05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2838     05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2839     05DF  00E1               	movwf	menu_set_value_indexes@value^(0+128)
  2840     05E0  1683               	bsf	3,5	;RP0=1, select bank3
  2841     05E1  1703               	bsf	3,6	;RP1=1, select bank3
  2842     05E2  0823               	movf	(??_main+1)^(0+384),w
  2843     05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2844     05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2845     05E5  00E2               	movwf	(menu_set_value_indexes@value+1)^(0+128)
  2846     05E6  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  2847     05E7  120A  158A  25E5  120A  118A  	fcall	_menu_set_value_indexes
  2848     05EC                     l5851:
  2849                           
  2850                           ;src/main.c: 132:     cfg_quant_sensores_atual = eeprom_read(0x00);
  2851     05EC  3000               	movlw	0
  2852     05ED  160A  118A  26E6  120A  118A  	fcall	_eeprom_read
  2853     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2854     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2855     05F4  00EB               	movwf	_cfg_quant_sensores_atual
  2856     05F5                     l5853:
  2857                           
  2858                           ;src/main.c: 137:   menu_init(&menu_principal, menu_principal_itens, 7);
  2859     05F5  3090               	movlw	low (_menu_principal_itens| (0+32768))
  2860     05F6  1683               	bsf	3,5	;RP0=1, select bank1
  2861     05F7  1303               	bcf	3,6	;RP1=0, select bank1
  2862     05F8  00E1               	movwf	menu_init@itens^(0+128)
  2863     05F9  3083               	movlw	high (_menu_principal_itens| (0+32768))
  2864     05FA  00E2               	movwf	(menu_init@itens^(0+128)+1)
  2865     05FB  3007               	movlw	7
  2866     05FC  00E3               	movwf	menu_init@quant_itens^(0+128)
  2867     05FD  30D9               	movlw	(low (_menu_principal| 0))& (0+255)
  2868     05FE  160A  118A  2683  120A  118A  	fcall	_menu_init
  2869     0603                     l5855:
  2870                           
  2871                           ;src/main.c: 138:   menu_init(&menu_cfg_quant_sensores, menu_cfg_quant_sensores_itens, 4
      +                          );
  2872     0603  30AC               	movlw	low (_menu_cfg_quant_sensores_itens| (0+32768))
  2873     0604  1683               	bsf	3,5	;RP0=1, select bank1
  2874     0605  1303               	bcf	3,6	;RP1=0, select bank1
  2875     0606  00E1               	movwf	menu_init@itens^(0+128)
  2876     0607  3083               	movlw	high (_menu_cfg_quant_sensores_itens| (0+32768))
  2877     0608  00E2               	movwf	(menu_init@itens^(0+128)+1)
  2878     0609  3004               	movlw	4
  2879     060A  00E3               	movwf	menu_init@quant_itens^(0+128)
  2880     060B  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  2881     060C  160A  118A  2683  120A  118A  	fcall	_menu_init
  2882     0611                     l5857:
  2883                           
  2884                           ;src/main.c: 139:   menu_init(&menu_cfg_tempo_amostra, menu_cfg_tempo_amostra_itens, 7);
  2885     0611  3074               	movlw	low (_menu_cfg_tempo_amostra_itens| (0+32768))
  2886     0612  1683               	bsf	3,5	;RP0=1, select bank1
  2887     0613  1303               	bcf	3,6	;RP1=0, select bank1
  2888     0614  00E1               	movwf	menu_init@itens^(0+128)
  2889     0615  3083               	movlw	high (_menu_cfg_tempo_amostra_itens| (0+32768))
  2890     0616  00E2               	movwf	(menu_init@itens^(0+128)+1)
  2891     0617  3007               	movlw	7
  2892     0618  00E3               	movwf	menu_init@quant_itens^(0+128)
  2893     0619  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  2894     061A  160A  118A  2683  120A  118A  	fcall	_menu_init
  2895     061F                     l5859:
  2896                           
  2897                           ;src/main.c: 150:   lcd_goto(2, 0);
  2898     061F  1683               	bsf	3,5	;RP0=1, select bank1
  2899     0620  1303               	bcf	3,6	;RP1=0, select bank1
  2900     0621  01E3               	clrf	lcd_goto@coluna^(0+128)
  2901     0622  3002               	movlw	2
  2902     0623  120A  158A  20FA  120A  118A  	fcall	_lcd_goto
  2903                           
  2904                           ;src/main.c: 151:   lcd_puts("Pronto!    ");
  2905     0628  301B               	movlw	low (STR_49| (0+32768))
  2906     0629  1683               	bsf	3,5	;RP0=1, select bank1
  2907     062A  1303               	bcf	3,6	;RP1=0, select bank1
  2908     062B  00E3               	movwf	lcd_puts@str^(0+128)
  2909     062C  3084               	movlw	high (STR_49| (0+32768))
  2910     062D  00E4               	movwf	(lcd_puts@str^(0+128)+1)
  2911     062E  120A  158A  24A1  120A  118A  	fcall	_lcd_puts
  2912     0633                     l5861:
  2913                           
  2914                           ;src/main.c: 153:   btns_init();
  2915     0633  120A  158A  208D  120A  118A  	fcall	_btns_init
  2916     0638                     l5863:
  2917                           
  2918                           ;src/main.c: 155:   INTCONbits.GIE = 1;
  2919     0638  178B               	bsf	11,7	;volatile
  2920     0639                     l500:	
  2921                           ;src/main.c: 157:   while (1) {
  2922                           
  2923     0639                     l501:	
  2924                           ;src/main.c: 166:   }
  2925                           
  2926     0639  2E39               	goto	l500
  2927     063A  120A  118A  2812   	ljmp	start
  2928     063D                     __end_of_main:
  2929                           
  2930                           	psect	text1
  2931     15F1                     __ptext1:	
  2932 ;; *************** function _timer0_init *****************
  2933 ;; Defined at:
  2934 ;;		line 7 in file "src/timer.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 8
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962     15F1                     _timer0_init:	
  2963                           ;psect for function _timer0_init
  2964                           
  2965     15F1                     l5683:	
  2966                           ;incstack = 0
  2967 ;; hardware stack exceeded
  2968                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2969                           
  2970                           
  2971                           ;src/timer.c: 21:     TMR0 = 39;
  2972     15F1  3027               	movlw	39
  2973     15F2  1283               	bcf	3,5	;RP0=0, select bank0
  2974     15F3  1303               	bcf	3,6	;RP1=0, select bank0
  2975     15F4  0081               	movwf	1	;volatile
  2976     15F5                     l5685:
  2977                           
  2978                           ;src/timer.c: 23:     OPTION_REGbits.T0CS = 0;
  2979     15F5  1683               	bsf	3,5	;RP0=1, select bank1
  2980     15F6  1303               	bcf	3,6	;RP1=0, select bank1
  2981     15F7  1281               	bcf	1,5	;volatile
  2982     15F8                     l5687:
  2983                           
  2984                           ;src/timer.c: 24:     OPTION_REGbits.PSA = 0;
  2985     15F8  1181               	bcf	1,3	;volatile
  2986     15F9                     l5689:
  2987                           
  2988                           ;src/timer.c: 25:     OPTION_REGbits.PS = 0b111;
  2989     15F9  3007               	movlw	7
  2990     15FA  0481               	iorwf	1,f	;volatile
  2991     15FB                     l5691:
  2992                           
  2993                           ;src/timer.c: 27:     INTCONbits.T0IF = 0;
  2994     15FB  110B               	bcf	11,2	;volatile
  2995     15FC                     l5693:
  2996                           
  2997                           ;src/timer.c: 29:     INTCONbits.T0IE = 0;
  2998     15FC  128B               	bcf	11,5	;volatile
  2999     15FD                     l609:
  3000     15FD  0008               	return
  3001     15FE                     __end_of_timer0_init:
  3002                           
  3003                           	psect	text2
  3004     16CD                     __ptext2:	
  3005 ;; *************** function _rs232_init *****************
  3006 ;; Defined at:
  3007 ;;		line 9 in file "src/rs232.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0
  3024 ;;      Totals:         0       0       0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 8
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035     16CD                     _rs232_init:	
  3036                           ;psect for function _rs232_init
  3037                           
  3038     16CD                     l5675:	
  3039                           ;incstack = 0
  3040 ;; hardware stack exceeded
  3041                           ; Regs used in _rs232_init: [wreg]
  3042                           
  3043                           
  3044                           ;src/rs232.c: 11:     BRG16 = 0;
  3045     16CD  1683               	bsf	3,5	;RP0=1, select bank3
  3046     16CE  1703               	bsf	3,6	;RP1=1, select bank3
  3047     16CF  1187               	bcf	7,3	;volatile
  3048                           
  3049                           ;src/rs232.c: 13:   TRISC6 = 0;
  3050     16D0  1683               	bsf	3,5	;RP0=1, select bank1
  3051     16D1  1303               	bcf	3,6	;RP1=0, select bank1
  3052     16D2  1307               	bcf	7,6	;volatile
  3053                           
  3054                           ;src/rs232.c: 14:   TRISC7 = 1;
  3055     16D3  1787               	bsf	7,7	;volatile
  3056                           
  3057                           ;src/rs232.c: 15:   TXEN = 1;
  3058     16D4  1698               	bsf	24,5	;volatile
  3059                           
  3060                           ;src/rs232.c: 16:   SYNC = 0;
  3061     16D5  1218               	bcf	24,4	;volatile
  3062                           
  3063                           ;src/rs232.c: 17:   SPEN = 1;
  3064     16D6  1283               	bcf	3,5	;RP0=0, select bank0
  3065     16D7  1303               	bcf	3,6	;RP1=0, select bank0
  3066     16D8  1798               	bsf	24,7	;volatile
  3067                           
  3068                           ;src/rs232.c: 18:   CREN = 1;
  3069     16D9  1618               	bsf	24,4	;volatile
  3070                           
  3071                           ;src/rs232.c: 19:   PIE1bits.RCIE = 1;
  3072     16DA  1683               	bsf	3,5	;RP0=1, select bank1
  3073     16DB  1303               	bcf	3,6	;RP1=0, select bank1
  3074     16DC  168C               	bsf	12,5	;volatile
  3075                           
  3076                           ;src/rs232.c: 20:   INTCONbits.PEIE = 1;
  3077     16DD  170B               	bsf	11,6	;volatile
  3078                           
  3079                           ;src/rs232.c: 21:   BRGH = 0;
  3080     16DE  1118               	bcf	24,2	;volatile
  3081     16DF                     l5677:
  3082                           
  3083                           ;src/rs232.c: 22:   SPBRG = 25;
  3084     16DF  3019               	movlw	25
  3085     16E0  0099               	movwf	25	;volatile
  3086     16E1                     l5679:
  3087                           
  3088                           ;src/rs232.c: 23:   TX9 = 0;
  3089     16E1  1318               	bcf	24,6	;volatile
  3090     16E2                     l5681:
  3091                           
  3092                           ;src/rs232.c: 24:   PIR1bits.RCIF = 0;
  3093     16E2  1283               	bcf	3,5	;RP0=0, select bank0
  3094     16E3  1303               	bcf	3,6	;RP1=0, select bank0
  3095     16E4  128C               	bcf	12,5	;volatile
  3096     16E5                     l594:
  3097     16E5  0008               	return
  3098     16E6                     __end_of_rs232_init:
  3099                           
  3100                           	psect	text3
  3101     0DE5                     __ptext3:	
  3102 ;; *************** function _menu_set_value_indexes *****************
  3103 ;; Defined at:
  3104 ;;		line 26 in file "src/menu.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  menu            1    wreg     PTR struct .
  3107 ;;		 -> menu_cfg_quant_sensores(5), 
  3108 ;;  value           2    3[BANK1 ] unsigned int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  menu            1    1[BANK3 ] PTR struct .
  3111 ;;		 -> menu_cfg_quant_sensores(5), 
  3112 ;;  i               1    0[BANK3 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       2       0       0
  3123 ;;      Locals:         0       0       0       2       0
  3124 ;;      Temps:          0       0       9       0       0
  3125 ;;      Totals:         0       0      11       2       0
  3126 ;;Total ram usage:       13 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 8
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136     0DE5                     _menu_set_value_indexes:	
  3137                           ;psect for function _menu_set_value_indexes
  3138                           
  3139                           
  3140                           ;incstack = 0
  3141 ;; hardware stack exceeded
  3142                           ; Regs used in _menu_set_value_indexes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3143                           ;menu_set_value_indexes@menu stored from wreg
  3144     0DE5  1683               	bsf	3,5	;RP0=1, select bank3
  3145     0DE6  1703               	bsf	3,6	;RP1=1, select bank3
  3146     0DE7  00A1               	movwf	menu_set_value_indexes@menu^(0+384)
  3147     0DE8                     l5695:
  3148                           
  3149                           ;src/menu.c: 27:   menu->index_active = 1;
  3150     0DE8  0821               	movf	menu_set_value_indexes@menu^(0+384),w
  3151     0DE9  0084               	movwf	4
  3152     0DEA  1383               	bcf	3,7	;select IRP bank0
  3153     0DEB  0180               	clrf	0
  3154     0DEC  0A80               	incf	0,f
  3155     0DED                     l5697:
  3156                           
  3157                           ;src/menu.c: 28:   for (uint8_t i=0; i< menu->quant_itens; i++) {
  3158     0DED  01A0               	clrf	menu_set_value_indexes@i^(0+384)
  3159     0DEE  2E4D               	goto	l5707
  3160     0DEF                     l5699:
  3161                           
  3162                           ;src/menu.c: 29:     if (menu->itens[i].i_value == value) {
  3163     0DEF  3002               	movlw	2
  3164     0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3165     0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  3166     0DF2  00E3               	movwf	??_menu_set_value_indexes^(0+128)
  3167     0DF3  3000               	movlw	0
  3168     0DF4  00E4               	movwf	(??_menu_set_value_indexes^(0+128)+1)
  3169     0DF5  1683               	bsf	3,5	;RP0=1, select bank3
  3170     0DF6  1703               	bsf	3,6	;RP1=1, select bank3
  3171     0DF7  0821               	movf	menu_set_value_indexes@menu^(0+384),w
  3172     0DF8  3E03               	addlw	3
  3173     0DF9  0084               	movwf	4
  3174     0DFA  0800               	movf	0,w
  3175     0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  3176     0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  3177     0DFD  00E5               	movwf	(??_menu_set_value_indexes+2)^(0+128)
  3178     0DFE  0A84               	incf	4,f
  3179     0DFF  0800               	movf	0,w
  3180     0E00  00E6               	movwf	((??_menu_set_value_indexes+2)^(0+128)+1)
  3181     0E01  1683               	bsf	3,5	;RP0=1, select bank3
  3182     0E02  1703               	bsf	3,6	;RP1=1, select bank3
  3183     0E03  0820               	movf	menu_set_value_indexes@i^(0+384),w
  3184     0E04  1683               	bsf	3,5	;RP0=1, select bank1
  3185     0E05  1303               	bcf	3,6	;RP1=0, select bank1
  3186     0E06  00E7               	movwf	(??_menu_set_value_indexes+4)^(0+128)
  3187     0E07  3001               	movlw	1
  3188     0E08                     u5345:
  3189     0E08  1003               	clrc
  3190     0E09  0DE7               	rlf	(??_menu_set_value_indexes+4)^(0+128),f
  3191     0E0A  3EFF               	addlw	-1
  3192     0E0B  1D03               	skipz
  3193     0E0C  2E08               	goto	u5345
  3194     0E0D  1003               	clrc
  3195     0E0E  0D67               	rlf	(??_menu_set_value_indexes+4)^(0+128),w
  3196     0E0F  0765               	addwf	(??_menu_set_value_indexes+2)^(0+128),w
  3197     0E10  00E8               	movwf	(??_menu_set_value_indexes+5)^(0+128)
  3198     0E11  0866               	movf	(??_menu_set_value_indexes+3)^(0+128),w
  3199     0E12  1803               	skipnc
  3200     0E13  3E01               	addlw	1
  3201     0E14  00E9               	movwf	((??_menu_set_value_indexes+5)^(0+128)+1)
  3202     0E15  0863               	movf	??_menu_set_value_indexes^(0+128),w
  3203     0E16  0768               	addwf	(??_menu_set_value_indexes+5)^(0+128),w
  3204     0E17  0084               	movwf	4
  3205     0E18  0864               	movf	(??_menu_set_value_indexes+1)^(0+128),w
  3206     0E19  1803               	skipnc
  3207     0E1A  0A64               	incf	(??_menu_set_value_indexes+1)^(0+128),w
  3208     0E1B  0769               	addwf	(??_menu_set_value_indexes+6)^(0+128),w
  3209     0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  3210     0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  3211     0E1E  00FF               	movwf	btemp+1
  3212     0E1F  120A  118A  2300  120A  158A  	fcall	stringtab
  3213     0E24  1683               	bsf	3,5	;RP0=1, select bank1
  3214     0E25  1303               	bcf	3,6	;RP1=0, select bank1
  3215     0E26  00EA               	movwf	(??_menu_set_value_indexes+7)^(0+128)
  3216     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3217     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3218     0E29  120A  118A  2300  120A  158A  	fcall	stringtab
  3219     0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  3220     0E2F  1303               	bcf	3,6	;RP1=0, select bank1
  3221     0E30  00EB               	movwf	((??_menu_set_value_indexes+7)^(0+128)+1)
  3222     0E31  0862               	movf	(menu_set_value_indexes@value+1)^(0+128),w
  3223     0E32  066B               	xorwf	(??_menu_set_value_indexes+8)^(0+128),w
  3224     0E33  1D03               	skipz
  3225     0E34  2E37               	goto	u5355
  3226     0E35  0861               	movf	menu_set_value_indexes@value^(0+128),w
  3227     0E36  066A               	xorwf	(??_menu_set_value_indexes+7)^(0+128),w
  3228     0E37                     u5355:
  3229     0E37  1D03               	skipz
  3230     0E38  2E3A               	goto	u5351
  3231     0E39  2E3B               	goto	u5350
  3232     0E3A                     u5351:
  3233     0E3A  2E47               	goto	l5705
  3234     0E3B                     u5350:
  3235     0E3B                     l5701:
  3236                           
  3237                           ;src/menu.c: 30:       menu->index_active = i;
  3238     0E3B  1683               	bsf	3,5	;RP0=1, select bank3
  3239     0E3C  1703               	bsf	3,6	;RP1=1, select bank3
  3240     0E3D  0821               	movf	menu_set_value_indexes@menu^(0+384),w
  3241     0E3E  0084               	movwf	4
  3242     0E3F  0820               	movf	menu_set_value_indexes@i^(0+384),w
  3243     0E40  1383               	bcf	3,7	;select IRP bank0
  3244     0E41  0080               	movwf	0
  3245                           
  3246                           ;src/menu.c: 31:       menu->index_nav = i;
  3247     0E42  0A21               	incf	menu_set_value_indexes@menu^(0+384),w
  3248     0E43  0084               	movwf	4
  3249     0E44  0820               	movf	menu_set_value_indexes@i^(0+384),w
  3250     0E45  0080               	movwf	0
  3251     0E46  2E57               	goto	l518
  3252     0E47                     l5705:
  3253                           
  3254                           ;src/menu.c: 34:   }
  3255     0E47  3001               	movlw	1
  3256     0E48  00FF               	movwf	btemp+1
  3257     0E49  087F               	movf	btemp+1,w
  3258     0E4A  1683               	bsf	3,5	;RP0=1, select bank3
  3259     0E4B  1703               	bsf	3,6	;RP1=1, select bank3
  3260     0E4C  07A0               	addwf	menu_set_value_indexes@i^(0+384),f
  3261     0E4D                     l5707:
  3262     0E4D  0821               	movf	menu_set_value_indexes@menu^(0+384),w
  3263     0E4E  3E02               	addlw	2
  3264     0E4F  0084               	movwf	4
  3265     0E50  1383               	bcf	3,7	;select IRP bank0
  3266     0E51  0800               	movf	0,w
  3267     0E52  0220               	subwf	menu_set_value_indexes@i^(0+384),w
  3268     0E53  1C03               	skipc
  3269     0E54  2E56               	goto	u5361
  3270     0E55  2E57               	goto	u5360
  3271     0E56                     u5361:
  3272     0E56  2DEF               	goto	l5699
  3273     0E57                     u5360:
  3274     0E57                     l518:
  3275     0E57  0008               	return
  3276     0E58                     __end_of_menu_set_value_indexes:
  3277                           
  3278                           	psect	text4
  3279     1683                     __ptext4:	
  3280 ;; *************** function _menu_init *****************
  3281 ;; Defined at:
  3282 ;;		line 7 in file "src/menu.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  menu            1    wreg     PTR struct .
  3285 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  3286 ;;  itens           2    3[BANK1 ] PTR const struct .
  3287 ;;		 -> menu_cfg_tempo_amostra_itens(28), menu_cfg_quant_sensores_itens(16), menu_principal_itens(28), 
  3288 ;;  quant_itens     1    5[BANK1 ] unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  menu            1    6[BANK1 ] PTR struct .
  3291 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       3       0       0
  3302 ;;      Locals:         0       0       1       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       0       4       0       0
  3305 ;;Total ram usage:        4 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 8
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315     1683                     _menu_init:	
  3316                           ;psect for function _menu_init
  3317                           
  3318                           
  3319                           ;incstack = 0
  3320 ;; hardware stack exceeded
  3321                           ; Regs used in _menu_init: [wreg-fsr0h+status,2+status,0]
  3322                           ;menu_init@menu stored from wreg
  3323     1683  1683               	bsf	3,5	;RP0=1, select bank1
  3324     1684  1303               	bcf	3,6	;RP1=0, select bank1
  3325     1685  00E4               	movwf	menu_init@menu^(0+128)
  3326     1686                     l5709:
  3327                           
  3328                           ;src/menu.c: 8:   menu->index_active = 0;
  3329     1686  0864               	movf	menu_init@menu^(0+128),w
  3330     1687  0084               	movwf	4
  3331     1688  1383               	bcf	3,7	;select IRP bank0
  3332     1689  0180               	clrf	0
  3333                           
  3334                           ;src/menu.c: 9:   menu->index_nav = 0;
  3335     168A  0A64               	incf	menu_init@menu^(0+128),w
  3336     168B  0084               	movwf	4
  3337     168C  0180               	clrf	0
  3338     168D                     l5711:
  3339                           
  3340                           ;src/menu.c: 10:   menu->quant_itens = quant_itens;
  3341     168D  0864               	movf	menu_init@menu^(0+128),w
  3342     168E  3E02               	addlw	2
  3343     168F  0084               	movwf	4
  3344     1690  0863               	movf	menu_init@quant_itens^(0+128),w
  3345     1691  0080               	movwf	0
  3346     1692                     l5713:
  3347                           
  3348                           ;src/menu.c: 11:   menu->itens = itens;
  3349     1692  0864               	movf	menu_init@menu^(0+128),w
  3350     1693  3E03               	addlw	3
  3351     1694  0084               	movwf	4
  3352     1695  0861               	movf	menu_init@itens^(0+128),w
  3353     1696  0080               	movwf	0
  3354     1697  0A84               	incf	4,f
  3355     1698  0862               	movf	(menu_init@itens+1)^(0+128),w
  3356     1699  0080               	movwf	0
  3357     169A                     l506:
  3358     169A  0008               	return
  3359     169B                     __end_of_menu_init:
  3360                           
  3361                           	psect	text5
  3362     0CA1                     __ptext5:	
  3363 ;; *************** function _lcd_puts *****************
  3364 ;; Defined at:
  3365 ;;		line 101 in file "src/lcd.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3368 ;;		 -> mq_mostra@temp_str(16), STR_49(12), STR_48(13), STR_47(2), 
  3369 ;;		 -> STR_46(20), STR_45(7), STR_44(7), STR_43(7), 
  3370 ;;		 -> STR_42(6), STR_41(7), STR_40(7), STR_39(6), 
  3371 ;;		 -> STR_38(11), STR_37(11), STR_36(11), STR_35(9), 
  3372 ;;		 -> STR_34(16), STR_33(16), STR_32(9), STR_31(10), 
  3373 ;;		 -> STR_30(12), STR_29(14), STR_28(11), STR_27(12), 
  3374 ;;		 -> STR_26(12), STR_23(12), STR_21(12), est_executa@tmp(17), 
  3375 ;;		 -> STR_20(7), STR_19(7), STR_18(7), STR_17(6), 
  3376 ;;		 -> STR_16(7), STR_15(7), STR_14(6), STR_13(11), 
  3377 ;;		 -> STR_12(11), STR_11(11), STR_10(9), STR_9(16), 
  3378 ;;		 -> STR_8(16), STR_7(9), STR_6(10), STR_5(12), 
  3379 ;;		 -> STR_4(14), STR_3(11), adcon_print@temp_str(9), STR_1(14), 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  cmd             1    8[BANK1 ] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         0       0       2       0       0
  3392 ;;      Locals:         0       0       1       0       0
  3393 ;;      Temps:          0       0       1       0       0
  3394 ;;      Totals:         0       0       4       0       0
  3395 ;;Total ram usage:        4 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 9
  3398 ;; This function calls:
  3399 ;;		_lcd_write
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;;		_mq_mostra
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406     0CA1                     _lcd_puts:	
  3407                           ;psect for function _lcd_puts
  3408                           
  3409     0CA1                     l5553:	
  3410                           ;incstack = 0
  3411 ;; hardware stack exceeded
  3412                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3413                           
  3414                           
  3415                           ;src/lcd.c: 102:   uint8_t cmd;;src/lcd.c: 103:   RC0 = 1;
  3416     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3417     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3418     0CA3  1407               	bsf	7,0	;volatile
  3419                           
  3420                           ;src/lcd.c: 105:   while (*str) {
  3421     0CA4  2CF3               	goto	l5567
  3422     0CA5                     l5555:
  3423                           
  3424                           ;src/lcd.c: 107:     cmd = *str >> 4;
  3425     0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  3426     0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  3427     0CA7  0864               	movf	(lcd_puts@str+1)^(0+128),w
  3428     0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  3429     0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  3430     0CAA  00FF               	movwf	btemp+1
  3431     0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  3432     0CAC  1303               	bcf	3,6	;RP1=0, select bank1
  3433     0CAD  0863               	movf	lcd_puts@str^(0+128),w
  3434     0CAE  0084               	movwf	4
  3435     0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  3436     0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  3437     0CB1  120A  118A  2300  120A  158A  	fcall	stringtab
  3438     0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  3439     0CB7  1303               	bcf	3,6	;RP1=0, select bank1
  3440     0CB8  00E5               	movwf	??_lcd_puts^(0+128)
  3441     0CB9  3004               	movlw	4
  3442     0CBA                     u5225:
  3443     0CBA  1003               	clrc
  3444     0CBB  0CE5               	rrf	??_lcd_puts^(0+128),f
  3445     0CBC  3EFF               	addlw	-1
  3446     0CBD  1D03               	skipz
  3447     0CBE  2CBA               	goto	u5225
  3448     0CBF  0865               	movf	??_lcd_puts^(0+128),w
  3449     0CC0  00E6               	movwf	lcd_puts@cmd^(0+128)
  3450     0CC1                     l5557:
  3451                           
  3452                           ;src/lcd.c: 108:     lcd_write(cmd);
  3453     0CC1  0866               	movf	lcd_puts@cmd^(0+128),w
  3454     0CC2  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3455     0CC7                     l5559:
  3456                           
  3457                           ;src/lcd.c: 109:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3458     0CC7  300C               	movlw	12
  3459     0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  3460     0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  3461     0CCA  00E5               	movwf	??_lcd_puts^(0+128)
  3462     0CCB                     u5717:
  3463     0CCB  0BE5               	decfsz	??_lcd_puts^(0+128),f
  3464     0CCC  2CCB               	goto	u5717
  3465     0CCD  0000               	nop
  3466     0CCE                     l5561:
  3467                           
  3468                           ;src/lcd.c: 112:     lcd_write(*str);
  3469     0CCE  1683               	bsf	3,5	;RP0=1, select bank1
  3470     0CCF  1303               	bcf	3,6	;RP1=0, select bank1
  3471     0CD0  0864               	movf	(lcd_puts@str+1)^(0+128),w
  3472     0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  3473     0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  3474     0CD3  00FF               	movwf	btemp+1
  3475     0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  3476     0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  3477     0CD6  0863               	movf	lcd_puts@str^(0+128),w
  3478     0CD7  0084               	movwf	4
  3479     0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3480     0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3481     0CDA  120A  118A  2300  120A  158A  	fcall	stringtab
  3482     0CDF  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3483     0CE4                     l5563:
  3484                           
  3485                           ;src/lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3486     0CE4  300C               	movlw	12
  3487     0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  3488     0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  3489     0CE7  00E5               	movwf	??_lcd_puts^(0+128)
  3490     0CE8                     u5727:
  3491     0CE8  0BE5               	decfsz	??_lcd_puts^(0+128),f
  3492     0CE9  2CE8               	goto	u5727
  3493     0CEA  0000               	nop
  3494     0CEB                     l5565:
  3495                           
  3496                           ;src/lcd.c: 142:     str++;
  3497     0CEB  3001               	movlw	1
  3498     0CEC  1683               	bsf	3,5	;RP0=1, select bank1
  3499     0CED  1303               	bcf	3,6	;RP1=0, select bank1
  3500     0CEE  07E3               	addwf	lcd_puts@str^(0+128),f
  3501     0CEF  1803               	skipnc
  3502     0CF0  0AE4               	incf	(lcd_puts@str+1)^(0+128),f
  3503     0CF1  3000               	movlw	0
  3504     0CF2  07E4               	addwf	(lcd_puts@str+1)^(0+128),f
  3505     0CF3                     l5567:
  3506                           
  3507                           ;src/lcd.c: 105:   while (*str) {
  3508     0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  3509     0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  3510     0CF5  0864               	movf	(lcd_puts@str+1)^(0+128),w
  3511     0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  3512     0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  3513     0CF8  00FF               	movwf	btemp+1
  3514     0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  3515     0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  3516     0CFB  0863               	movf	lcd_puts@str^(0+128),w
  3517     0CFC  0084               	movwf	4
  3518     0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3519     0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  3520     0CFF  120A  118A  2300  120A  158A  	fcall	stringtab
  3521     0D04  3A00               	xorlw	0
  3522     0D05  1D03               	skipz
  3523     0D06  2D08               	goto	u5231
  3524     0D07  2D09               	goto	u5230
  3525     0D08                     u5231:
  3526     0D08  2CA5               	goto	l5555
  3527     0D09                     u5230:
  3528     0D09                     l52:
  3529     0D09  0008               	return
  3530     0D0A                     __end_of_lcd_puts:
  3531                           
  3532                           	psect	text6
  3533     096B                     __ptext6:	
  3534 ;; *************** function _lcd_init *****************
  3535 ;; Defined at:
  3536 ;;		line 38 in file "src/lcd.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0
  3553 ;;      Totals:         0       0       0       0       0
  3554 ;;Total ram usage:        0 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 9
  3557 ;; This function calls:
  3558 ;;		_lcd_write
  3559 ;; This function is called by:
  3560 ;;		_main
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564     096B                     _lcd_init:	
  3565                           ;psect for function _lcd_init
  3566                           
  3567     096B                     l5531:	
  3568                           ;incstack = 0
  3569 ;; hardware stack exceeded
  3570                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3571                           
  3572                           
  3573                           ;src/lcd.c: 39:     TRISC0 = TRISC1 = TRISC2 = TRISB2 = TRISB1 = TRISB0 = 0;
  3574     096B  1683               	bsf	3,5	;RP0=1, select bank1
  3575     096C  1303               	bcf	3,6	;RP1=0, select bank1
  3576     096D  1006               	bcf	6,0	;volatile
  3577     096E  1086               	bcf	6,1	;volatile
  3578     096F  1106               	bcf	6,2	;volatile
  3579     0970  1107               	bcf	7,2	;volatile
  3580     0971  1087               	bcf	7,1	;volatile
  3581     0972  1007               	bcf	7,0	;volatile
  3582                           
  3583                           ;src/lcd.c: 40:     RC0 = RC1 = RC2 = RB2 = RB1 = RB0 = 0;
  3584     0973  1283               	bcf	3,5	;RP0=0, select bank0
  3585     0974  1303               	bcf	3,6	;RP1=0, select bank0
  3586     0975  1006               	bcf	6,0	;volatile
  3587     0976  1086               	bcf	6,1	;volatile
  3588     0977  1106               	bcf	6,2	;volatile
  3589     0978  1107               	bcf	7,2	;volatile
  3590     0979  1087               	bcf	7,1	;volatile
  3591     097A  1007               	bcf	7,0	;volatile
  3592     097B                     l5533:
  3593                           
  3594                           ;src/lcd.c: 41:     lcd_write(2);
  3595     097B  3002               	movlw	2
  3596     097C  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3597                           
  3598                           ;src/lcd.c: 42:     lcd_write(8);
  3599     0981  3008               	movlw	8
  3600     0982  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3601                           
  3602                           ;src/lcd.c: 43:     lcd_write(0);
  3603     0987  3000               	movlw	0
  3604     0988  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3605                           
  3606                           ;src/lcd.c: 44:     lcd_write(0);
  3607     098D  3000               	movlw	0
  3608     098E  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3609                           
  3610                           ;src/lcd.c: 45:     lcd_write(0x0C);
  3611     0993  300C               	movlw	12
  3612     0994  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3613                           
  3614                           ;src/lcd.c: 46:     lcd_write(0);
  3615     0999  3000               	movlw	0
  3616     099A  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3617                           
  3618                           ;src/lcd.c: 47:     lcd_write(6);
  3619     099F  3006               	movlw	6
  3620     09A0  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3621     09A5                     l33:
  3622     09A5  0008               	return
  3623     09A6                     __end_of_lcd_init:
  3624                           
  3625                           	psect	text7
  3626     08FA                     __ptext7:	
  3627 ;; *************** function _lcd_goto *****************
  3628 ;; Defined at:
  3629 ;;		line 75 in file "src/lcd.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  linha           1    wreg     unsigned char 
  3632 ;;  coluna          1    5[BANK1 ] unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  linha           1    8[BANK1 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       1       0       0
  3645 ;;      Locals:         0       0       1       0       0
  3646 ;;      Temps:          0       0       2       0       0
  3647 ;;      Totals:         0       0       4       0       0
  3648 ;;Total ram usage:        4 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 9
  3651 ;; This function calls:
  3652 ;;		_lcd_write
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     08FA                     _lcd_goto:	
  3659                           ;psect for function _lcd_goto
  3660                           
  3661                           
  3662                           ;incstack = 0
  3663 ;; hardware stack exceeded
  3664                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3665                           ;lcd_goto@linha stored from wreg
  3666     08FA  1683               	bsf	3,5	;RP0=1, select bank1
  3667     08FB  1303               	bcf	3,6	;RP1=0, select bank1
  3668     08FC  00E6               	movwf	lcd_goto@linha^(0+128)
  3669     08FD                     l5535:
  3670                           
  3671                           ;src/lcd.c: 76:     RC0 = 0;
  3672     08FD  1283               	bcf	3,5	;RP0=0, select bank0
  3673     08FE  1303               	bcf	3,6	;RP1=0, select bank0
  3674     08FF  1007               	bcf	7,0	;volatile
  3675                           
  3676                           ;src/lcd.c: 77:     switch (linha) {
  3677     0900  290F               	goto	l5543
  3678     0901                     l5537:
  3679                           
  3680                           ;src/lcd.c: 79:             lcd_write(0x08);
  3681     0901  3008               	movlw	8
  3682     0902  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3683                           
  3684                           ;src/lcd.c: 80:             break;
  3685     0907  2921               	goto	l5545
  3686     0908                     l5539:
  3687                           
  3688                           ;src/lcd.c: 82:             lcd_write(0x0C);
  3689     0908  300C               	movlw	12
  3690     0909  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3691                           
  3692                           ;src/lcd.c: 83:             break;
  3693     090E  2921               	goto	l5545
  3694     090F                     l5543:
  3695     090F  1683               	bsf	3,5	;RP0=1, select bank1
  3696     0910  1303               	bcf	3,6	;RP1=0, select bank1
  3697     0911  0866               	movf	lcd_goto@linha^(0+128),w
  3698     0912  00E4               	movwf	??_lcd_goto^(0+128)
  3699     0913  01E5               	clrf	(??_lcd_goto^(0+128)+1)
  3700                           
  3701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3702                           ; Switch size 1, requested type "simple"
  3703                           ; Number of cases is 1, Range of values is 0 to 0
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte            4     3 (average)
  3707                           ; direct_byte           11     8 (fixed)
  3708                           ; jumptable            260     6 (fixed)
  3709                           ;	Chosen strategy is simple_byte
  3710     0914  0865               	movf	(??_lcd_goto+1)^(0+128),w
  3711     0915  3A00               	xorlw	0	; case 0
  3712     0916  1903               	skipnz
  3713     0917  2919               	goto	l6237
  3714     0918  2921               	goto	l5545
  3715     0919                     l6237:
  3716                           
  3717                           ; Switch size 1, requested type "simple"
  3718                           ; Number of cases is 2, Range of values is 1 to 2
  3719                           ; switch strategies available:
  3720                           ; Name         Instructions Cycles
  3721                           ; simple_byte            7     4 (average)
  3722                           ; direct_byte           17    11 (fixed)
  3723                           ; jumptable            263     9 (fixed)
  3724                           ;	Chosen strategy is simple_byte
  3725     0919  0864               	movf	??_lcd_goto^(0+128),w
  3726     091A  3A01               	xorlw	1	; case 1
  3727     091B  1903               	skipnz
  3728     091C  2901               	goto	l5537
  3729     091D  3A03               	xorlw	3	; case 2
  3730     091E  1903               	skipnz
  3731     091F  2908               	goto	l5539
  3732     0920  2921               	goto	l5545
  3733     0921                     l5545:
  3734                           
  3735                           ;src/lcd.c: 85:     lcd_write(coluna);
  3736     0921  1683               	bsf	3,5	;RP0=1, select bank1
  3737     0922  1303               	bcf	3,6	;RP1=0, select bank1
  3738     0923  0863               	movf	lcd_goto@coluna^(0+128),w
  3739     0924  120A  158A  21A6  120A  158A  	fcall	_lcd_write
  3740     0929                     l5547:
  3741                           
  3742                           ;src/lcd.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3743     0929  300C               	movlw	12
  3744     092A  1683               	bsf	3,5	;RP0=1, select bank1
  3745     092B  1303               	bcf	3,6	;RP1=0, select bank1
  3746     092C  00E4               	movwf	??_lcd_goto^(0+128)
  3747     092D                     u5737:
  3748     092D  0BE4               	decfsz	??_lcd_goto^(0+128),f
  3749     092E  292D               	goto	u5737
  3750     092F  0000               	nop
  3751     0930                     l43:
  3752     0930  0008               	return
  3753     0931                     __end_of_lcd_goto:
  3754                           
  3755                           	psect	text8
  3756     09A6                     __ptext8:	
  3757 ;; *************** function _lcd_write *****************
  3758 ;; Defined at:
  3759 ;;		line 160 in file "src/lcd.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  c               1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  c               1    4[BANK1 ] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3773 ;;      Params:         0       0       0       0       0
  3774 ;;      Locals:         0       0       1       0       0
  3775 ;;      Temps:          0       0       1       0       0
  3776 ;;      Totals:         0       0       2       0       0
  3777 ;;Total ram usage:        2 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 8
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_lcd_init
  3784 ;;		_lcd_goto
  3785 ;;		_lcd_puts
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789     09A6                     _lcd_write:	
  3790                           ;psect for function _lcd_write
  3791                           
  3792                           
  3793                           ;incstack = 0
  3794 ;; hardware stack exceeded
  3795                           ; Regs used in _lcd_write: [wreg]
  3796                           ;lcd_write@c stored from wreg
  3797     09A6  1683               	bsf	3,5	;RP0=1, select bank1
  3798     09A7  1303               	bcf	3,6	;RP1=0, select bank1
  3799     09A8  00E2               	movwf	lcd_write@c^(0+128)
  3800     09A9                     l5339:
  3801                           
  3802                           ;src/lcd.c: 161:     if (c & 0b00000001) {
  3803     09A9  1C62               	btfss	lcd_write@c^(0+128),0
  3804     09AA  29AC               	goto	u4991
  3805     09AB  29AD               	goto	u4990
  3806     09AC                     u4991:
  3807     09AC  29B1               	goto	l55
  3808     09AD                     u4990:
  3809     09AD                     l5341:
  3810                           
  3811                           ;src/lcd.c: 162:         RC2 = 1;
  3812     09AD  1283               	bcf	3,5	;RP0=0, select bank0
  3813     09AE  1303               	bcf	3,6	;RP1=0, select bank0
  3814     09AF  1507               	bsf	7,2	;volatile
  3815                           
  3816                           ;src/lcd.c: 163:     } else {
  3817     09B0  29B4               	goto	l56
  3818     09B1                     l55:
  3819                           
  3820                           ;src/lcd.c: 164:         RC2 = 0;
  3821     09B1  1283               	bcf	3,5	;RP0=0, select bank0
  3822     09B2  1303               	bcf	3,6	;RP1=0, select bank0
  3823     09B3  1107               	bcf	7,2	;volatile
  3824     09B4                     l56:	
  3825                           ;src/lcd.c: 165:     }
  3826                           
  3827                           
  3828                           ;src/lcd.c: 166:     if (c & 0b00000010) {
  3829     09B4  1683               	bsf	3,5	;RP0=1, select bank1
  3830     09B5  1303               	bcf	3,6	;RP1=0, select bank1
  3831     09B6  1CE2               	btfss	lcd_write@c^(0+128),1
  3832     09B7  29B9               	goto	u5001
  3833     09B8  29BA               	goto	u5000
  3834     09B9                     u5001:
  3835     09B9  29BE               	goto	l57
  3836     09BA                     u5000:
  3837     09BA                     l5343:
  3838                           
  3839                           ;src/lcd.c: 167:         RB2 = 1;
  3840     09BA  1283               	bcf	3,5	;RP0=0, select bank0
  3841     09BB  1303               	bcf	3,6	;RP1=0, select bank0
  3842     09BC  1506               	bsf	6,2	;volatile
  3843                           
  3844                           ;src/lcd.c: 168:     } else {
  3845     09BD  29C1               	goto	l58
  3846     09BE                     l57:
  3847                           
  3848                           ;src/lcd.c: 169:         RB2 = 0;
  3849     09BE  1283               	bcf	3,5	;RP0=0, select bank0
  3850     09BF  1303               	bcf	3,6	;RP1=0, select bank0
  3851     09C0  1106               	bcf	6,2	;volatile
  3852     09C1                     l58:	
  3853                           ;src/lcd.c: 170:     }
  3854                           
  3855                           
  3856                           ;src/lcd.c: 171:     if (c & 0b00000100) {
  3857     09C1  1683               	bsf	3,5	;RP0=1, select bank1
  3858     09C2  1303               	bcf	3,6	;RP1=0, select bank1
  3859     09C3  1D62               	btfss	lcd_write@c^(0+128),2
  3860     09C4  29C6               	goto	u5011
  3861     09C5  29C7               	goto	u5010
  3862     09C6                     u5011:
  3863     09C6  29CB               	goto	l59
  3864     09C7                     u5010:
  3865     09C7                     l5345:
  3866                           
  3867                           ;src/lcd.c: 172:         RB1 = 1;
  3868     09C7  1283               	bcf	3,5	;RP0=0, select bank0
  3869     09C8  1303               	bcf	3,6	;RP1=0, select bank0
  3870     09C9  1486               	bsf	6,1	;volatile
  3871                           
  3872                           ;src/lcd.c: 173:     } else {
  3873     09CA  29CE               	goto	l60
  3874     09CB                     l59:
  3875                           
  3876                           ;src/lcd.c: 174:         RB1 = 0;
  3877     09CB  1283               	bcf	3,5	;RP0=0, select bank0
  3878     09CC  1303               	bcf	3,6	;RP1=0, select bank0
  3879     09CD  1086               	bcf	6,1	;volatile
  3880     09CE                     l60:	
  3881                           ;src/lcd.c: 175:     }
  3882                           
  3883                           
  3884                           ;src/lcd.c: 176:     if (c & 0b00001000) {
  3885     09CE  1683               	bsf	3,5	;RP0=1, select bank1
  3886     09CF  1303               	bcf	3,6	;RP1=0, select bank1
  3887     09D0  1DE2               	btfss	lcd_write@c^(0+128),3
  3888     09D1  29D3               	goto	u5021
  3889     09D2  29D4               	goto	u5020
  3890     09D3                     u5021:
  3891     09D3  29D8               	goto	l61
  3892     09D4                     u5020:
  3893     09D4                     l5347:
  3894                           
  3895                           ;src/lcd.c: 177:         RB0 = 1;
  3896     09D4  1283               	bcf	3,5	;RP0=0, select bank0
  3897     09D5  1303               	bcf	3,6	;RP1=0, select bank0
  3898     09D6  1406               	bsf	6,0	;volatile
  3899                           
  3900                           ;src/lcd.c: 178:     } else {
  3901     09D7  29DB               	goto	l5349
  3902     09D8                     l61:
  3903                           
  3904                           ;src/lcd.c: 179:         RB0 = 0;
  3905     09D8  1283               	bcf	3,5	;RP0=0, select bank0
  3906     09D9  1303               	bcf	3,6	;RP1=0, select bank0
  3907     09DA  1006               	bcf	6,0	;volatile
  3908     09DB                     l5349:
  3909                           
  3910                           ;src/lcd.c: 181:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3911     09DB  300C               	movlw	12
  3912     09DC  1683               	bsf	3,5	;RP0=1, select bank1
  3913     09DD  1303               	bcf	3,6	;RP1=0, select bank1
  3914     09DE  00E1               	movwf	??_lcd_write^(0+128)
  3915     09DF                     u5747:
  3916     09DF  0BE1               	decfsz	??_lcd_write^(0+128),f
  3917     09E0  29DF               	goto	u5747
  3918     09E1  0000               	nop
  3919     09E2                     l5351:
  3920                           
  3921                           ;src/lcd.c: 182:     RC1 = 1;
  3922     09E2  1283               	bcf	3,5	;RP0=0, select bank0
  3923     09E3  1303               	bcf	3,6	;RP1=0, select bank0
  3924     09E4  1487               	bsf	7,1	;volatile
  3925     09E5                     l5353:
  3926                           
  3927                           ;src/lcd.c: 183:     RC1 = 0;
  3928     09E5  1087               	bcf	7,1	;volatile
  3929     09E6                     l63:
  3930     09E6  0008               	return
  3931     09E7                     __end_of_lcd_write:
  3932                           
  3933                           	psect	text9
  3934     16E6                     __ptext9:	
  3935 ;; *************** function _eeprom_read *****************
  3936 ;; Defined at:
  3937 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  addr            1    wreg     unsigned char 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  addr            1    3[BANK1 ] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      unsigned char 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, btemp+1
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3951 ;;      Params:         0       0       0       0       0
  3952 ;;      Locals:         0       0       1       0       0
  3953 ;;      Temps:          0       0       0       0       0
  3954 ;;      Totals:         0       0       1       0       0
  3955 ;;Total ram usage:        1 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 8
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_main
  3962 ;;		_eeprom_le_word_big
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966     16E6                     _eeprom_read:	
  3967                           ;psect for function _eeprom_read
  3968                           
  3969                           
  3970                           ;incstack = 0
  3971 ;; hardware stack exceeded
  3972                           ; Regs used in _eeprom_read: [wreg+status,2+status,0+btemp+1]
  3973                           ;eeprom_read@addr stored from wreg
  3974     16E6  1683               	bsf	3,5	;RP0=1, select bank1
  3975     16E7  1303               	bcf	3,6	;RP1=0, select bank1
  3976     16E8  00E1               	movwf	eeprom_read@addr^(0+128)
  3977     16E9                     l708:	
  3978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 8:  do
  3979                           
  3980     16E9  0064               	clrwdt	;# 
  3981     16EA  1683               	bsf	3,5	;RP0=1, select bank3
  3982     16EB  1703               	bsf	3,6	;RP1=1, select bank3
  3983     16EC  188C               	btfsc	12,1	;volsfr
  3984     16ED  2EEF               	goto	u5321
  3985     16EE  2EF2               	goto	u5320
  3986     16EF                     u5321:
  3987     16EF  1683               	bsf	3,5	;RP0=1, select bank1
  3988     16F0  1303               	bcf	3,6	;RP1=0, select bank1
  3989     16F1  2EE9               	goto	l708
  3990     16F2                     u5320:
  3991     16F2                     l5611:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  3994     16F2  1683               	bsf	3,5	;RP0=1, select bank1
  3995     16F3  1303               	bcf	3,6	;RP1=0, select bank1
  3996     16F4  0861               	movf	eeprom_read@addr^(0+128),w
  3997     16F5  1283               	bcf	3,5	;RP0=0, select bank2
  3998     16F6  1703               	bsf	3,6	;RP1=1, select bank2
  3999     16F7  008D               	movwf	13	;volatile
  4000     16F8  303F               	movlw	63
  4001     16F9  00FF               	movwf	btemp+1
  4002     16FA  087F               	movf	btemp+1,w
  4003     16FB  1683               	bsf	3,5	;RP0=1, select bank3
  4004     16FC  1703               	bsf	3,6	;RP1=1, select bank3
  4005     16FD  058C               	andwf	12,f	;volsfr
  4006     16FE  140C               	bsf	12,0	;volsfr
  4007     16FF  1283               	bcf	3,5	;RP0=0, select bank2
  4008     1700  1703               	bsf	3,6	;RP1=1, select bank2
  4009     1701  080C               	movf	12,w	;volatile
  4010     1702                     l710:
  4011     1702  0008               	return
  4012     1703                     __end_of_eeprom_read:
  4013                           
  4014                           	psect	text10
  4015     166C                     __ptext10:	
  4016 ;; *************** function _eeprom_grava_word *****************
  4017 ;; Defined at:
  4018 ;;		line 16 in file "src/eeprom.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  end             1    wreg     unsigned char 
  4021 ;;  dado            2    5[BANK1 ] unsigned int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  end             1    7[BANK1 ] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4033 ;;      Params:         0       0       2       0       0
  4034 ;;      Locals:         0       0       1       0       0
  4035 ;;      Temps:          0       0       0       0       0
  4036 ;;      Totals:         0       0       3       0       0
  4037 ;;Total ram usage:        3 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 9
  4040 ;; This function calls:
  4041 ;;		_eeprom_write
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047     166C                     _eeprom_grava_word:	
  4048                           ;psect for function _eeprom_grava_word
  4049                           
  4050                           
  4051                           ;incstack = 0
  4052 ;; hardware stack exceeded
  4053                           ; Regs used in _eeprom_grava_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4054                           ;eeprom_grava_word@end stored from wreg
  4055     166C  1683               	bsf	3,5	;RP0=1, select bank1
  4056     166D  1303               	bcf	3,6	;RP1=0, select bank1
  4057     166E  00E5               	movwf	eeprom_grava_word@end^(0+128)
  4058     166F                     l5581:
  4059                           
  4060                           ;src/eeprom.c: 17:     eeprom_write(end, dado >> 8);
  4061     166F  0864               	movf	(eeprom_grava_word@dado+1)^(0+128),w
  4062     1670  00E1               	movwf	eeprom_write@value^(0+128)
  4063     1671  0865               	movf	eeprom_grava_word@end^(0+128),w
  4064     1672  120A  158A  2058  160A  118A  	fcall	_eeprom_write
  4065                           
  4066                           ;src/eeprom.c: 18:     eeprom_write(end + 1, (uint8_t)dado);
  4067     1677  1683               	bsf	3,5	;RP0=1, select bank1
  4068     1678  1303               	bcf	3,6	;RP1=0, select bank1
  4069     1679  0863               	movf	eeprom_grava_word@dado^(0+128),w
  4070     167A  00E1               	movwf	eeprom_write@value^(0+128)
  4071     167B  0865               	movf	eeprom_grava_word@end^(0+128),w
  4072     167C  3E01               	addlw	1
  4073     167D  120A  158A  2058  160A  118A  	fcall	_eeprom_write
  4074     1682                     l187:
  4075     1682  0008               	return
  4076     1683                     __end_of_eeprom_grava_word:
  4077                           
  4078                           	psect	text11
  4079     0858                     __ptext11:	
  4080 ;; *************** function _eeprom_write *****************
  4081 ;; Defined at:
  4082 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eewrite.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  addr            1    wreg     unsigned char 
  4085 ;;  value           1    3[BANK1 ] unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  addr            1    4[BANK1 ] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, btemp+1
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       0       1       0       0
  4098 ;;      Locals:         0       0       1       0       0
  4099 ;;      Temps:          0       0       0       0       0
  4100 ;;      Totals:         0       0       2       0       0
  4101 ;;Total ram usage:        2 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 8
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_eeprom_grava_word
  4108 ;;		_main
  4109 ;;		_eeprom_grava_word_big
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113     0858                     _eeprom_write:	
  4114                           ;psect for function _eeprom_write
  4115                           
  4116                           
  4117                           ;incstack = 0
  4118 ;; hardware stack exceeded
  4119                           ; Regs used in _eeprom_write: [wreg+status,2+status,0+btemp+1]
  4120                           ;eeprom_write@addr stored from wreg
  4121     0858  1683               	bsf	3,5	;RP0=1, select bank1
  4122     0859  1303               	bcf	3,6	;RP1=0, select bank1
  4123     085A  00E2               	movwf	eeprom_write@addr^(0+128)
  4124     085B                     l727:	
  4125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  4126                           
  4127     085B                     l728:
  4128     085B  1683               	bsf	3,5	;RP0=1, select bank3
  4129     085C  1703               	bsf	3,6	;RP1=1, select bank3
  4130     085D  188C               	btfsc	12,1	;volsfr
  4131     085E  2860               	goto	u5031
  4132     085F  2861               	goto	u5030
  4133     0860                     u5031:
  4134     0860  285B               	goto	l728
  4135     0861                     u5030:
  4136     0861                     l5355:
  4137     0861  1683               	bsf	3,5	;RP0=1, select bank1
  4138     0862  1303               	bcf	3,6	;RP1=0, select bank1
  4139     0863  0862               	movf	eeprom_write@addr^(0+128),w
  4140     0864  1283               	bcf	3,5	;RP0=0, select bank2
  4141     0865  1703               	bsf	3,6	;RP1=1, select bank2
  4142     0866  008D               	movwf	13	;volatile
  4143     0867  1683               	bsf	3,5	;RP0=1, select bank1
  4144     0868  1303               	bcf	3,6	;RP1=0, select bank1
  4145     0869  0861               	movf	eeprom_write@value^(0+128),w
  4146     086A  1283               	bcf	3,5	;RP0=0, select bank2
  4147     086B  1703               	bsf	3,6	;RP1=1, select bank2
  4148     086C  008C               	movwf	12	;volatile
  4149     086D                     l5357:
  4150     086D  303F               	movlw	63
  4151     086E  00FF               	movwf	btemp+1
  4152     086F  087F               	movf	btemp+1,w
  4153     0870  1683               	bsf	3,5	;RP0=1, select bank3
  4154     0871  1703               	bsf	3,6	;RP1=1, select bank3
  4155     0872  058C               	andwf	12,f	;volsfr
  4156     0873                     l5359:
  4157     0873  1283               	bcf	3,5	;RP0=0, select bank0
  4158     0874  1303               	bcf	3,6	;RP1=0, select bank0
  4159     0875  1003               	bcf	3,0	;volatile
  4160     0876                     l5361:
  4161     0876  1F8B               	btfss	11,7	;volatile
  4162     0877  2879               	goto	u5041
  4163     0878  287A               	goto	u5040
  4164     0879                     u5041:
  4165     0879  287B               	goto	l731
  4166     087A                     u5040:
  4167     087A                     l5363:
  4168     087A  1403               	bsf	3,0	;volatile
  4169     087B                     l731:
  4170     087B  138B               	bcf	11,7	;volatile
  4171     087C  1683               	bsf	3,5	;RP0=1, select bank3
  4172     087D  1703               	bsf	3,6	;RP1=1, select bank3
  4173     087E  150C               	bsf	12,2	;volsfr
  4174     087F                     l5365:
  4175     087F  3055               	movlw	85
  4176     0880  008D               	movwf	13	;volsfr
  4177     0881  30AA               	movlw	170
  4178     0882  008D               	movwf	13	;volsfr
  4179     0883                     l5367:
  4180     0883  148C               	bsf	12,1	;volsfr
  4181     0884                     l5369:
  4182     0884  110C               	bcf	12,2	;volsfr
  4183     0885                     l5371:
  4184     0885  1283               	bcf	3,5	;RP0=0, select bank0
  4185     0886  1303               	bcf	3,6	;RP1=0, select bank0
  4186     0887  1C03               	btfss	3,0	;volatile
  4187     0888  288A               	goto	u5051
  4188     0889  288B               	goto	u5050
  4189     088A                     u5051:
  4190     088A  288C               	goto	l734
  4191     088B                     u5050:
  4192     088B                     l5373:
  4193     088B  178B               	bsf	11,7	;volatile
  4194     088C                     l734:
  4195     088C  0008               	return
  4196     088D                     __end_of_eeprom_write:
  4197                           
  4198                           	psect	text12
  4199     088D                     __ptext12:	
  4200 ;; *************** function _btns_init *****************
  4201 ;; Defined at:
  4202 ;;		line 6 in file "src/botoes.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0
  4219 ;;      Totals:         0       0       0       0       0
  4220 ;;Total ram usage:        0 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 8
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230     088D                     _btns_init:	
  4231                           ;psect for function _btns_init
  4232                           
  4233     088D                     l5583:	
  4234                           ;incstack = 0
  4235 ;; hardware stack exceeded
  4236                           ; Regs used in _btns_init: [wreg]
  4237                           
  4238                           
  4239                           ;src/botoes.c: 12:   TRISB4 = TRISB5 = TRISB6 = TRISB7 = 1;
  4240     088D  1683               	bsf	3,5	;RP0=1, select bank1
  4241     088E  1303               	bcf	3,6	;RP1=0, select bank1
  4242     088F  1786               	bsf	6,7	;volatile
  4243     0890  1B86               	btfsc	6,7	;volatile
  4244     0891  2893               	goto	u5241
  4245     0892  2897               	goto	u5240
  4246     0893                     u5241:
  4247     0893  1683               	bsf	3,5	;RP0=1, select bank1
  4248     0894  1303               	bcf	3,6	;RP1=0, select bank1
  4249     0895  1706               	bsf	6,6	;volatile
  4250     0896  289A               	goto	u5254
  4251     0897                     u5240:
  4252     0897  1683               	bsf	3,5	;RP0=1, select bank1
  4253     0898  1303               	bcf	3,6	;RP1=0, select bank1
  4254     0899  1306               	bcf	6,6	;volatile
  4255     089A                     u5254:
  4256     089A  1B06               	btfsc	6,6	;volatile
  4257     089B  289D               	goto	u5251
  4258     089C  28A1               	goto	u5250
  4259     089D                     u5251:
  4260     089D  1683               	bsf	3,5	;RP0=1, select bank1
  4261     089E  1303               	bcf	3,6	;RP1=0, select bank1
  4262     089F  1686               	bsf	6,5	;volatile
  4263     08A0  28A4               	goto	u5264
  4264     08A1                     u5250:
  4265     08A1  1683               	bsf	3,5	;RP0=1, select bank1
  4266     08A2  1303               	bcf	3,6	;RP1=0, select bank1
  4267     08A3  1286               	bcf	6,5	;volatile
  4268     08A4                     u5264:
  4269     08A4  1A86               	btfsc	6,5	;volatile
  4270     08A5  28A7               	goto	u5261
  4271     08A6  28AB               	goto	u5260
  4272     08A7                     u5261:
  4273     08A7  1683               	bsf	3,5	;RP0=1, select bank1
  4274     08A8  1303               	bcf	3,6	;RP1=0, select bank1
  4275     08A9  1606               	bsf	6,4	;volatile
  4276     08AA  28AE               	goto	u5274
  4277     08AB                     u5260:
  4278     08AB  1683               	bsf	3,5	;RP0=1, select bank1
  4279     08AC  1303               	bcf	3,6	;RP1=0, select bank1
  4280     08AD  1206               	bcf	6,4	;volatile
  4281     08AE                     u5274:
  4282                           
  4283                           ;src/botoes.c: 13:   RB4 = RB5 = RB6 = RB7 = 0;
  4284     08AE  1283               	bcf	3,5	;RP0=0, select bank0
  4285     08AF  1303               	bcf	3,6	;RP1=0, select bank0
  4286     08B0  1386               	bcf	6,7	;volatile
  4287     08B1  1306               	bcf	6,6	;volatile
  4288     08B2  1286               	bcf	6,5	;volatile
  4289     08B3  1206               	bcf	6,4	;volatile
  4290                           
  4291                           ;src/botoes.c: 16:     OPTION_REGbits.nRBPU = 0;
  4292     08B4  1683               	bsf	3,5	;RP0=1, select bank1
  4293     08B5  1303               	bcf	3,6	;RP1=0, select bank1
  4294     08B6  1381               	bcf	1,7	;volatile
  4295     08B7                     l5585:
  4296                           
  4297                           ;src/botoes.c: 17:     WPUB = 0xf0;
  4298     08B7  30F0               	movlw	240
  4299     08B8  0095               	movwf	21	;volatile
  4300                           
  4301                           ;src/botoes.c: 22:     ANSELH = 0b00010010;
  4302     08B9  3012               	movlw	18
  4303     08BA  1683               	bsf	3,5	;RP0=1, select bank3
  4304     08BB  1703               	bsf	3,6	;RP1=1, select bank3
  4305     08BC  0089               	movwf	9	;volatile
  4306                           
  4307                           ;src/botoes.c: 23:     IOCB = 0xf0;
  4308     08BD  30F0               	movlw	240
  4309     08BE  1683               	bsf	3,5	;RP0=1, select bank1
  4310     08BF  1303               	bcf	3,6	;RP1=0, select bank1
  4311     08C0  0096               	movwf	22	;volatile
  4312     08C1                     l5587:
  4313                           
  4314                           ;src/botoes.c: 25:     INTCONbits.RBIE = 1;
  4315     08C1  158B               	bsf	11,3	;volatile
  4316     08C2                     l170:
  4317     08C2  0008               	return
  4318     08C3                     __end_of_btns_init:
  4319                           
  4320                           	psect	text13
  4321     16B4                     __ptext13:	
  4322 ;; *************** function _adcon_init *****************
  4323 ;; Defined at:
  4324 ;;		line 113 in file "src/adcon.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 8
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352     16B4                     _adcon_init:	
  4353                           ;psect for function _adcon_init
  4354                           
  4355     16B4                     l5569:	
  4356                           ;incstack = 0
  4357 ;; hardware stack exceeded
  4358                           ; Regs used in _adcon_init: [wreg+status,2+status,0]
  4359                           
  4360                           
  4361                           ;src/adcon.c: 114:   TRISA = 0xff;
  4362     16B4  30FF               	movlw	255
  4363     16B5  1683               	bsf	3,5	;RP0=1, select bank1
  4364     16B6  1303               	bcf	3,6	;RP1=0, select bank1
  4365     16B7  0085               	movwf	5	;volatile
  4366                           
  4367                           ;src/adcon.c: 116:     ANSEL = 0b00011111;
  4368     16B8  301F               	movlw	31
  4369     16B9  1683               	bsf	3,5	;RP0=1, select bank3
  4370     16BA  1703               	bsf	3,6	;RP1=1, select bank3
  4371     16BB  0088               	movwf	8	;volatile
  4372     16BC                     l5571:
  4373                           
  4374                           ;src/adcon.c: 118:     ADCON1bits.VCFG1 = 0;
  4375     16BC  1683               	bsf	3,5	;RP0=1, select bank1
  4376     16BD  1303               	bcf	3,6	;RP1=0, select bank1
  4377     16BE  129F               	bcf	31,5	;volatile
  4378     16BF                     l5573:
  4379                           
  4380                           ;src/adcon.c: 120:     ADCON1bits.VCFG0 = 1;
  4381     16BF  161F               	bsf	31,4	;volatile
  4382     16C0                     l5575:
  4383                           
  4384                           ;src/adcon.c: 126:   ADCON0bits.ADCS = 1;
  4385     16C0  1283               	bcf	3,5	;RP0=0, select bank0
  4386     16C1  1303               	bcf	3,6	;RP1=0, select bank0
  4387     16C2  081F               	movf	31,w	;volatile
  4388     16C3  393F               	andlw	-193
  4389     16C4  3840               	iorlw	64
  4390     16C5  009F               	movwf	31	;volatile
  4391     16C6                     l5577:
  4392                           
  4393                           ;src/adcon.c: 127:   ADCON1bits.ADFM = 1;
  4394     16C6  1683               	bsf	3,5	;RP0=1, select bank1
  4395     16C7  1303               	bcf	3,6	;RP1=0, select bank1
  4396     16C8  179F               	bsf	31,7	;volatile
  4397     16C9                     l5579:
  4398                           
  4399                           ;src/adcon.c: 128:   ADCON0bits.ADON = 1;
  4400     16C9  1283               	bcf	3,5	;RP0=0, select bank0
  4401     16CA  1303               	bcf	3,6	;RP1=0, select bank0
  4402     16CB  141F               	bsf	31,0	;volatile
  4403     16CC                     l110:
  4404     16CC  0008               	return
  4405     16CD                     __end_of_adcon_init:
  4406                           
  4407                           	psect	text14
  4408     0ECE                     __ptext14:	
  4409 ;; *************** function _handler *****************
  4410 ;; Defined at:
  4411 ;;		line 17 in file "src/handler.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  tempo_amostr    2    0[BANK1 ] unsigned int 
  4416 ;;  botao           1    2[BANK1 ] enum E1241
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         0       0       0       0       0
  4427 ;;      Locals:         0       0       3       0       0
  4428 ;;      Temps:          0       6       0       0       0
  4429 ;;      Totals:         0       6       3       0       0
  4430 ;;Total ram usage:        9 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 7
  4433 ;; This function calls:
  4434 ;;		_adcon_amostra_print
  4435 ;;		_adcon_amostra_print_grava
  4436 ;;		_btns_testa
  4437 ;;		_est_maquina
  4438 ;;		_rs232_transmite
  4439 ;; This function is called by:
  4440 ;;		Interrupt level 1
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444     0ECE                     _handler:	
  4445                           ;psect for function _handler
  4446                           
  4447     0ECE                     i1l5757:
  4448                           
  4449                           ;src/handler.c: 18:   TBotao botao;;src/handler.c: 19:   static uint16_t count_t0 = 0;;s
      +                          rc/handler.c: 20:   uint16_t tempo_amostra;;src/handler.c: 31:   if (PIE1bits.RCIE) {
  4450     0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  4451     0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  4452     0ED0  1E8C               	btfss	12,5	;volatile
  4453     0ED1  2ED3               	goto	u541_21
  4454     0ED2  2ED4               	goto	u541_20
  4455     0ED3                     u541_21:
  4456     0ED3  2EE5               	goto	i1l5765
  4457     0ED4                     u541_20:
  4458     0ED4                     i1l5759:
  4459                           
  4460                           ;src/handler.c: 32:     if (PIR1bits.RCIF) {
  4461     0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  4462     0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  4463     0ED6  1E8C               	btfss	12,5	;volatile
  4464     0ED7  2ED9               	goto	u542_21
  4465     0ED8  2EDA               	goto	u542_20
  4466     0ED9                     u542_21:
  4467     0ED9  2EE5               	goto	i1l5765
  4468     0EDA                     u542_20:
  4469     0EDA                     i1l5761:
  4470                           
  4471                           ;src/handler.c: 33:       if (RCREG == 0x41) {
  4472     0EDA  3041               	movlw	65
  4473     0EDB  061A               	xorwf	26,w	;volatile
  4474     0EDC  1D03               	btfss	3,2
  4475     0EDD  2EDF               	goto	u543_21
  4476     0EDE  2EE0               	goto	u543_20
  4477     0EDF                     u543_21:
  4478     0EDF  2EE5               	goto	i1l5765
  4479     0EE0                     u543_20:
  4480     0EE0                     i1l5763:
  4481                           
  4482                           ;src/handler.c: 45:         rs232_transmite();
  4483     0EE0  120A  158A  2374  120A  158A  	fcall	_rs232_transmite
  4484     0EE5                     i1l5765:
  4485                           
  4486                           ;src/handler.c: 54:   if (INTCONbits.T0IE) {
  4487     0EE5  1E8B               	btfss	11,5	;volatile
  4488     0EE6  2EE8               	goto	u544_21
  4489     0EE7  2EE9               	goto	u544_20
  4490     0EE8                     u544_21:
  4491     0EE8  2F31               	goto	i1l5785
  4492     0EE9                     u544_20:
  4493     0EE9                     i1l5767:
  4494                           
  4495                           ;src/handler.c: 55:     if (INTCONbits.T0IF) {
  4496     0EE9  1D0B               	btfss	11,2	;volatile
  4497     0EEA  2EEC               	goto	u545_21
  4498     0EEB  2EED               	goto	u545_20
  4499     0EEC                     u545_21:
  4500     0EEC  2F31               	goto	i1l5785
  4501     0EED                     u545_20:
  4502     0EED                     i1l5769:
  4503                           
  4504                           ;src/handler.c: 58:       tempo_amostra = cfg_tempo_amostra_atual;
  4505     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4506     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  4507     0EEF  0869               	movf	_cfg_tempo_amostra_atual,w
  4508     0EF0  00DF               	movwf	??_handler
  4509     0EF1  01E0               	clrf	??_handler+1
  4510     0EF2  085F               	movf	??_handler,w
  4511     0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  4512     0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  4513     0EF5  00DE               	movwf	handler@tempo_amostra^(0+128)
  4514     0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4515     0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4516     0EF8  0860               	movf	??_handler+1,w
  4517     0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  4518     0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  4519     0EFB  00DF               	movwf	(handler@tempo_amostra+1)^(0+128)
  4520                           
  4521                           ;src/handler.c: 59:       if (count_t0 >= tempo_amostra) {
  4522     0EFC  085F               	movf	(handler@tempo_amostra+1)^(0+128),w
  4523     0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  4524     0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  4525     0EFF  0266               	subwf	handler@count_t0+1,w
  4526     0F00  1D03               	skipz
  4527     0F01  2F08               	goto	u546_25
  4528     0F02  1683               	bsf	3,5	;RP0=1, select bank1
  4529     0F03  1303               	bcf	3,6	;RP1=0, select bank1
  4530     0F04  085E               	movf	handler@tempo_amostra^(0+128),w
  4531     0F05  1283               	bcf	3,5	;RP0=0, select bank0
  4532     0F06  1303               	bcf	3,6	;RP1=0, select bank0
  4533     0F07  0265               	subwf	handler@count_t0,w
  4534     0F08                     u546_25:
  4535     0F08  1C03               	skipc
  4536     0F09  2F0B               	goto	u546_21
  4537     0F0A  2F0C               	goto	u546_20
  4538     0F0B                     u546_21:
  4539     0F0B  2F28               	goto	i1l5781
  4540     0F0C                     u546_20:
  4541     0F0C                     i1l5771:
  4542                           
  4543                           ;src/handler.c: 61:         if (est_estado_atual == EST_ESTADO_MONITORA) {
  4544     0F0C  3002               	movlw	2
  4545     0F0D  0668               	xorwf	_est_estado_atual,w
  4546     0F0E  1D03               	btfss	3,2
  4547     0F0F  2F11               	goto	u547_21
  4548     0F10  2F12               	goto	u547_20
  4549     0F11                     u547_21:
  4550     0F11  2F18               	goto	i1l5775
  4551     0F12                     u547_20:
  4552     0F12                     i1l5773:
  4553                           
  4554                           ;src/handler.c: 62:           adcon_amostra_print();
  4555     0F12  160A  118A  27A5  120A  158A  	fcall	_adcon_amostra_print
  4556                           
  4557                           ;src/handler.c: 63:         } else if (est_estado_atual == EST_ESTADO_MONITORA_GRAVA) {
  4558     0F17  2F23               	goto	i1l5779
  4559     0F18                     i1l5775:
  4560     0F18  3003               	movlw	3
  4561     0F19  0668               	xorwf	_est_estado_atual,w
  4562     0F1A  1D03               	btfss	3,2
  4563     0F1B  2F1D               	goto	u548_21
  4564     0F1C  2F1E               	goto	u548_20
  4565     0F1D                     u548_21:
  4566     0F1D  2F23               	goto	i1l5779
  4567     0F1E                     u548_20:
  4568     0F1E                     i1l5777:
  4569                           
  4570                           ;src/handler.c: 64:           adcon_amostra_print_grava();
  4571     0F1E  120A  158A  275A  120A  158A  	fcall	_adcon_amostra_print_grava
  4572     0F23                     i1l5779:
  4573                           
  4574                           ;src/handler.c: 66:         count_t0 = 0;
  4575     0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4576     0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4577     0F25  01E5               	clrf	handler@count_t0
  4578     0F26  01E6               	clrf	handler@count_t0+1
  4579                           
  4580                           ;src/handler.c: 67:       }
  4581     0F27  2F2E               	goto	i1l435
  4582     0F28                     i1l5781:
  4583                           
  4584                           ;src/handler.c: 69:         count_t0++;
  4585     0F28  3001               	movlw	1
  4586     0F29  07E5               	addwf	handler@count_t0,f
  4587     0F2A  1803               	skipnc
  4588     0F2B  0AE6               	incf	handler@count_t0+1,f
  4589     0F2C  3000               	movlw	0
  4590     0F2D  07E6               	addwf	handler@count_t0+1,f
  4591     0F2E                     i1l435:	
  4592                           ;src/handler.c: 70:       }
  4593                           
  4594                           
  4595                           ;src/handler.c: 71:       TMR0 = 39;
  4596     0F2E  3027               	movlw	39
  4597     0F2F  0081               	movwf	1	;volatile
  4598     0F30                     i1l5783:
  4599                           
  4600                           ;src/handler.c: 72:       INTCONbits.T0IF = 0;
  4601     0F30  110B               	bcf	11,2	;volatile
  4602     0F31                     i1l5785:
  4603                           
  4604                           ;src/handler.c: 79:   if (RBIE) {
  4605     0F31  1D8B               	btfss	11,3	;volatile
  4606     0F32  2F34               	goto	u549_21
  4607     0F33  2F35               	goto	u549_20
  4608     0F34                     u549_21:
  4609     0F34  2F4D               	goto	i1l439
  4610     0F35                     u549_20:
  4611     0F35                     i1l5787:
  4612                           
  4613                           ;src/handler.c: 81:     if (RBIF) {
  4614     0F35  1C0B               	btfss	11,0	;volatile
  4615     0F36  2F38               	goto	u550_21
  4616     0F37  2F39               	goto	u550_20
  4617     0F38                     u550_21:
  4618     0F38  2F4D               	goto	i1l439
  4619     0F39                     u550_20:
  4620     0F39                     i1l5789:
  4621                           
  4622                           ;src/handler.c: 85:       botao = btns_testa();
  4623     0F39  160A  118A  2703  120A  158A  	fcall	_btns_testa
  4624     0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  4625     0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  4626     0F40  00E0               	movwf	handler@botao^(0+128)
  4627     0F41                     i1l5791:
  4628                           
  4629                           ;src/handler.c: 87:       if (botao != 0) {
  4630     0F41  0860               	movf	handler@botao^(0+128),w
  4631     0F42  1903               	btfsc	3,2
  4632     0F43  2F45               	goto	u551_21
  4633     0F44  2F46               	goto	u551_20
  4634     0F45                     u551_21:
  4635     0F45  2F4C               	goto	i1l5795
  4636     0F46                     u551_20:
  4637     0F46                     i1l5793:
  4638                           
  4639                           ;src/handler.c: 88:         est_maquina(botao);
  4640     0F46  0860               	movf	handler@botao^(0+128),w
  4641     0F47  120A  158A  2438  120A  158A  	fcall	_est_maquina
  4642     0F4C                     i1l5795:
  4643                           
  4644                           ;src/handler.c: 92:       RBIF = 0;
  4645     0F4C  100B               	bcf	11,0	;volatile
  4646     0F4D                     i1l439:
  4647     0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  4648     0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  4649     0F4F  0864               	movf	??_handler+5,w
  4650     0F50  00FF               	movwf	btemp+1
  4651     0F51  0863               	movf	??_handler+4,w
  4652     0F52  008A               	movwf	10
  4653     0F53  0862               	movf	??_handler+3,w
  4654     0F54  0084               	movwf	4
  4655     0F55  0E61               	swapf	??_handler+2,w
  4656     0F56  0083               	movwf	3
  4657     0F57  0EFE               	swapf	btemp,f
  4658     0F58  0E7E               	swapf	btemp,w
  4659     0F59  0009               	retfie
  4660     0F5A                     __end_of_handler:
  4661                           
  4662                           	psect	intentry
  4663     0004                     __pintentry:	
  4664                           ;incstack = 0
  4665 ;; hardware stack exceeded
  4666                           ; Regs used in _handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4667                           
  4668     0004                     interrupt_function:
  4669     007E                     saved_w	set	btemp
  4670     0004  00FE               	movwf	btemp
  4671     0005  0E03               	swapf	3,w
  4672     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4673     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4674     0008  00E1               	movwf	??_handler+2
  4675     0009  0804               	movf	4,w
  4676     000A  00E2               	movwf	??_handler+3
  4677     000B  080A               	movf	10,w
  4678     000C  00E3               	movwf	??_handler+4
  4679     000D  087F               	movf	btemp+1,w
  4680     000E  00E4               	movwf	??_handler+5
  4681     000F  120A  158A  2ECE   	ljmp	_handler
  4682                           
  4683                           	psect	text15
  4684     0B74                     __ptext15:	
  4685 ;; *************** function _rs232_transmite *****************
  4686 ;; Defined at:
  4687 ;;		line 27 in file "src/rs232.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  i               1    7[COMMON] unsigned char 
  4692 ;;  x               1    6[COMMON] unsigned char 
  4693 ;;  qtd_bytes       1    5[COMMON] unsigned char 
  4694 ;;  qtd_sens        1    4[COMMON] unsigned char 
  4695 ;;  qtd_val         1    3[COMMON] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         0       0       0       0       0
  4706 ;;      Locals:         5       0       0       0       0
  4707 ;;      Temps:          2       0       0       0       0
  4708 ;;      Totals:         7       0       0       0       0
  4709 ;;Total ram usage:        7 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 1
  4712 ;; This function calls:
  4713 ;;		i1_eeprom_read
  4714 ;; This function is called by:
  4715 ;;		_handler
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719     0B74                     _rs232_transmite:	
  4720                           ;psect for function _rs232_transmite
  4721                           
  4722     0B74                     i1l5645:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _rs232_transmite: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4725                           
  4726                           
  4727                           ;src/rs232.c: 28:     uint8_t qtd_val, x;;src/rs232.c: 30:     uint8_t qtd_sens, qtd_byt
      +                          es;;src/rs232.c: 31:     uint8_t i = 0;
  4728     0B74  01F7               	clrf	rs232_transmite@i
  4729     0B75                     i1l5647:
  4730                           
  4731                           ;src/rs232.c: 33:     qtd_val = eeprom_read(0x08);
  4732     0B75  3008               	movlw	8
  4733     0B76  160A  118A  2655  120A  158A  	fcall	i1_eeprom_read
  4734     0B7B  00F3               	movwf	rs232_transmite@qtd_val
  4735     0B7C                     i1l5649:
  4736                           
  4737                           ;src/rs232.c: 34:     qtd_bytes = qtd_val * 2;
  4738     0B7C  0873               	movf	rs232_transmite@qtd_val,w
  4739     0B7D  00F1               	movwf	??_rs232_transmite
  4740     0B7E  0771               	addwf	??_rs232_transmite,w
  4741     0B7F  00F5               	movwf	rs232_transmite@qtd_bytes
  4742     0B80                     i1l5651:
  4743                           
  4744                           ;src/rs232.c: 47:     qtd_sens = eeprom_read(0x00);
  4745     0B80  3000               	movlw	0
  4746     0B81  160A  118A  2655  120A  158A  	fcall	i1_eeprom_read
  4747     0B86  00F4               	movwf	rs232_transmite@qtd_sens
  4748     0B87                     i1l5653:
  4749                           
  4750                           ;src/rs232.c: 48:     TXREG = qtd_sens;
  4751     0B87  0874               	movf	rs232_transmite@qtd_sens,w
  4752     0B88  1283               	bcf	3,5	;RP0=0, select bank0
  4753     0B89  1303               	bcf	3,6	;RP1=0, select bank0
  4754     0B8A  0099               	movwf	25	;volatile
  4755     0B8B                     i1l5655:
  4756                           
  4757                           ;src/rs232.c: 50:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4758     0B8B  3007               	movlw	7
  4759     0B8C  00F2               	movwf	??_rs232_transmite+1
  4760     0B8D  307D               	movlw	125
  4761     0B8E  00F1               	movwf	??_rs232_transmite
  4762     0B8F                     u575_27:
  4763     0B8F  0BF1               	decfsz	??_rs232_transmite,f
  4764     0B90  2B8F               	goto	u575_27
  4765     0B91  0BF2               	decfsz	??_rs232_transmite+1,f
  4766     0B92  2B8F               	goto	u575_27
  4767     0B93                     i1l5657:
  4768                           
  4769                           ;src/rs232.c: 51:     TXREG = 0;
  4770     0B93  1283               	bcf	3,5	;RP0=0, select bank0
  4771     0B94  1303               	bcf	3,6	;RP1=0, select bank0
  4772     0B95  0199               	clrf	25	;volatile
  4773     0B96                     i1l5659:
  4774                           
  4775                           ;src/rs232.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4776     0B96  3007               	movlw	7
  4777     0B97  00F2               	movwf	??_rs232_transmite+1
  4778     0B98  307D               	movlw	125
  4779     0B99  00F1               	movwf	??_rs232_transmite
  4780     0B9A                     u576_27:
  4781     0B9A  0BF1               	decfsz	??_rs232_transmite,f
  4782     0B9B  2B9A               	goto	u576_27
  4783     0B9C  0BF2               	decfsz	??_rs232_transmite+1,f
  4784     0B9D  2B9A               	goto	u576_27
  4785                           
  4786                           ;src/rs232.c: 54:     for (; i < qtd_bytes; i = i + 2) {
  4787     0B9E  2BCA               	goto	i1l5673
  4788     0B9F                     i1l5661:
  4789                           
  4790                           ;src/rs232.c: 55:         x = eeprom_read(0x10 + i + 1);
  4791     0B9F  0877               	movf	rs232_transmite@i,w
  4792     0BA0  3E11               	addlw	17
  4793     0BA1  160A  118A  2655  120A  158A  	fcall	i1_eeprom_read
  4794     0BA6  00F6               	movwf	rs232_transmite@x
  4795     0BA7                     i1l5663:
  4796                           
  4797                           ;src/rs232.c: 56:         TXREG = x;
  4798     0BA7  0876               	movf	rs232_transmite@x,w
  4799     0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  4800     0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  4801     0BAA  0099               	movwf	25	;volatile
  4802     0BAB                     i1l5665:
  4803                           
  4804                           ;src/rs232.c: 57:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4805     0BAB  3007               	movlw	7
  4806     0BAC  00F2               	movwf	??_rs232_transmite+1
  4807     0BAD  307D               	movlw	125
  4808     0BAE  00F1               	movwf	??_rs232_transmite
  4809     0BAF                     u577_27:
  4810     0BAF  0BF1               	decfsz	??_rs232_transmite,f
  4811     0BB0  2BAF               	goto	u577_27
  4812     0BB1  0BF2               	decfsz	??_rs232_transmite+1,f
  4813     0BB2  2BAF               	goto	u577_27
  4814                           
  4815                           ;src/rs232.c: 59:         x = eeprom_read(0x10 + i);
  4816     0BB3  0877               	movf	rs232_transmite@i,w
  4817     0BB4  3E10               	addlw	16
  4818     0BB5  160A  118A  2655  120A  158A  	fcall	i1_eeprom_read
  4819     0BBA  00F6               	movwf	rs232_transmite@x
  4820     0BBB                     i1l5667:
  4821                           
  4822                           ;src/rs232.c: 60:         TXREG = x;
  4823     0BBB  0876               	movf	rs232_transmite@x,w
  4824     0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  4825     0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  4826     0BBE  0099               	movwf	25	;volatile
  4827     0BBF                     i1l5669:
  4828                           
  4829                           ;src/rs232.c: 61:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4830     0BBF  3007               	movlw	7
  4831     0BC0  00F2               	movwf	??_rs232_transmite+1
  4832     0BC1  307D               	movlw	125
  4833     0BC2  00F1               	movwf	??_rs232_transmite
  4834     0BC3                     u578_27:
  4835     0BC3  0BF1               	decfsz	??_rs232_transmite,f
  4836     0BC4  2BC3               	goto	u578_27
  4837     0BC5  0BF2               	decfsz	??_rs232_transmite+1,f
  4838     0BC6  2BC3               	goto	u578_27
  4839     0BC7                     i1l5671:
  4840                           
  4841                           ;src/rs232.c: 62:     }
  4842     0BC7  0877               	movf	rs232_transmite@i,w
  4843     0BC8  3E02               	addlw	2
  4844     0BC9  00F7               	movwf	rs232_transmite@i
  4845     0BCA                     i1l5673:
  4846     0BCA  0875               	movf	rs232_transmite@qtd_bytes,w
  4847     0BCB  0277               	subwf	rs232_transmite@i,w
  4848     0BCC  1C03               	skipc
  4849     0BCD  2BCF               	goto	u533_21
  4850     0BCE  2BD0               	goto	u533_20
  4851     0BCF                     u533_21:
  4852     0BCF  2B9F               	goto	i1l5661
  4853     0BD0                     u533_20:
  4854     0BD0                     i1l600:
  4855     0BD0  0008               	return
  4856     0BD1                     __end_of_rs232_transmite:
  4857                           
  4858                           	psect	text16
  4859     0C38                     __ptext16:	
  4860 ;; *************** function _est_maquina *****************
  4861 ;; Defined at:
  4862 ;;		line 96 in file "src/estados.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  botao           1    wreg     enum E1289
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  botao           1   62[BANK0 ] enum E1289
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         0       0       0       0       0
  4877 ;;      Locals:         0       1       0       0       0
  4878 ;;      Temps:          0       2       0       0       0
  4879 ;;      Totals:         0       3       0       0       0
  4880 ;;Total ram usage:        3 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 6
  4883 ;; This function calls:
  4884 ;;		_est_estado_inicial
  4885 ;;		_est_estado_menu_conf_quant_sensores
  4886 ;;		_est_estado_menu_conf_tempo_amostra
  4887 ;;		_est_estado_menu_limpar
  4888 ;;		_est_estado_menu_principal
  4889 ;;		_est_estado_monitora
  4890 ;;		_est_estado_mostra_max_min
  4891 ;;		_est_estado_ver_todos
  4892 ;; This function is called by:
  4893 ;;		_handler
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897     0C38                     _est_maquina:	
  4898                           ;psect for function _est_maquina
  4899                           
  4900                           
  4901                           ;incstack = 0
  4902 ;; hardware stack exceeded
  4903                           ; Regs used in _est_maquina: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4904                           ;est_maquina@botao stored from wreg
  4905     0C38  1283               	bcf	3,5	;RP0=0, select bank0
  4906     0C39  1303               	bcf	3,6	;RP1=0, select bank0
  4907     0C3A  00DE               	movwf	est_maquina@botao
  4908     0C3B                     i1l5615:
  4909                           
  4910                           ;src/estados.c: 98:     switch (est_estado_atual) {
  4911     0C3B  2C7B               	goto	i1l5637
  4912     0C3C                     i1l5617:
  4913                           
  4914                           ;src/estados.c: 100:              est_estado_inicial(botao);
  4915     0C3C  085E               	movf	est_maquina@botao,w
  4916     0C3D  160A  118A  25CC  120A  158A  	fcall	_est_estado_inicial
  4917                           
  4918                           ;src/estados.c: 101:         break;
  4919     0C42  2CA0               	goto	i1l288
  4920     0C43                     i1l5619:
  4921                           
  4922                           ;src/estados.c: 104:             est_estado_menu_principal(botao);
  4923     0C43  085E               	movf	est_maquina@botao,w
  4924     0C44  120A  118A  2742  120A  158A  	fcall	_est_estado_menu_principal
  4925                           
  4926                           ;src/estados.c: 105:         break;
  4927     0C49  2CA0               	goto	i1l288
  4928     0C4A                     i1l5621:
  4929                           
  4930                           ;src/estados.c: 108:             est_estado_monitora(botao);
  4931     0C4A  085E               	movf	est_maquina@botao,w
  4932     0C4B  120A  118A  27EE  120A  158A  	fcall	_est_estado_monitora
  4933                           
  4934                           ;src/estados.c: 109:         break;
  4935     0C50  2CA0               	goto	i1l288
  4936     0C51                     i1l5623:
  4937                           
  4938                           ;src/estados.c: 118:             est_estado_monitora(botao);
  4939     0C51  085E               	movf	est_maquina@botao,w
  4940     0C52  120A  118A  27EE  120A  158A  	fcall	_est_estado_monitora
  4941                           
  4942                           ;src/estados.c: 119:         break;
  4943     0C57  2CA0               	goto	i1l288
  4944     0C58                     i1l5625:
  4945                           
  4946                           ;src/estados.c: 122:             est_estado_ver_todos(botao);
  4947     0C58  085E               	movf	est_maquina@botao,w
  4948     0C59  120A  158A  2276  120A  158A  	fcall	_est_estado_ver_todos
  4949                           
  4950                           ;src/estados.c: 123:         break;
  4951     0C5E  2CA0               	goto	i1l288
  4952     0C5F                     i1l5627:
  4953                           
  4954                           ;src/estados.c: 126:             est_estado_mostra_max_min(botao);
  4955     0C5F  085E               	movf	est_maquina@botao,w
  4956     0C60  160A  118A  260C  120A  158A  	fcall	_est_estado_mostra_max_min
  4957                           
  4958                           ;src/estados.c: 127:         break;
  4959     0C65  2CA0               	goto	i1l288
  4960     0C66                     i1l5629:
  4961                           
  4962                           ;src/estados.c: 130:             est_estado_menu_limpar(botao);
  4963     0C66  085E               	movf	est_maquina@botao,w
  4964     0C67  160A  118A  25FE  120A  158A  	fcall	_est_estado_menu_limpar
  4965                           
  4966                           ;src/estados.c: 131:         break;
  4967     0C6C  2CA0               	goto	i1l288
  4968     0C6D                     i1l5631:
  4969                           
  4970                           ;src/estados.c: 134:             est_estado_menu_conf_tempo_amostra(botao);
  4971     0C6D  085E               	movf	est_maquina@botao,w
  4972     0C6E  120A  158A  2575  120A  158A  	fcall	_est_estado_menu_conf_tempo_amostra
  4973                           
  4974                           ;src/estados.c: 135:         break;
  4975     0C73  2CA0               	goto	i1l288
  4976     0C74                     i1l5633:
  4977                           
  4978                           ;src/estados.c: 138:             est_estado_menu_conf_quant_sensores(botao);
  4979     0C74  085E               	movf	est_maquina@botao,w
  4980     0C75  120A  158A  250A  120A  158A  	fcall	_est_estado_menu_conf_quant_sensores
  4981                           
  4982                           ;src/estados.c: 139:         break;
  4983     0C7A  2CA0               	goto	i1l288
  4984     0C7B                     i1l5637:
  4985     0C7B  0868               	movf	_est_estado_atual,w
  4986     0C7C  00DC               	movwf	??_est_maquina
  4987     0C7D  01DD               	clrf	??_est_maquina+1
  4988                           
  4989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4990                           ; Switch size 1, requested type "simple"
  4991                           ; Number of cases is 1, Range of values is 0 to 0
  4992                           ; switch strategies available:
  4993                           ; Name         Instructions Cycles
  4994                           ; simple_byte            4     3 (average)
  4995                           ; direct_byte           11     8 (fixed)
  4996                           ; jumptable            260     6 (fixed)
  4997                           ;	Chosen strategy is simple_byte
  4998     0C7E  085D               	movf	??_est_maquina+1,w
  4999     0C7F  3A00               	xorlw	0	; case 0
  5000     0C80  1903               	skipnz
  5001     0C81  2C83               	goto	i1l6239
  5002     0C82  2CA0               	goto	i1l288
  5003     0C83                     i1l6239:
  5004                           
  5005                           ; Switch size 1, requested type "simple"
  5006                           ; Number of cases is 9, Range of values is 0 to 8
  5007                           ; switch strategies available:
  5008                           ; Name         Instructions Cycles
  5009                           ; simple_byte           28    15 (average)
  5010                           ; direct_byte           35     8 (fixed)
  5011                           ; jumptable            260     6 (fixed)
  5012                           ;	Chosen strategy is simple_byte
  5013     0C83  085C               	movf	??_est_maquina,w
  5014     0C84  3A00               	xorlw	0	; case 0
  5015     0C85  1903               	skipnz
  5016     0C86  2C3C               	goto	i1l5617
  5017     0C87  3A01               	xorlw	1	; case 1
  5018     0C88  1903               	skipnz
  5019     0C89  2C43               	goto	i1l5619
  5020     0C8A  3A03               	xorlw	3	; case 2
  5021     0C8B  1903               	skipnz
  5022     0C8C  2C4A               	goto	i1l5621
  5023     0C8D  3A01               	xorlw	1	; case 3
  5024     0C8E  1903               	skipnz
  5025     0C8F  2C51               	goto	i1l5623
  5026     0C90  3A07               	xorlw	7	; case 4
  5027     0C91  1903               	skipnz
  5028     0C92  2C58               	goto	i1l5625
  5029     0C93  3A01               	xorlw	1	; case 5
  5030     0C94  1903               	skipnz
  5031     0C95  2C5F               	goto	i1l5627
  5032     0C96  3A03               	xorlw	3	; case 6
  5033     0C97  1903               	skipnz
  5034     0C98  2C66               	goto	i1l5629
  5035     0C99  3A01               	xorlw	1	; case 7
  5036     0C9A  1903               	skipnz
  5037     0C9B  2C6D               	goto	i1l5631
  5038     0C9C  3A0F               	xorlw	15	; case 8
  5039     0C9D  1903               	skipnz
  5040     0C9E  2C74               	goto	i1l5633
  5041     0C9F  2CA0               	goto	i1l288
  5042     0CA0                     i1l288:
  5043     0CA0  0008               	return
  5044     0CA1                     __end_of_est_maquina:
  5045                           
  5046                           	psect	text17
  5047     0A76                     __ptext17:	
  5048 ;; *************** function _est_estado_ver_todos *****************
  5049 ;; Defined at:
  5050 ;;		line 270 in file "src/estados.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  botao           1    wreg     enum E1289
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  botao           1   56[BANK0 ] enum E1289
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         0       1       0       0       0
  5066 ;;      Temps:          2       0       0       0       0
  5067 ;;      Totals:         2       1       0       0       0
  5068 ;;Total ram usage:        3 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 4
  5071 ;; This function calls:
  5072 ;;		_est_executa
  5073 ;; This function is called by:
  5074 ;;		_est_maquina
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078     0A76                     _est_estado_ver_todos:	
  5079                           ;psect for function _est_estado_ver_todos
  5080                           
  5081                           
  5082                           ;incstack = 0
  5083 ;; hardware stack exceeded
  5084                           ; Regs used in _est_estado_ver_todos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5085                           ;est_estado_ver_todos@botao stored from wreg
  5086     0A76  1283               	bcf	3,5	;RP0=0, select bank0
  5087     0A77  1303               	bcf	3,6	;RP1=0, select bank0
  5088     0A78  00D8               	movwf	est_estado_ver_todos@botao
  5089     0A79                     i1l5431:
  5090                           
  5091                           ;src/estados.c: 271:   switch (botao) {
  5092     0A79  2AAE               	goto	i1l5449
  5093     0A7A                     i1l5433:
  5094                           
  5095                           ;src/estados.c: 273:       if (est_ver_todos_index_amostra > 0) {
  5096     0A7A  0867               	movf	_est_ver_todos_index_amostra,w
  5097     0A7B  1903               	btfsc	3,2
  5098     0A7C  2A7E               	goto	u509_21
  5099     0A7D  2A7F               	goto	u509_20
  5100     0A7E                     u509_21:
  5101     0A7E  2AC1               	goto	i1l334
  5102     0A7F                     u509_20:
  5103     0A7F                     i1l5435:
  5104                           
  5105                           ;src/estados.c: 274:         est_ver_todos_index_amostra--;
  5106     0A7F  3001               	movlw	1
  5107     0A80  02E7               	subwf	_est_ver_todos_index_amostra,f
  5108     0A81                     i1l5437:
  5109                           
  5110                           ;src/estados.c: 275:         est_executa(EST_ESTADO_MOSTRA_TODOS);
  5111     0A81  3004               	movlw	4
  5112     0A82  120A  118A  203E  120A  158A  	fcall	_est_executa
  5113     0A87  2AC1               	goto	i1l334
  5114     0A88                     i1l5439:
  5115                           
  5116                           ;src/estados.c: 279:       if (est_ver_todos_index_amostra < adcon_quant_amostras_gravad
      +                          as - 1) {
  5117     0A88  086A               	movf	_adcon_quant_amostras_gravadas,w
  5118     0A89  3EFF               	addlw	255
  5119     0A8A  00FC               	movwf	??_est_estado_ver_todos
  5120     0A8B  30FF               	movlw	255
  5121     0A8C  1803               	skipnc
  5122     0A8D  3000               	movlw	0
  5123     0A8E  00FD               	movwf	??_est_estado_ver_todos+1
  5124     0A8F  087D               	movf	??_est_estado_ver_todos+1,w
  5125     0A90  3A80               	xorlw	128
  5126     0A91  3C80               	sublw	128
  5127     0A92  1D03               	skipz
  5128     0A93  2A96               	goto	u510_25
  5129     0A94  087C               	movf	??_est_estado_ver_todos,w
  5130     0A95  0267               	subwf	_est_ver_todos_index_amostra,w
  5131     0A96                     u510_25:
  5132     0A96  1803               	skipnc
  5133     0A97  2A99               	goto	u510_21
  5134     0A98  2A9A               	goto	u510_20
  5135     0A99                     u510_21:
  5136     0A99  2AC1               	goto	i1l334
  5137     0A9A                     u510_20:
  5138     0A9A                     i1l5441:
  5139                           
  5140                           ;src/estados.c: 280:         est_ver_todos_index_amostra++;
  5141     0A9A  3001               	movlw	1
  5142     0A9B  00FF               	movwf	btemp+1
  5143     0A9C  087F               	movf	btemp+1,w
  5144     0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  5145     0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  5146     0A9F  07E7               	addwf	_est_ver_todos_index_amostra,f
  5147     0AA0                     i1l5443:
  5148                           
  5149                           ;src/estados.c: 281:         est_executa(EST_ESTADO_MOSTRA_TODOS);
  5150     0AA0  3004               	movlw	4
  5151     0AA1  120A  118A  203E  120A  158A  	fcall	_est_executa
  5152     0AA6  2AC1               	goto	i1l334
  5153     0AA7                     i1l5445:
  5154                           
  5155                           ;src/estados.c: 285:       est_executa(EST_ESTADO_MENU_PRINCIPAL);
  5156     0AA7  3001               	movlw	1
  5157     0AA8  120A  118A  203E  120A  158A  	fcall	_est_executa
  5158                           
  5159                           ;src/estados.c: 286:       break;
  5160     0AAD  2AC1               	goto	i1l334
  5161     0AAE                     i1l5449:
  5162     0AAE  0858               	movf	est_estado_ver_todos@botao,w
  5163     0AAF  00FC               	movwf	??_est_estado_ver_todos
  5164     0AB0  01FD               	clrf	??_est_estado_ver_todos+1
  5165                           
  5166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5167                           ; Switch size 1, requested type "simple"
  5168                           ; Number of cases is 1, Range of values is 0 to 0
  5169                           ; switch strategies available:
  5170                           ; Name         Instructions Cycles
  5171                           ; simple_byte            4     3 (average)
  5172                           ; direct_byte           11     8 (fixed)
  5173                           ; jumptable            260     6 (fixed)
  5174                           ;	Chosen strategy is simple_byte
  5175     0AB1  087D               	movf	??_est_estado_ver_todos+1,w
  5176     0AB2  3A00               	xorlw	0	; case 0
  5177     0AB3  1903               	skipnz
  5178     0AB4  2AB6               	goto	i1l6241
  5179     0AB5  2AC1               	goto	i1l334
  5180     0AB6                     i1l6241:
  5181                           
  5182                           ; Switch size 1, requested type "simple"
  5183                           ; Number of cases is 3, Range of values is 2 to 4
  5184                           ; switch strategies available:
  5185                           ; Name         Instructions Cycles
  5186                           ; simple_byte           10     6 (average)
  5187                           ; direct_byte           20    11 (fixed)
  5188                           ; jumptable            263     9 (fixed)
  5189                           ;	Chosen strategy is simple_byte
  5190     0AB6  087C               	movf	??_est_estado_ver_todos,w
  5191     0AB7  3A02               	xorlw	2	; case 2
  5192     0AB8  1903               	skipnz
  5193     0AB9  2AA7               	goto	i1l5445
  5194     0ABA  3A01               	xorlw	1	; case 3
  5195     0ABB  1903               	skipnz
  5196     0ABC  2A7A               	goto	i1l5433
  5197     0ABD  3A07               	xorlw	7	; case 4
  5198     0ABE  1903               	skipnz
  5199     0ABF  2A88               	goto	i1l5439
  5200     0AC0  2AC1               	goto	i1l334
  5201     0AC1                     i1l334:
  5202     0AC1  0008               	return
  5203     0AC2                     __end_of_est_estado_ver_todos:
  5204                           
  5205                           	psect	text18
  5206     160C                     __ptext18:	
  5207 ;; *************** function _est_estado_mostra_max_min *****************
  5208 ;; Defined at:
  5209 ;;		line 296 in file "src/estados.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  botao           1    wreg     enum E1289
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  botao           1   12[COMMON] enum E1289
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         0       0       0       0       0
  5224 ;;      Locals:         1       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0
  5226 ;;      Totals:         1       0       0       0       0
  5227 ;;Total ram usage:        1 bytes
  5228 ;; Hardware stack levels used: 1
  5229 ;; Hardware stack levels required when called: 4
  5230 ;; This function calls:
  5231 ;;		_est_executa
  5232 ;; This function is called by:
  5233 ;;		_est_maquina
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237     160C                     _est_estado_mostra_max_min:	
  5238                           ;psect for function _est_estado_mostra_max_min
  5239                           
  5240                           
  5241                           ;incstack = 0
  5242 ;; hardware stack exceeded
  5243                           ; Regs used in _est_estado_mostra_max_min: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  5244                           ;est_estado_mostra_max_min@botao stored from wreg
  5245     160C  00FC               	movwf	est_estado_mostra_max_min@botao
  5246     160D                     i1l5457:
  5247                           
  5248                           ;src/estados.c: 297:   if (botao == BTN_STOP) {
  5249     160D  3002               	movlw	2
  5250     160E  067C               	xorwf	est_estado_mostra_max_min@botao,w
  5251     160F  1D03               	btfss	3,2
  5252     1610  2E12               	goto	u511_21
  5253     1611  2E13               	goto	u511_20
  5254     1612                     u511_21:
  5255     1612  2E19               	goto	i1l338
  5256     1613                     u511_20:
  5257     1613                     i1l5459:
  5258                           
  5259                           ;src/estados.c: 298:     est_executa(EST_ESTADO_MENU_PRINCIPAL);
  5260     1613  3001               	movlw	1
  5261     1614  120A  118A  203E  160A  118A  	fcall	_est_executa
  5262     1619                     i1l338:
  5263     1619  0008               	return
  5264     161A                     __end_of_est_estado_mostra_max_min:
  5265                           
  5266                           	psect	text19
  5267     07EE                     __ptext19:	
  5268 ;; *************** function _est_estado_monitora *****************
  5269 ;; Defined at:
  5270 ;;		line 247 in file "src/estados.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  botao           1    wreg     enum E1289
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  botao           1   12[COMMON] enum E1289
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5284 ;;      Params:         0       0       0       0       0
  5285 ;;      Locals:         1       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0
  5287 ;;      Totals:         1       0       0       0       0
  5288 ;;Total ram usage:        1 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; Hardware stack levels required when called: 4
  5291 ;; This function calls:
  5292 ;;		_est_executa
  5293 ;; This function is called by:
  5294 ;;		_est_maquina
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298     07EE                     _est_estado_monitora:	
  5299                           ;psect for function _est_estado_monitora
  5300                           
  5301                           
  5302                           ;incstack = 0
  5303 ;; hardware stack exceeded
  5304                           ; Regs used in _est_estado_monitora: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5305                           ;est_estado_monitora@botao stored from wreg
  5306     07EE  00FC               	movwf	est_estado_monitora@botao
  5307     07EF                     i1l5425:
  5308                           
  5309                           ;src/estados.c: 248:   if (botao == BTN_STOP) {
  5310     07EF  3002               	movlw	2
  5311     07F0  067C               	xorwf	est_estado_monitora@botao,w
  5312     07F1  1D03               	btfss	3,2
  5313     07F2  2FF4               	goto	u508_21
  5314     07F3  2FF5               	goto	u508_20
  5315     07F4                     u508_21:
  5316     07F4  2FFC               	goto	i1l319
  5317     07F5                     u508_20:
  5318     07F5                     i1l5427:
  5319                           
  5320                           ;src/estados.c: 249:     INTCONbits.T0IE = 0;
  5321     07F5  128B               	bcf	11,5	;volatile
  5322     07F6                     i1l5429:
  5323                           
  5324                           ;src/estados.c: 250:     est_executa(EST_ESTADO_MENU_PRINCIPAL);
  5325     07F6  3001               	movlw	1
  5326     07F7  120A  118A  203E  120A  118A  	fcall	_est_executa
  5327     07FC                     i1l319:
  5328     07FC  0008               	return
  5329     07FD                     __end_of_est_estado_monitora:
  5330                           
  5331                           	psect	text20
  5332     0742                     __ptext20:	
  5333 ;; *************** function _est_estado_menu_principal *****************
  5334 ;; Defined at:
  5335 ;;		line 170 in file "src/estados.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  botao           1    wreg     enum E1289
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  botao           1   58[BANK0 ] enum E1289
  5340 ;;  index           1   59[BANK0 ] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5350 ;;      Params:         0       0       0       0       0
  5351 ;;      Locals:         0       2       0       0       0
  5352 ;;      Temps:          0       2       0       0       0
  5353 ;;      Totals:         0       4       0       0       0
  5354 ;;Total ram usage:        4 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 5
  5357 ;; This function calls:
  5358 ;;		_adcon_amostra_print
  5359 ;;		_adcon_amostra_print_grava
  5360 ;;		_est_executa
  5361 ;;		_menu_confirma_index
  5362 ;;		_menu_dec_index
  5363 ;;		_menu_get_index_nav
  5364 ;;		_menu_inc_index
  5365 ;; This function is called by:
  5366 ;;		_est_maquina
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370     0742                     _est_estado_menu_principal:	
  5371                           ;psect for function _est_estado_menu_principal
  5372                           
  5373                           
  5374                           ;incstack = 0
  5375 ;; hardware stack exceeded
  5376                           ; Regs used in _est_estado_menu_principal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  5377                           ;est_estado_menu_principal@botao stored from wreg
  5378     0742  1283               	bcf	3,5	;RP0=0, select bank0
  5379     0743  1303               	bcf	3,6	;RP1=0, select bank0
  5380     0744  00DA               	movwf	est_estado_menu_principal@botao
  5381     0745                     i1l5377:
  5382                           
  5383                           ;src/estados.c: 171:   uint8_t index;;src/estados.c: 173:   switch (botao) {
  5384     0745  2FDA               	goto	i1l5411
  5385     0746                     i1l5379:
  5386                           
  5387                           ;src/estados.c: 175:       if (menu_dec_index(&menu_principal) >= 0) {
  5388     0746  30D9               	movlw	(low (_menu_principal| 0))& (0+255)
  5389     0747  160A  118A  262D  120A  118A  	fcall	_menu_dec_index
  5390     074C  1283               	bcf	3,5	;RP0=0, select bank0
  5391     074D  1303               	bcf	3,6	;RP1=0, select bank0
  5392     074E  00D8               	movwf	??_est_estado_menu_principal
  5393     074F  1BD8               	btfsc	??_est_estado_menu_principal,7
  5394     0750  2F52               	goto	u506_21
  5395     0751  2F53               	goto	u506_20
  5396     0752                     u506_21:
  5397     0752  2FED               	goto	i1l311
  5398     0753                     u506_20:
  5399     0753                     i1l5381:
  5400                           
  5401                           ;src/estados.c: 176:          est_executa(EST_ESTADO_MENU_PRINCIPAL);
  5402     0753  3001               	movlw	1
  5403     0754  120A  118A  203E  120A  118A  	fcall	_est_executa
  5404     0759  2FED               	goto	i1l311
  5405     075A                     i1l5383:
  5406                           
  5407                           ;src/estados.c: 181:       if ( menu_inc_index(&menu_principal) >= 0 ) {
  5408     075A  30D9               	movlw	(low (_menu_principal| 0))& (0+255)
  5409     075B  120A  158A  2003  120A  118A  	fcall	_menu_inc_index
  5410     0760  1283               	bcf	3,5	;RP0=0, select bank0
  5411     0761  1303               	bcf	3,6	;RP1=0, select bank0
  5412     0762  00D8               	movwf	??_est_estado_menu_principal
  5413     0763  1BD8               	btfsc	??_est_estado_menu_principal,7
  5414     0764  2F66               	goto	u507_21
  5415     0765  2F67               	goto	u507_20
  5416     0766                     u507_21:
  5417     0766  2FED               	goto	i1l311
  5418     0767                     u507_20:
  5419     0767                     i1l5385:
  5420                           
  5421                           ;src/estados.c: 182:         est_executa(EST_ESTADO_MENU_PRINCIPAL);
  5422     0767  3001               	movlw	1
  5423     0768  120A  118A  203E  120A  118A  	fcall	_est_executa
  5424     076D  2FED               	goto	i1l311
  5425     076E                     i1l5387:
  5426                           
  5427                           ;src/estados.c: 187:       index = menu_get_index_nav(&menu_principal);
  5428     076E  30D9               	movlw	(low (_menu_principal| 0))& (0+255)
  5429     076F  160A  118A  25C6  120A  118A  	fcall	_menu_get_index_nav
  5430     0774  1283               	bcf	3,5	;RP0=0, select bank0
  5431     0775  1303               	bcf	3,6	;RP1=0, select bank0
  5432     0776  00DB               	movwf	est_estado_menu_principal@index
  5433     0777                     i1l5389:
  5434                           
  5435                           ;src/estados.c: 188:       menu_confirma_index(&menu_principal);
  5436     0777  30D9               	movlw	(low (_menu_principal| 0))& (0+255)
  5437     0778  160A  118A  25DB  120A  118A  	fcall	_menu_confirma_index
  5438                           
  5439                           ;src/estados.c: 189:       switch (index) {
  5440     077D  2FB9               	goto	i1l5407
  5441     077E                     i1l5391:
  5442                           
  5443                           ;src/estados.c: 191:           adcon_amostra_print();
  5444     077E  160A  118A  27A5  120A  118A  	fcall	_adcon_amostra_print
  5445                           
  5446                           ;src/estados.c: 192:           est_executa(EST_ESTADO_MONITORA);
  5447     0783  3002               	movlw	2
  5448     0784  120A  118A  203E  120A  118A  	fcall	_est_executa
  5449                           
  5450                           ;src/estados.c: 193:           break;
  5451     0789  2FED               	goto	i1l311
  5452     078A                     i1l5393:
  5453                           
  5454                           ;src/estados.c: 196:           adcon_amostra_print_grava();
  5455     078A  120A  158A  275A  120A  118A  	fcall	_adcon_amostra_print_grava
  5456                           
  5457                           ;src/estados.c: 197:           est_executa(EST_ESTADO_MONITORA_GRAVA);
  5458     078F  3003               	movlw	3
  5459     0790  120A  118A  203E  120A  118A  	fcall	_est_executa
  5460                           
  5461                           ;src/estados.c: 198:           break;
  5462     0795  2FED               	goto	i1l311
  5463     0796                     i1l5395:
  5464                           
  5465                           ;src/estados.c: 201:           est_executa(EST_ESTADO_MOSTRA_TODOS);
  5466     0796  3004               	movlw	4
  5467     0797  120A  118A  203E  120A  118A  	fcall	_est_executa
  5468                           
  5469                           ;src/estados.c: 202:           break;
  5470     079C  2FED               	goto	i1l311
  5471     079D                     i1l5397:
  5472                           
  5473                           ;src/estados.c: 205:           est_executa(EST_ESTADO_MOSTRA_MAX_MIN);
  5474     079D  3005               	movlw	5
  5475     079E  120A  118A  203E  120A  118A  	fcall	_est_executa
  5476                           
  5477                           ;src/estados.c: 206:           break;
  5478     07A3  2FED               	goto	i1l311
  5479     07A4                     i1l5399:
  5480                           
  5481                           ;src/estados.c: 209:           est_executa(EST_ESTADO_LIMPAR);
  5482     07A4  3006               	movlw	6
  5483     07A5  120A  118A  203E  120A  118A  	fcall	_est_executa
  5484                           
  5485                           ;src/estados.c: 210:           break;
  5486     07AA  2FED               	goto	i1l311
  5487     07AB                     i1l5401:
  5488                           
  5489                           ;src/estados.c: 213:           est_executa(EST_ESTADO_MENU_CONF_TEMPO_AMOSTRA);
  5490     07AB  3007               	movlw	7
  5491     07AC  120A  118A  203E  120A  118A  	fcall	_est_executa
  5492                           
  5493                           ;src/estados.c: 214:           break;
  5494     07B1  2FED               	goto	i1l311
  5495     07B2                     i1l5403:
  5496                           
  5497                           ;src/estados.c: 217:           est_executa(EST_ESTADO_MENU_CONF_QUANT_SENSORES);
  5498     07B2  3008               	movlw	8
  5499     07B3  120A  118A  203E  120A  118A  	fcall	_est_executa
  5500                           
  5501                           ;src/estados.c: 218:           break;
  5502     07B8  2FED               	goto	i1l311
  5503     07B9                     i1l5407:
  5504     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  5505     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  5506     07BB  085B               	movf	est_estado_menu_principal@index,w
  5507     07BC  00D8               	movwf	??_est_estado_menu_principal
  5508     07BD  01D9               	clrf	??_est_estado_menu_principal+1
  5509                           
  5510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5511                           ; Switch size 1, requested type "simple"
  5512                           ; Number of cases is 1, Range of values is 0 to 0
  5513                           ; switch strategies available:
  5514                           ; Name         Instructions Cycles
  5515                           ; simple_byte            4     3 (average)
  5516                           ; direct_byte           11     8 (fixed)
  5517                           ; jumptable            260     6 (fixed)
  5518                           ;	Chosen strategy is simple_byte
  5519     07BE  0859               	movf	??_est_estado_menu_principal+1,w
  5520     07BF  3A00               	xorlw	0	; case 0
  5521     07C0  1903               	skipnz
  5522     07C1  2FC3               	goto	i1l6243
  5523     07C2  2FED               	goto	i1l311
  5524     07C3                     i1l6243:
  5525                           
  5526                           ; Switch size 1, requested type "simple"
  5527                           ; Number of cases is 7, Range of values is 0 to 6
  5528                           ; switch strategies available:
  5529                           ; Name         Instructions Cycles
  5530                           ; simple_byte           22    12 (average)
  5531                           ; direct_byte           29     8 (fixed)
  5532                           ; jumptable            260     6 (fixed)
  5533                           ;	Chosen strategy is simple_byte
  5534     07C3  0858               	movf	??_est_estado_menu_principal,w
  5535     07C4  3A00               	xorlw	0	; case 0
  5536     07C5  1903               	skipnz
  5537     07C6  2F7E               	goto	i1l5391
  5538     07C7  3A01               	xorlw	1	; case 1
  5539     07C8  1903               	skipnz
  5540     07C9  2F8A               	goto	i1l5393
  5541     07CA  3A03               	xorlw	3	; case 2
  5542     07CB  1903               	skipnz
  5543     07CC  2F96               	goto	i1l5395
  5544     07CD  3A01               	xorlw	1	; case 3
  5545     07CE  1903               	skipnz
  5546     07CF  2F9D               	goto	i1l5397
  5547     07D0  3A07               	xorlw	7	; case 4
  5548     07D1  1903               	skipnz
  5549     07D2  2FA4               	goto	i1l5399
  5550     07D3  3A01               	xorlw	1	; case 5
  5551     07D4  1903               	skipnz
  5552     07D5  2FAB               	goto	i1l5401
  5553     07D6  3A03               	xorlw	3	; case 6
  5554     07D7  1903               	skipnz
  5555     07D8  2FB2               	goto	i1l5403
  5556     07D9  2FED               	goto	i1l311
  5557     07DA                     i1l5411:
  5558     07DA  085A               	movf	est_estado_menu_principal@botao,w
  5559     07DB  00D8               	movwf	??_est_estado_menu_principal
  5560     07DC  01D9               	clrf	??_est_estado_menu_principal+1
  5561                           
  5562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5563                           ; Switch size 1, requested type "simple"
  5564                           ; Number of cases is 1, Range of values is 0 to 0
  5565                           ; switch strategies available:
  5566                           ; Name         Instructions Cycles
  5567                           ; simple_byte            4     3 (average)
  5568                           ; direct_byte           11     8 (fixed)
  5569                           ; jumptable            260     6 (fixed)
  5570                           ;	Chosen strategy is simple_byte
  5571     07DD  0859               	movf	??_est_estado_menu_principal+1,w
  5572     07DE  3A00               	xorlw	0	; case 0
  5573     07DF  1903               	skipnz
  5574     07E0  2FE2               	goto	i1l6245
  5575     07E1  2FED               	goto	i1l311
  5576     07E2                     i1l6245:
  5577                           
  5578                           ; Switch size 1, requested type "simple"
  5579                           ; Number of cases is 3, Range of values is 1 to 4
  5580                           ; switch strategies available:
  5581                           ; Name         Instructions Cycles
  5582                           ; simple_byte           10     6 (average)
  5583                           ; direct_byte           23    11 (fixed)
  5584                           ; jumptable            263     9 (fixed)
  5585                           ;	Chosen strategy is simple_byte
  5586     07E2  0858               	movf	??_est_estado_menu_principal,w
  5587     07E3  3A01               	xorlw	1	; case 1
  5588     07E4  1903               	skipnz
  5589     07E5  2F6E               	goto	i1l5387
  5590     07E6  3A02               	xorlw	2	; case 3
  5591     07E7  1903               	skipnz
  5592     07E8  2F46               	goto	i1l5379
  5593     07E9  3A07               	xorlw	7	; case 4
  5594     07EA  1903               	skipnz
  5595     07EB  2F5A               	goto	i1l5383
  5596     07EC  2FED               	goto	i1l311
  5597     07ED                     i1l311:
  5598     07ED  0008               	return
  5599     07EE                     __end_of_est_estado_menu_principal:
  5600                           
  5601                           	psect	text21
  5602     0F5A                     __ptext21:	
  5603 ;; *************** function _adcon_amostra_print_grava *****************
  5604 ;; Defined at:
  5605 ;;		line 157 in file "src/adcon.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  i               1   44[BANK0 ] unsigned char 
  5610 ;;  t_int           2   45[BANK0 ] unsigned int 
  5611 ;;  menor           2   41[BANK0 ] unsigned int 
  5612 ;;  maior           2   39[BANK0 ] unsigned int 
  5613 ;;  qtd_leituras    1   43[BANK0 ] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         0       0       0       0       0
  5624 ;;      Locals:         0       8       0       0       0
  5625 ;;      Temps:          1       0       0       0       0
  5626 ;;      Totals:         1       8       0       0       0
  5627 ;;Total ram usage:        9 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 4
  5630 ;; This function calls:
  5631 ;;		___bmul
  5632 ;;		_adcon_le_sensor
  5633 ;;		_adcon_print
  5634 ;;		_lcd_clear
  5635 ;;		i1_eeprom_grava_word
  5636 ;;		i1_eeprom_write
  5637 ;;		i1_lcd_puts
  5638 ;; This function is called by:
  5639 ;;		_est_estado_menu_principal
  5640 ;;		_handler
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644     0F5A                     _adcon_amostra_print_grava:	
  5645                           ;psect for function _adcon_amostra_print_grava
  5646                           
  5647     0F5A                     i1l5155:	
  5648                           ;incstack = 0
  5649 ;; hardware stack exceeded
  5650                           ; Regs used in _adcon_amostra_print_grava: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  5651                           
  5652                           
  5653                           ;src/adcon.c: 158:   uint16_t t_int;;src/adcon.c: 159:   uint16_t maior, menor;;src/adco
      +                          n.c: 160:   uint8_t qtd_leituras;;src/adcon.c: 162:    qtd_leituras = adcon_quant_amostr
      +                          as_gravadas * cfg_quant_sensores_atual;
  5654     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5655     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5656     0F5C  086B               	movf	_cfg_quant_sensores_atual,w
  5657     0F5D  00F0               	movwf	___bmul@multiplicand
  5658     0F5E  086A               	movf	_adcon_quant_amostras_gravadas,w
  5659     0F5F  160A  118A  2640  120A  158A  	fcall	___bmul
  5660     0F64  1283               	bcf	3,5	;RP0=0, select bank0
  5661     0F65  1303               	bcf	3,6	;RP1=0, select bank0
  5662     0F66  00CB               	movwf	adcon_amostra_print_grava@qtd_leituras
  5663     0F67                     i1l5157:
  5664                           
  5665                           ;src/adcon.c: 167:   lcd_clear();
  5666     0F67  160A  118A  269B  120A  158A  	fcall	_lcd_clear
  5667     0F6C                     i1l5159:
  5668                           
  5669                           ;src/adcon.c: 168:   if (qtd_leituras < 120) {
  5670     0F6C  3078               	movlw	120
  5671     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5672     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5673     0F6F  024B               	subwf	adcon_amostra_print_grava@qtd_leituras,w
  5674     0F70  1803               	skipnc
  5675     0F71  2F73               	goto	u484_21
  5676     0F72  2F74               	goto	u484_20
  5677     0F73                     u484_21:
  5678     0F73  2FF5               	goto	i1l119
  5679     0F74                     u484_20:
  5680     0F74                     i1l5161:
  5681                           
  5682                           ;src/adcon.c: 169:     for (uint8_t i = 0; i < cfg_quant_sensores_atual; i++) {
  5683     0F74  01CC               	clrf	adcon_amostra_print_grava@i
  5684     0F75  2FE2               	goto	i1l5185
  5685     0F76                     i1l5163:
  5686                           
  5687                           ;src/adcon.c: 170:       t_int = adcon_le_sensor(i);
  5688     0F76  084C               	movf	adcon_amostra_print_grava@i,w
  5689     0F77  120A  158A  2658  120A  158A  	fcall	_adcon_le_sensor
  5690     0F7C  0871               	movf	?_adcon_le_sensor+1,w
  5691     0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5692     0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5693     0F7F  00CE               	movwf	adcon_amostra_print_grava@t_int+1
  5694     0F80  0870               	movf	?_adcon_le_sensor,w
  5695     0F81  00CD               	movwf	adcon_amostra_print_grava@t_int
  5696     0F82                     i1l5165:
  5697                           
  5698                           ;src/adcon.c: 171:       if (t_int < menor) {
  5699     0F82  084A               	movf	adcon_amostra_print_grava@menor+1,w
  5700     0F83  024E               	subwf	adcon_amostra_print_grava@t_int+1,w
  5701     0F84  1D03               	skipz
  5702     0F85  2F88               	goto	u485_25
  5703     0F86  0849               	movf	adcon_amostra_print_grava@menor,w
  5704     0F87  024D               	subwf	adcon_amostra_print_grava@t_int,w
  5705     0F88                     u485_25:
  5706     0F88  1803               	skipnc
  5707     0F89  2F8B               	goto	u485_21
  5708     0F8A  2F8C               	goto	u485_20
  5709     0F8B                     u485_21:
  5710     0F8B  2F9A               	goto	i1l5171
  5711     0F8C                     u485_20:
  5712     0F8C                     i1l5167:
  5713                           
  5714                           ;src/adcon.c: 172:         adcon_leitura_min = t_int;
  5715     0F8C  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5716     0F8D  00ED               	movwf	_adcon_leitura_min+1
  5717     0F8E  084D               	movf	adcon_amostra_print_grava@t_int,w
  5718     0F8F  00EC               	movwf	_adcon_leitura_min
  5719     0F90                     i1l5169:
  5720                           
  5721                           ;src/adcon.c: 173:         eeprom_grava_word(0x04, t_int);
  5722     0F90  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5723     0F91  00F3               	movwf	i1eeprom_grava_word@dado+1
  5724     0F92  084D               	movf	adcon_amostra_print_grava@t_int,w
  5725     0F93  00F2               	movwf	i1eeprom_grava_word@dado
  5726     0F94  3004               	movlw	4
  5727     0F95  160A  118A  261A  120A  158A  	fcall	i1_eeprom_grava_word
  5728     0F9A                     i1l5171:
  5729                           
  5730                           ;src/adcon.c: 175:       if (t_int > maior) {
  5731     0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  5732     0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  5733     0F9C  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5734     0F9D  0248               	subwf	adcon_amostra_print_grava@maior+1,w
  5735     0F9E  1D03               	skipz
  5736     0F9F  2FA2               	goto	u486_25
  5737     0FA0  084D               	movf	adcon_amostra_print_grava@t_int,w
  5738     0FA1  0247               	subwf	adcon_amostra_print_grava@maior,w
  5739     0FA2                     u486_25:
  5740     0FA2  1803               	skipnc
  5741     0FA3  2FA5               	goto	u486_21
  5742     0FA4  2FA6               	goto	u486_20
  5743     0FA5                     u486_21:
  5744     0FA5  2FBC               	goto	i1l5177
  5745     0FA6                     u486_20:
  5746     0FA6                     i1l5173:
  5747                           
  5748                           ;src/adcon.c: 176:         adcon_leitura_max = t_int;
  5749     0FA6  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5750     0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  5751     0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  5752     0FA9  00CD               	movwf	(_adcon_leitura_max+1)^(0+128)
  5753     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  5754     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  5755     0FAC  084D               	movf	adcon_amostra_print_grava@t_int,w
  5756     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  5757     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  5758     0FAF  00CC               	movwf	_adcon_leitura_max^(0+128)
  5759     0FB0                     i1l5175:
  5760                           
  5761                           ;src/adcon.c: 177:         eeprom_grava_word(0x06, t_int);
  5762     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  5763     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  5764     0FB2  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5765     0FB3  00F3               	movwf	i1eeprom_grava_word@dado+1
  5766     0FB4  084D               	movf	adcon_amostra_print_grava@t_int,w
  5767     0FB5  00F2               	movwf	i1eeprom_grava_word@dado
  5768     0FB6  3006               	movlw	6
  5769     0FB7  160A  118A  261A  120A  158A  	fcall	i1_eeprom_grava_word
  5770     0FBC                     i1l5177:
  5771                           
  5772                           ;src/adcon.c: 179:       eeprom_grava_word(0x10 + (qtd_leituras * 2), t_int);
  5773     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  5774     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  5775     0FBE  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5776     0FBF  00F3               	movwf	i1eeprom_grava_word@dado+1
  5777     0FC0  084D               	movf	adcon_amostra_print_grava@t_int,w
  5778     0FC1  00F2               	movwf	i1eeprom_grava_word@dado
  5779     0FC2  084B               	movf	adcon_amostra_print_grava@qtd_leituras,w
  5780     0FC3  00FD               	movwf	??_adcon_amostra_print_grava
  5781     0FC4  077D               	addwf	??_adcon_amostra_print_grava,w
  5782     0FC5  3E10               	addlw	16
  5783     0FC6  160A  118A  261A  120A  158A  	fcall	i1_eeprom_grava_word
  5784     0FCB                     i1l5179:
  5785                           
  5786                           ;src/adcon.c: 180:       qtd_leituras++;
  5787     0FCB  3001               	movlw	1
  5788     0FCC  00FF               	movwf	btemp+1
  5789     0FCD  087F               	movf	btemp+1,w
  5790     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5791     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5792     0FD0  07CB               	addwf	adcon_amostra_print_grava@qtd_leituras,f
  5793     0FD1                     i1l5181:
  5794                           
  5795                           ;src/adcon.c: 181:       adcon_print(t_int, i);
  5796     0FD1  084E               	movf	adcon_amostra_print_grava@t_int+1,w
  5797     0FD2  00B4               	movwf	adcon_print@valor_sensor+1
  5798     0FD3  084D               	movf	adcon_amostra_print_grava@t_int,w
  5799     0FD4  00B3               	movwf	adcon_print@valor_sensor
  5800     0FD5  084C               	movf	adcon_amostra_print_grava@i,w
  5801     0FD6  00B5               	movwf	adcon_print@num_sensor
  5802     0FD7  120A  158A  231B  120A  158A  	fcall	_adcon_print
  5803     0FDC                     i1l5183:
  5804                           
  5805                           ;src/adcon.c: 182:     }
  5806     0FDC  3001               	movlw	1
  5807     0FDD  00FF               	movwf	btemp+1
  5808     0FDE  087F               	movf	btemp+1,w
  5809     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  5810     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  5811     0FE1  07CC               	addwf	adcon_amostra_print_grava@i,f
  5812     0FE2                     i1l5185:
  5813     0FE2  086B               	movf	_cfg_quant_sensores_atual,w
  5814     0FE3  024C               	subwf	adcon_amostra_print_grava@i,w
  5815     0FE4  1C03               	skipc
  5816     0FE5  2FE7               	goto	u487_21
  5817     0FE6  2FE8               	goto	u487_20
  5818     0FE7                     u487_21:
  5819     0FE7  2F76               	goto	i1l5163
  5820     0FE8                     u487_20:
  5821     0FE8                     i1l5187:
  5822                           
  5823                           ;src/adcon.c: 183:     adcon_quant_amostras_gravadas++;
  5824     0FE8  3001               	movlw	1
  5825     0FE9  00FF               	movwf	btemp+1
  5826     0FEA  087F               	movf	btemp+1,w
  5827     0FEB  07EA               	addwf	_adcon_quant_amostras_gravadas,f
  5828     0FEC                     i1l5189:
  5829                           
  5830                           ;src/adcon.c: 184:     eeprom_write(0x08, adcon_quant_amostras_gravadas);
  5831     0FEC  086A               	movf	_adcon_quant_amostras_gravadas,w
  5832     0FED  00F0               	movwf	i1eeprom_write@value
  5833     0FEE  3008               	movlw	8
  5834     0FEF  160A  118A  2778  120A  158A  	fcall	i1_eeprom_write
  5835                           
  5836                           ;src/adcon.c: 185:   }
  5837     0FF4  2FFF               	goto	i1l126
  5838     0FF5                     i1l119:	
  5839                           ;src/adcon.c: 186:   else {
  5840                           
  5841                           
  5842                           ;src/adcon.c: 188:     INTCONbits.T0IE = 0;
  5843     0FF5  128B               	bcf	11,5	;volatile
  5844     0FF6                     i1l5191:
  5845                           
  5846                           ;src/adcon.c: 189:     lcd_puts("Memoria Cheia");
  5847     0FF6  3000               	movlw	low (STR_1| (0+32768))
  5848     0FF7  00F2               	movwf	i1lcd_puts@str
  5849     0FF8  3084               	movlw	high (STR_1| (0+32768))
  5850     0FF9  00F3               	movwf	i1lcd_puts@str+1
  5851     0FFA  120A  158A  222B  120A  158A  	fcall	i1_lcd_puts
  5852     0FFF                     i1l126:
  5853     0FFF  0008               	return
  5854     1000                     __end_of_adcon_amostra_print_grava:
  5855                           
  5856                           	psect	text22
  5857     17A5                     __ptext22:	
  5858 ;; *************** function _adcon_amostra_print *****************
  5859 ;; Defined at:
  5860 ;;		line 135 in file "src/adcon.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  x               2   39[BANK0 ] unsigned int 
  5865 ;;  i               1   41[BANK0 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       0       0       0       0
  5876 ;;      Locals:         0       3       0       0       0
  5877 ;;      Temps:          0       0       0       0       0
  5878 ;;      Totals:         0       3       0       0       0
  5879 ;;Total ram usage:        3 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; Hardware stack levels required when called: 4
  5882 ;; This function calls:
  5883 ;;		_adcon_le_sensor
  5884 ;;		_adcon_print
  5885 ;;		_lcd_clear
  5886 ;; This function is called by:
  5887 ;;		_est_estado_menu_principal
  5888 ;;		_handler
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892     17A5                     _adcon_amostra_print:	
  5893                           ;psect for function _adcon_amostra_print
  5894                           
  5895     17A5                     i1l5145:	
  5896                           ;incstack = 0
  5897 ;; hardware stack exceeded
  5898                           ; Regs used in _adcon_amostra_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5899                           
  5900                           
  5901                           ;src/adcon.c: 136:   lcd_clear();
  5902     17A5  160A  118A  269B  160A  118A  	fcall	_lcd_clear
  5903     17AA                     i1l5147:
  5904                           
  5905                           ;src/adcon.c: 138:   for (uint8_t i = 0; i < cfg_quant_sensores_atual; i++) {
  5906     17AA  1283               	bcf	3,5	;RP0=0, select bank0
  5907     17AB  1303               	bcf	3,6	;RP1=0, select bank0
  5908     17AC  01C9               	clrf	adcon_amostra_print@i
  5909     17AD  2FCB               	goto	i1l5153
  5910     17AE                     i1l5149:
  5911                           
  5912                           ;src/adcon.c: 139:     uint16_t x = adcon_le_sensor(i);
  5913     17AE  0849               	movf	adcon_amostra_print@i,w
  5914     17AF  120A  158A  2658  160A  118A  	fcall	_adcon_le_sensor
  5915     17B4  0871               	movf	?_adcon_le_sensor+1,w
  5916     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  5917     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  5918     17B7  00C8               	movwf	adcon_amostra_print@x+1
  5919     17B8  0870               	movf	?_adcon_le_sensor,w
  5920     17B9  00C7               	movwf	adcon_amostra_print@x
  5921                           
  5922                           ;src/adcon.c: 141:       adcon_print(x, i);
  5923     17BA  0848               	movf	adcon_amostra_print@x+1,w
  5924     17BB  00B4               	movwf	adcon_print@valor_sensor+1
  5925     17BC  0847               	movf	adcon_amostra_print@x,w
  5926     17BD  00B3               	movwf	adcon_print@valor_sensor
  5927     17BE  0849               	movf	adcon_amostra_print@i,w
  5928     17BF  00B5               	movwf	adcon_print@num_sensor
  5929     17C0  120A  158A  231B  160A  118A  	fcall	_adcon_print
  5930     17C5                     i1l5151:
  5931                           
  5932                           ;src/adcon.c: 146:   }
  5933     17C5  3001               	movlw	1
  5934     17C6  00FF               	movwf	btemp+1
  5935     17C7  087F               	movf	btemp+1,w
  5936     17C8  1283               	bcf	3,5	;RP0=0, select bank0
  5937     17C9  1303               	bcf	3,6	;RP1=0, select bank0
  5938     17CA  07C9               	addwf	adcon_amostra_print@i,f
  5939     17CB                     i1l5153:
  5940     17CB  086B               	movf	_cfg_quant_sensores_atual,w
  5941     17CC  0249               	subwf	adcon_amostra_print@i,w
  5942     17CD  1C03               	skipc
  5943     17CE  2FD0               	goto	u483_21
  5944     17CF  2FD1               	goto	u483_20
  5945     17D0                     u483_21:
  5946     17D0  2FAE               	goto	i1l5149
  5947     17D1                     u483_20:
  5948     17D1                     i1l116:
  5949     17D1  0008               	return
  5950     17D2                     __end_of_adcon_amostra_print:
  5951                           
  5952                           	psect	text23
  5953     0B1B                     __ptext23:	
  5954 ;; *************** function _adcon_print *****************
  5955 ;; Defined at:
  5956 ;;		line 202 in file "src/adcon.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  valor_sensor    2   19[BANK0 ] unsigned int 
  5959 ;;  num_sensor      1   21[BANK0 ] unsigned char 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  temp_str        9   26[BANK0 ] unsigned char [9]
  5962 ;;  temp_div        4   35[BANK0 ] struct .
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5972 ;;      Params:         0       3       0       0       0
  5973 ;;      Locals:         0      13       0       0       0
  5974 ;;      Temps:          0       4       0       0       0
  5975 ;;      Totals:         0      20       0       0       0
  5976 ;;Total ram usage:       20 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 3
  5979 ;; This function calls:
  5980 ;;		_div
  5981 ;;		_lcd_goto_sensor
  5982 ;;		_sprintf
  5983 ;;		i1_lcd_puts
  5984 ;; This function is called by:
  5985 ;;		_adcon_amostra_print
  5986 ;;		_adcon_amostra_print_grava
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990     0B1B                     _adcon_print:	
  5991                           ;psect for function _adcon_print
  5992                           
  5993     0B1B                     i1l5103:	
  5994                           ;incstack = 0
  5995 ;; hardware stack exceeded
  5996                           ; Regs used in _adcon_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5997                           
  5998                           
  5999                           ;src/adcon.c: 205:   char temp_str[9] = {0};
  6000     0B1B  303A               	movlw	adcon_print@temp_str& (0+255)
  6001     0B1C  0084               	movwf	4
  6002     0B1D  30C1               	movlw	low adcon_print@F1457
  6003     0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  6004     0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  6005     0B20  00B6               	movwf	??_adcon_print
  6006     0B21  0804               	movf	4,w
  6007     0B22  00B7               	movwf	??_adcon_print+1
  6008     0B23  3009               	movlw	9
  6009     0B24  00B8               	movwf	??_adcon_print+2
  6010     0B25                     u480_20:
  6011     0B25  0836               	movf	??_adcon_print,w
  6012     0B26  0084               	movwf	4
  6013     0B27  1383               	bcf	3,7	;select IRP bank1
  6014     0B28  0800               	movf	0,w
  6015     0B29  00B9               	movwf	??_adcon_print+3
  6016     0B2A  0AB6               	incf	??_adcon_print,f
  6017     0B2B  0837               	movf	??_adcon_print+1,w
  6018     0B2C  0084               	movwf	4
  6019     0B2D  0839               	movf	??_adcon_print+3,w
  6020     0B2E  0080               	movwf	0
  6021     0B2F  0AB7               	incf	??_adcon_print+1,f
  6022     0B30  0BB8               	decfsz	??_adcon_print+2,f
  6023     0B31  2B25               	goto	u480_20
  6024     0B32                     i1l5105:
  6025                           
  6026                           ;src/adcon.c: 207:     div_t temp_div;;src/adcon.c: 208:     temp_div = div((int16_t)val
      +                          or_sensor, 10);
  6027     0B32  0834               	movf	adcon_print@valor_sensor+1,w
  6028     0B33  00F9               	movwf	div@number+1
  6029     0B34  0833               	movf	adcon_print@valor_sensor,w
  6030     0B35  00F8               	movwf	div@number
  6031     0B36  300A               	movlw	10
  6032     0B37  00FA               	movwf	div@denom
  6033     0B38  3000               	movlw	0
  6034     0B39  00FB               	movwf	div@denom+1
  6035     0B3A  120A  158A  2029  120A  158A  	fcall	_div
  6036     0B3F  087B               	movf	?_div+3,w
  6037     0B40  1283               	bcf	3,5	;RP0=0, select bank0
  6038     0B41  1303               	bcf	3,6	;RP1=0, select bank0
  6039     0B42  00C6               	movwf	adcon_print@temp_div+3
  6040     0B43  087A               	movf	?_div+2,w
  6041     0B44  00C5               	movwf	adcon_print@temp_div+2
  6042     0B45  0879               	movf	?_div+1,w
  6043     0B46  00C4               	movwf	adcon_print@temp_div+1
  6044     0B47  0878               	movf	?_div,w
  6045     0B48  00C3               	movwf	adcon_print@temp_div
  6046     0B49                     i1l5107:
  6047                           
  6048                           ;src/adcon.c: 212:     sprintf(temp_str, "%d=%d.%d", num_sensor+1, temp_div.quot, temp_d
      +                          iv.rem);
  6049     0B49  30B3               	movlw	low (STR_2| (0+32768))
  6050     0B4A  00A0               	movwf	sprintf@f
  6051     0B4B  3084               	movlw	high (STR_2| (0+32768))
  6052     0B4C  00A1               	movwf	sprintf@f+1
  6053     0B4D  0835               	movf	adcon_print@num_sensor,w
  6054     0B4E  3E01               	addlw	1
  6055     0B4F  00A2               	movwf	?_sprintf+2
  6056     0B50  3000               	movlw	0
  6057     0B51  1803               	skipnc
  6058     0B52  3001               	movlw	1
  6059     0B53  00A3               	movwf	?_sprintf+3
  6060     0B54  0846               	movf	adcon_print@temp_div+3,w
  6061     0B55  00A5               	movwf	?_sprintf+5
  6062     0B56  0845               	movf	adcon_print@temp_div+2,w
  6063     0B57  00A4               	movwf	?_sprintf+4
  6064     0B58  0844               	movf	adcon_print@temp_div+1,w
  6065     0B59  00A7               	movwf	?_sprintf+7
  6066     0B5A  0843               	movf	adcon_print@temp_div,w
  6067     0B5B  00A6               	movwf	?_sprintf+6
  6068     0B5C  303A               	movlw	(low (adcon_print@temp_str| 0))& (0+255)
  6069     0B5D  120A  118A  263D  120A  158A  	fcall	_sprintf
  6070     0B62                     i1l5109:
  6071                           
  6072                           ;src/adcon.c: 225:   lcd_goto_sensor(num_sensor);
  6073     0B62  1283               	bcf	3,5	;RP0=0, select bank0
  6074     0B63  1303               	bcf	3,6	;RP1=0, select bank0
  6075     0B64  0835               	movf	adcon_print@num_sensor,w
  6076     0B65  120A  118A  22DB  120A  158A  	fcall	_lcd_goto_sensor
  6077     0B6A                     i1l5111:
  6078                           
  6079                           ;src/adcon.c: 227:   lcd_puts(temp_str);
  6080     0B6A  303A               	movlw	(low (adcon_print@temp_str| 0))& (0+255)
  6081     0B6B  00F2               	movwf	i1lcd_puts@str
  6082     0B6C  3000               	movlw	0
  6083     0B6D  00F3               	movwf	i1lcd_puts@str+1
  6084     0B6E  120A  158A  222B  120A  158A  	fcall	i1_lcd_puts
  6085     0B73                     i1l131:
  6086     0B73  0008               	return
  6087     0B74                     __end_of_adcon_print:
  6088                           
  6089                           	psect	text24
  6090     0829                     __ptext24:	
  6091 ;; *************** function _div *****************
  6092 ;; Defined at:
  6093 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\cdiv.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  number          2    8[COMMON] int 
  6096 ;;  denom           2   10[COMMON] int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  rv              4    0[BANK0 ] struct .
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  4    8[COMMON] struct .
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6108 ;;      Params:         4       0       0       0       0
  6109 ;;      Locals:         0       4       0       0       0
  6110 ;;      Temps:          0       0       0       0       0
  6111 ;;      Totals:         4       4       0       0       0
  6112 ;;Total ram usage:        8 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 1
  6115 ;; This function calls:
  6116 ;;		___awdiv
  6117 ;;		___awmod
  6118 ;; This function is called by:
  6119 ;;		_adcon_print
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123     0829                     _div:	
  6124                           ;psect for function _div
  6125                           
  6126     0829                     i1l4965:	
  6127                           ;incstack = 0
  6128 ;; hardware stack exceeded
  6129                           ; Regs used in _div: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6130                           
  6131     0829  087B               	movf	div@denom+1,w
  6132     082A  00F1               	movwf	___awdiv@divisor+1
  6133     082B  087A               	movf	div@denom,w
  6134     082C  00F0               	movwf	___awdiv@divisor
  6135     082D  0879               	movf	div@number+1,w
  6136     082E  00F3               	movwf	___awdiv@dividend+1
  6137     082F  0878               	movf	div@number,w
  6138     0830  00F2               	movwf	___awdiv@dividend
  6139     0831  120A  158A  23D1  120A  158A  	fcall	___awdiv
  6140     0836  0871               	movf	?___awdiv+1,w
  6141     0837  1283               	bcf	3,5	;RP0=0, select bank0
  6142     0838  1303               	bcf	3,6	;RP1=0, select bank0
  6143     0839  00A3               	movwf	div@rv+3
  6144     083A  0870               	movf	?___awdiv,w
  6145     083B  00A2               	movwf	div@rv+2
  6146     083C  087B               	movf	div@denom+1,w
  6147     083D  00F1               	movwf	___awmod@divisor+1
  6148     083E  087A               	movf	div@denom,w
  6149     083F  00F0               	movwf	___awmod@divisor
  6150     0840  0879               	movf	div@number+1,w
  6151     0841  00F3               	movwf	___awmod@dividend+1
  6152     0842  0878               	movf	div@number,w
  6153     0843  00F2               	movwf	___awmod@dividend
  6154     0844  120A  158A  22C2  120A  158A  	fcall	___awmod
  6155     0849  0871               	movf	?___awmod+1,w
  6156     084A  1283               	bcf	3,5	;RP0=0, select bank0
  6157     084B  1303               	bcf	3,6	;RP1=0, select bank0
  6158     084C  00A1               	movwf	div@rv+1
  6159     084D  0870               	movf	?___awmod,w
  6160     084E  00A0               	movwf	div@rv
  6161     084F                     i1l4967:
  6162     084F  0823               	movf	div@rv+3,w
  6163     0850  00FB               	movwf	?_div+3
  6164     0851  0822               	movf	div@rv+2,w
  6165     0852  00FA               	movwf	?_div+2
  6166     0853  0821               	movf	div@rv+1,w
  6167     0854  00F9               	movwf	?_div+1
  6168     0855  0820               	movf	div@rv,w
  6169     0856  00F8               	movwf	?_div
  6170     0857                     i1l1220:
  6171     0857  0008               	return
  6172     0858                     __end_of_div:
  6173                           
  6174                           	psect	text25
  6175     0AC2                     __ptext25:	
  6176 ;; *************** function ___awmod *****************
  6177 ;; Defined at:
  6178 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awmod.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  divisor         2    0[COMMON] int 
  6181 ;;  dividend        2    2[COMMON] int 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  sign            1    5[COMMON] unsigned char 
  6184 ;;  counter         1    4[COMMON] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    0[COMMON] int 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0, btemp+1
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6194 ;;      Params:         4       0       0       0       0
  6195 ;;      Locals:         2       0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0
  6197 ;;      Totals:         6       0       0       0       0
  6198 ;;Total ram usage:        6 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_div
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207     0AC2                     ___awmod:	
  6208                           ;psect for function ___awmod
  6209                           
  6210     0AC2                     i1l4859:	
  6211                           ;incstack = 0
  6212 ;; hardware stack exceeded
  6213                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  6214                           
  6215     0AC2  01F5               	clrf	___awmod@sign
  6216     0AC3                     i1l4861:
  6217     0AC3  1FF3               	btfss	___awmod@dividend+1,7
  6218     0AC4  2AC6               	goto	u440_21
  6219     0AC5  2AC7               	goto	u440_20
  6220     0AC6                     u440_21:
  6221     0AC6  2ACE               	goto	i1l4867
  6222     0AC7                     u440_20:
  6223     0AC7                     i1l4863:
  6224     0AC7  09F2               	comf	___awmod@dividend,f
  6225     0AC8  09F3               	comf	___awmod@dividend+1,f
  6226     0AC9  0AF2               	incf	___awmod@dividend,f
  6227     0ACA  1903               	skipnz
  6228     0ACB  0AF3               	incf	___awmod@dividend+1,f
  6229     0ACC                     i1l4865:
  6230     0ACC  01F5               	clrf	___awmod@sign
  6231     0ACD  0AF5               	incf	___awmod@sign,f
  6232     0ACE                     i1l4867:
  6233     0ACE  1FF1               	btfss	___awmod@divisor+1,7
  6234     0ACF  2AD1               	goto	u441_21
  6235     0AD0  2AD2               	goto	u441_20
  6236     0AD1                     u441_21:
  6237     0AD1  2AD7               	goto	i1l4871
  6238     0AD2                     u441_20:
  6239     0AD2                     i1l4869:
  6240     0AD2  09F0               	comf	___awmod@divisor,f
  6241     0AD3  09F1               	comf	___awmod@divisor+1,f
  6242     0AD4  0AF0               	incf	___awmod@divisor,f
  6243     0AD5  1903               	skipnz
  6244     0AD6  0AF1               	incf	___awmod@divisor+1,f
  6245     0AD7                     i1l4871:
  6246     0AD7  0870               	movf	___awmod@divisor,w
  6247     0AD8  0471               	iorwf	___awmod@divisor+1,w
  6248     0AD9  1903               	btfsc	3,2
  6249     0ADA  2ADC               	goto	u442_21
  6250     0ADB  2ADD               	goto	u442_20
  6251     0ADC                     u442_21:
  6252     0ADC  2B0C               	goto	i1l4889
  6253     0ADD                     u442_20:
  6254     0ADD                     i1l4873:
  6255     0ADD  01F4               	clrf	___awmod@counter
  6256     0ADE  0AF4               	incf	___awmod@counter,f
  6257     0ADF  2AEB               	goto	i1l4879
  6258     0AE0                     i1l4875:
  6259     0AE0  3001               	movlw	1
  6260     0AE1                     u443_25:
  6261     0AE1  1003               	clrc
  6262     0AE2  0DF0               	rlf	___awmod@divisor,f
  6263     0AE3  0DF1               	rlf	___awmod@divisor+1,f
  6264     0AE4  3EFF               	addlw	-1
  6265     0AE5  1D03               	skipz
  6266     0AE6  2AE1               	goto	u443_25
  6267     0AE7                     i1l4877:
  6268     0AE7  3001               	movlw	1
  6269     0AE8  00FF               	movwf	btemp+1
  6270     0AE9  087F               	movf	btemp+1,w
  6271     0AEA  07F4               	addwf	___awmod@counter,f
  6272     0AEB                     i1l4879:
  6273     0AEB  1FF1               	btfss	___awmod@divisor+1,7
  6274     0AEC  2AEE               	goto	u444_21
  6275     0AED  2AEF               	goto	u444_20
  6276     0AEE                     u444_21:
  6277     0AEE  2AE0               	goto	i1l4875
  6278     0AEF                     u444_20:
  6279     0AEF                     i1l4881:
  6280     0AEF  0871               	movf	___awmod@divisor+1,w
  6281     0AF0  0273               	subwf	___awmod@dividend+1,w
  6282     0AF1  1D03               	skipz
  6283     0AF2  2AF5               	goto	u445_25
  6284     0AF3  0870               	movf	___awmod@divisor,w
  6285     0AF4  0272               	subwf	___awmod@dividend,w
  6286     0AF5                     u445_25:
  6287     0AF5  1C03               	skipc
  6288     0AF6  2AF8               	goto	u445_21
  6289     0AF7  2AF9               	goto	u445_20
  6290     0AF8                     u445_21:
  6291     0AF8  2AFF               	goto	i1l4885
  6292     0AF9                     u445_20:
  6293     0AF9                     i1l4883:
  6294     0AF9  0870               	movf	___awmod@divisor,w
  6295     0AFA  02F2               	subwf	___awmod@dividend,f
  6296     0AFB  0871               	movf	___awmod@divisor+1,w
  6297     0AFC  1C03               	skipc
  6298     0AFD  03F3               	decf	___awmod@dividend+1,f
  6299     0AFE  02F3               	subwf	___awmod@dividend+1,f
  6300     0AFF                     i1l4885:
  6301     0AFF  3001               	movlw	1
  6302     0B00                     u446_25:
  6303     0B00  1003               	clrc
  6304     0B01  0CF1               	rrf	___awmod@divisor+1,f
  6305     0B02  0CF0               	rrf	___awmod@divisor,f
  6306     0B03  3EFF               	addlw	-1
  6307     0B04  1D03               	skipz
  6308     0B05  2B00               	goto	u446_25
  6309     0B06                     i1l4887:
  6310     0B06  3001               	movlw	1
  6311     0B07  02F4               	subwf	___awmod@counter,f
  6312     0B08  1D03               	btfss	3,2
  6313     0B09  2B0B               	goto	u447_21
  6314     0B0A  2B0C               	goto	u447_20
  6315     0B0B                     u447_21:
  6316     0B0B  2AEF               	goto	i1l4881
  6317     0B0C                     u447_20:
  6318     0B0C                     i1l4889:
  6319     0B0C  0875               	movf	___awmod@sign,w
  6320     0B0D  1903               	btfsc	3,2
  6321     0B0E  2B10               	goto	u448_21
  6322     0B0F  2B11               	goto	u448_20
  6323     0B10                     u448_21:
  6324     0B10  2B16               	goto	i1l4893
  6325     0B11                     u448_20:
  6326     0B11                     i1l4891:
  6327     0B11  09F2               	comf	___awmod@dividend,f
  6328     0B12  09F3               	comf	___awmod@dividend+1,f
  6329     0B13  0AF2               	incf	___awmod@dividend,f
  6330     0B14  1903               	skipnz
  6331     0B15  0AF3               	incf	___awmod@dividend+1,f
  6332     0B16                     i1l4893:
  6333     0B16  0873               	movf	___awmod@dividend+1,w
  6334     0B17  00F1               	movwf	?___awmod+1
  6335     0B18  0872               	movf	___awmod@dividend,w
  6336     0B19  00F0               	movwf	?___awmod
  6337     0B1A                     i1l935:
  6338     0B1A  0008               	return
  6339     0B1B                     __end_of___awmod:
  6340                           
  6341                           	psect	text26
  6342     0BD1                     __ptext26:	
  6343 ;; *************** function ___awdiv *****************
  6344 ;; Defined at:
  6345 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awdiv.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  divisor         2    0[COMMON] int 
  6348 ;;  dividend        2    2[COMMON] int 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  quotient        2    6[COMMON] int 
  6351 ;;  sign            1    5[COMMON] unsigned char 
  6352 ;;  counter         1    4[COMMON] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    0[COMMON] int 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0, btemp+1
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6362 ;;      Params:         4       0       0       0       0
  6363 ;;      Locals:         4       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0
  6365 ;;      Totals:         8       0       0       0       0
  6366 ;;Total ram usage:        8 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_div
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375     0BD1                     ___awdiv:	
  6376                           ;psect for function ___awdiv
  6377                           
  6378     0BD1                     i1l4815:	
  6379                           ;incstack = 0
  6380 ;; hardware stack exceeded
  6381                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6382                           
  6383     0BD1  01F5               	clrf	___awdiv@sign
  6384     0BD2                     i1l4817:
  6385     0BD2  1FF1               	btfss	___awdiv@divisor+1,7
  6386     0BD3  2BD5               	goto	u430_21
  6387     0BD4  2BD6               	goto	u430_20
  6388     0BD5                     u430_21:
  6389     0BD5  2BDD               	goto	i1l4823
  6390     0BD6                     u430_20:
  6391     0BD6                     i1l4819:
  6392     0BD6  09F0               	comf	___awdiv@divisor,f
  6393     0BD7  09F1               	comf	___awdiv@divisor+1,f
  6394     0BD8  0AF0               	incf	___awdiv@divisor,f
  6395     0BD9  1903               	skipnz
  6396     0BDA  0AF1               	incf	___awdiv@divisor+1,f
  6397     0BDB                     i1l4821:
  6398     0BDB  01F5               	clrf	___awdiv@sign
  6399     0BDC  0AF5               	incf	___awdiv@sign,f
  6400     0BDD                     i1l4823:
  6401     0BDD  1FF3               	btfss	___awdiv@dividend+1,7
  6402     0BDE  2BE0               	goto	u431_21
  6403     0BDF  2BE1               	goto	u431_20
  6404     0BE0                     u431_21:
  6405     0BE0  2BEA               	goto	i1l4829
  6406     0BE1                     u431_20:
  6407     0BE1                     i1l4825:
  6408     0BE1  09F2               	comf	___awdiv@dividend,f
  6409     0BE2  09F3               	comf	___awdiv@dividend+1,f
  6410     0BE3  0AF2               	incf	___awdiv@dividend,f
  6411     0BE4  1903               	skipnz
  6412     0BE5  0AF3               	incf	___awdiv@dividend+1,f
  6413     0BE6                     i1l4827:
  6414     0BE6  3001               	movlw	1
  6415     0BE7  00FF               	movwf	btemp+1
  6416     0BE8  087F               	movf	btemp+1,w
  6417     0BE9  06F5               	xorwf	___awdiv@sign,f
  6418     0BEA                     i1l4829:
  6419     0BEA  01F6               	clrf	___awdiv@quotient
  6420     0BEB  01F7               	clrf	___awdiv@quotient+1
  6421     0BEC                     i1l4831:
  6422     0BEC  0870               	movf	___awdiv@divisor,w
  6423     0BED  0471               	iorwf	___awdiv@divisor+1,w
  6424     0BEE  1903               	btfsc	3,2
  6425     0BEF  2BF1               	goto	u432_21
  6426     0BF0  2BF2               	goto	u432_20
  6427     0BF1                     u432_21:
  6428     0BF1  2C29               	goto	i1l4851
  6429     0BF2                     u432_20:
  6430     0BF2                     i1l4833:
  6431     0BF2  01F4               	clrf	___awdiv@counter
  6432     0BF3  0AF4               	incf	___awdiv@counter,f
  6433     0BF4  2C00               	goto	i1l4839
  6434     0BF5                     i1l4835:
  6435     0BF5  3001               	movlw	1
  6436     0BF6                     u433_25:
  6437     0BF6  1003               	clrc
  6438     0BF7  0DF0               	rlf	___awdiv@divisor,f
  6439     0BF8  0DF1               	rlf	___awdiv@divisor+1,f
  6440     0BF9  3EFF               	addlw	-1
  6441     0BFA  1D03               	skipz
  6442     0BFB  2BF6               	goto	u433_25
  6443     0BFC                     i1l4837:
  6444     0BFC  3001               	movlw	1
  6445     0BFD  00FF               	movwf	btemp+1
  6446     0BFE  087F               	movf	btemp+1,w
  6447     0BFF  07F4               	addwf	___awdiv@counter,f
  6448     0C00                     i1l4839:
  6449     0C00  1FF1               	btfss	___awdiv@divisor+1,7
  6450     0C01  2C03               	goto	u434_21
  6451     0C02  2C04               	goto	u434_20
  6452     0C03                     u434_21:
  6453     0C03  2BF5               	goto	i1l4835
  6454     0C04                     u434_20:
  6455     0C04                     i1l4841:
  6456     0C04  3001               	movlw	1
  6457     0C05                     u435_25:
  6458     0C05  1003               	clrc
  6459     0C06  0DF6               	rlf	___awdiv@quotient,f
  6460     0C07  0DF7               	rlf	___awdiv@quotient+1,f
  6461     0C08  3EFF               	addlw	-1
  6462     0C09  1D03               	skipz
  6463     0C0A  2C05               	goto	u435_25
  6464     0C0B  0871               	movf	___awdiv@divisor+1,w
  6465     0C0C  0273               	subwf	___awdiv@dividend+1,w
  6466     0C0D  1D03               	skipz
  6467     0C0E  2C11               	goto	u436_25
  6468     0C0F  0870               	movf	___awdiv@divisor,w
  6469     0C10  0272               	subwf	___awdiv@dividend,w
  6470     0C11                     u436_25:
  6471     0C11  1C03               	skipc
  6472     0C12  2C14               	goto	u436_21
  6473     0C13  2C15               	goto	u436_20
  6474     0C14                     u436_21:
  6475     0C14  2C1C               	goto	i1l4847
  6476     0C15                     u436_20:
  6477     0C15                     i1l4843:
  6478     0C15  0870               	movf	___awdiv@divisor,w
  6479     0C16  02F2               	subwf	___awdiv@dividend,f
  6480     0C17  0871               	movf	___awdiv@divisor+1,w
  6481     0C18  1C03               	skipc
  6482     0C19  03F3               	decf	___awdiv@dividend+1,f
  6483     0C1A  02F3               	subwf	___awdiv@dividend+1,f
  6484     0C1B                     i1l4845:
  6485     0C1B  1476               	bsf	___awdiv@quotient,0
  6486     0C1C                     i1l4847:
  6487     0C1C  3001               	movlw	1
  6488     0C1D                     u437_25:
  6489     0C1D  1003               	clrc
  6490     0C1E  0CF1               	rrf	___awdiv@divisor+1,f
  6491     0C1F  0CF0               	rrf	___awdiv@divisor,f
  6492     0C20  3EFF               	addlw	-1
  6493     0C21  1D03               	skipz
  6494     0C22  2C1D               	goto	u437_25
  6495     0C23                     i1l4849:
  6496     0C23  3001               	movlw	1
  6497     0C24  02F4               	subwf	___awdiv@counter,f
  6498     0C25  1D03               	btfss	3,2
  6499     0C26  2C28               	goto	u438_21
  6500     0C27  2C29               	goto	u438_20
  6501     0C28                     u438_21:
  6502     0C28  2C04               	goto	i1l4841
  6503     0C29                     u438_20:
  6504     0C29                     i1l4851:
  6505     0C29  0875               	movf	___awdiv@sign,w
  6506     0C2A  1903               	btfsc	3,2
  6507     0C2B  2C2D               	goto	u439_21
  6508     0C2C  2C2E               	goto	u439_20
  6509     0C2D                     u439_21:
  6510     0C2D  2C33               	goto	i1l4855
  6511     0C2E                     u439_20:
  6512     0C2E                     i1l4853:
  6513     0C2E  09F6               	comf	___awdiv@quotient,f
  6514     0C2F  09F7               	comf	___awdiv@quotient+1,f
  6515     0C30  0AF6               	incf	___awdiv@quotient,f
  6516     0C31  1903               	skipnz
  6517     0C32  0AF7               	incf	___awdiv@quotient+1,f
  6518     0C33                     i1l4855:
  6519     0C33  0877               	movf	___awdiv@quotient+1,w
  6520     0C34  00F1               	movwf	?___awdiv+1
  6521     0C35  0876               	movf	___awdiv@quotient,w
  6522     0C36  00F0               	movwf	?___awdiv
  6523     0C37                     i1l922:
  6524     0C37  0008               	return
  6525     0C38                     __end_of___awdiv:
  6526                           
  6527                           	psect	text27
  6528     0E58                     __ptext27:	
  6529 ;; *************** function _adcon_le_sensor *****************
  6530 ;; Defined at:
  6531 ;;		line 243 in file "src/adcon.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  num_sensor      1    wreg     unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  num_sensor      1    6[COMMON] unsigned char 
  6536 ;;  n               2   11[COMMON] unsigned int 
  6537 ;;  acc             4    7[COMMON] unsigned long 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  2    0[COMMON] unsigned int 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6547 ;;      Params:         2       0       0       0       0
  6548 ;;      Locals:         7       0       0       0       0
  6549 ;;      Temps:          4       0       0       0       0
  6550 ;;      Totals:        13       0       0       0       0
  6551 ;;Total ram usage:       13 bytes
  6552 ;; Hardware stack levels used: 2
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_adcon_amostra_print
  6557 ;;		_adcon_amostra_print_grava
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561     0E58                     _adcon_le_sensor:	
  6562                           ;psect for function _adcon_le_sensor
  6563                           
  6564                           
  6565                           ;incstack = 0
  6566 ;; using string table level
  6567                           ; Regs used in _adcon_le_sensor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6568                           ;adcon_le_sensor@num_sensor stored from wreg
  6569     0E58  00F6               	movwf	adcon_le_sensor@num_sensor
  6570     0E59                     i1l5085:
  6571                           
  6572                           ;src/adcon.c: 245:   uint32_t acc = 0;
  6573     0E59  3000               	movlw	0
  6574     0E5A  00FA               	movwf	adcon_le_sensor@acc+3
  6575     0E5B  3000               	movlw	0
  6576     0E5C  00F9               	movwf	adcon_le_sensor@acc+2
  6577     0E5D  3000               	movlw	0
  6578     0E5E  00F8               	movwf	adcon_le_sensor@acc+1
  6579     0E5F  3000               	movlw	0
  6580     0E60  00F7               	movwf	adcon_le_sensor@acc
  6581     0E61                     i1l5087:
  6582                           
  6583                           ;src/adcon.c: 247:   ADCON0bits.CHS = canais[num_sensor];
  6584     0E61  0876               	movf	adcon_le_sensor@num_sensor,w
  6585     0E62  3E24               	addlw	low (_canais| (0+32768))
  6586     0E63  0084               	movwf	4
  6587     0E64  3083               	movlw	high (_canais| (0+32768))
  6588     0E65  1803               	skipnc
  6589     0E66  3E01               	addlw	1
  6590     0E67  1283               	bcf	3,5	;RP0=0, select bank0
  6591     0E68  1303               	bcf	3,6	;RP1=0, select bank0
  6592     0E69  00FF               	movwf	btemp+1
  6593     0E6A  120A  118A  2300  120A  158A  	fcall	stringtab
  6594     0E6F  00F2               	movwf	??_adcon_le_sensor
  6595     0E70  0DF2               	rlf	??_adcon_le_sensor,f
  6596     0E71  0DF2               	rlf	??_adcon_le_sensor,f
  6597     0E72  081F               	movf	31,w	;volatile
  6598     0E73  0672               	xorwf	??_adcon_le_sensor,w
  6599     0E74  39C3               	andlw	-61
  6600     0E75  0672               	xorwf	??_adcon_le_sensor,w
  6601     0E76  009F               	movwf	31	;volatile
  6602     0E77                     i1l5089:
  6603                           
  6604                           ;src/adcon.c: 249:   _delay((unsigned long)((20)*(4000000/4000000.0)));
  6605     0E77  3006               	movlw	6
  6606     0E78  00F2               	movwf	??_adcon_le_sensor
  6607     0E79                     u579_27:
  6608     0E79  0BF2               	decfsz	??_adcon_le_sensor,f
  6609     0E7A  2E79               	goto	u579_27
  6610     0E7B  0000               	nop
  6611     0E7C                     i1l5091:
  6612                           
  6613                           ;src/adcon.c: 252:   for (uint16_t n = 0; n < 32; n++) {
  6614     0E7C  01FB               	clrf	adcon_le_sensor@n
  6615     0E7D  01FC               	clrf	adcon_le_sensor@n+1
  6616     0E7E                     i1l134:
  6617                           
  6618                           ;src/adcon.c: 253:     ADCON0bits.GO_nDONE = 1;
  6619     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  6620     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  6621     0E80  149F               	bsf	31,1	;volatile
  6622     0E81                     i1l136:	
  6623                           ;src/adcon.c: 254:     while (ADCON0bits.GO_nDONE);
  6624                           
  6625     0E81  189F               	btfsc	31,1	;volatile
  6626     0E82  2E84               	goto	u476_21
  6627     0E83  2E85               	goto	u476_20
  6628     0E84                     u476_21:
  6629     0E84  2E81               	goto	i1l136
  6630     0E85                     u476_20:
  6631     0E85                     i1l5097:
  6632                           
  6633                           ;src/adcon.c: 256:       acc += (uint32_t)((ADRESH << 8) + ADRESL);
  6634     0E85  1683               	bsf	3,5	;RP0=1, select bank1
  6635     0E86  1303               	bcf	3,6	;RP1=0, select bank1
  6636     0E87  081E               	movf	30,w	;volatile
  6637     0E88  00F2               	movwf	??_adcon_le_sensor
  6638     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  6639     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  6640     0E8B  081E               	movf	30,w	;volatile
  6641     0E8C  00F3               	movwf	??_adcon_le_sensor+1
  6642     0E8D  3000               	movlw	0
  6643     0E8E  1BF3               	btfsc	??_adcon_le_sensor+1,7
  6644     0E8F  30FF               	movlw	255
  6645     0E90  00F4               	movwf	??_adcon_le_sensor+2
  6646     0E91  00F5               	movwf	??_adcon_le_sensor+3
  6647     0E92  0872               	movf	??_adcon_le_sensor,w
  6648     0E93  07F7               	addwf	adcon_le_sensor@acc,f
  6649     0E94  0873               	movf	??_adcon_le_sensor+1,w
  6650     0E95  1103               	clrz
  6651     0E96  1803               	skipnc
  6652     0E97  3E01               	addlw	1
  6653     0E98  1903               	skipnz
  6654     0E99  2E9B               	goto	u477_21
  6655     0E9A  07F8               	addwf	adcon_le_sensor@acc+1,f
  6656     0E9B                     u477_21:
  6657     0E9B  0874               	movf	??_adcon_le_sensor+2,w
  6658     0E9C  1103               	clrz
  6659     0E9D  1803               	skipnc
  6660     0E9E  3E01               	addlw	1
  6661     0E9F  1903               	skipnz
  6662     0EA0  2EA2               	goto	u477_22
  6663     0EA1  07F9               	addwf	adcon_le_sensor@acc+2,f
  6664     0EA2                     u477_22:
  6665     0EA2  0875               	movf	??_adcon_le_sensor+3,w
  6666     0EA3  1103               	clrz
  6667     0EA4  1803               	skipnc
  6668     0EA5  3E01               	addlw	1
  6669     0EA6  1903               	skipnz
  6670     0EA7  2EA9               	goto	u477_23
  6671     0EA8  07FA               	addwf	adcon_le_sensor@acc+3,f
  6672     0EA9                     u477_23:
  6673                           
  6674                           ;src/adcon.c: 257:   }
  6675     0EA9  3001               	movlw	1
  6676     0EAA  07FB               	addwf	adcon_le_sensor@n,f
  6677     0EAB  1803               	skipnc
  6678     0EAC  0AFC               	incf	adcon_le_sensor@n+1,f
  6679     0EAD  3000               	movlw	0
  6680     0EAE  07FC               	addwf	adcon_le_sensor@n+1,f
  6681     0EAF  3000               	movlw	0
  6682     0EB0  027C               	subwf	adcon_le_sensor@n+1,w
  6683     0EB1  3020               	movlw	32
  6684     0EB2  1903               	skipnz
  6685     0EB3  027B               	subwf	adcon_le_sensor@n,w
  6686     0EB4  1C03               	skipc
  6687     0EB5  2EB7               	goto	u478_21
  6688     0EB6  2EB8               	goto	u478_20
  6689     0EB7                     u478_21:
  6690     0EB7  2E7E               	goto	i1l134
  6691     0EB8                     u478_20:
  6692     0EB8                     i1l5099:
  6693                           
  6694                           ;src/adcon.c: 260:   return (uint16_t)(acc / 32);
  6695     0EB8  0877               	movf	adcon_le_sensor@acc,w
  6696     0EB9  00F2               	movwf	??_adcon_le_sensor
  6697     0EBA  0878               	movf	adcon_le_sensor@acc+1,w
  6698     0EBB  00F3               	movwf	??_adcon_le_sensor+1
  6699     0EBC  0879               	movf	adcon_le_sensor@acc+2,w
  6700     0EBD  00F4               	movwf	??_adcon_le_sensor+2
  6701     0EBE  087A               	movf	adcon_le_sensor@acc+3,w
  6702     0EBF  00F5               	movwf	??_adcon_le_sensor+3
  6703     0EC0  3005               	movlw	5
  6704     0EC1                     u479_25:
  6705     0EC1  1003               	clrc
  6706     0EC2  0CF5               	rrf	??_adcon_le_sensor+3,f
  6707     0EC3  0CF4               	rrf	??_adcon_le_sensor+2,f
  6708     0EC4  0CF3               	rrf	??_adcon_le_sensor+1,f
  6709     0EC5  0CF2               	rrf	??_adcon_le_sensor,f
  6710     0EC6                     u479_20:
  6711     0EC6  3EFF               	addlw	-1
  6712     0EC7  1D03               	skipz
  6713     0EC8  2EC1               	goto	u479_25
  6714     0EC9  0873               	movf	??_adcon_le_sensor+1,w
  6715     0ECA  00F1               	movwf	?_adcon_le_sensor+1
  6716     0ECB  0872               	movf	??_adcon_le_sensor,w
  6717     0ECC  00F0               	movwf	?_adcon_le_sensor
  6718     0ECD                     i1l139:
  6719     0ECD  0008               	return
  6720     0ECE                     __end_of_adcon_le_sensor:
  6721                           
  6722                           	psect	text28
  6723     15FE                     __ptext28:	
  6724 ;; *************** function _est_estado_menu_limpar *****************
  6725 ;; Defined at:
  6726 ;;		line 238 in file "src/estados.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  botao           1    wreg     enum E1289
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  botao           1   12[COMMON] enum E1289
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6740 ;;      Params:         0       0       0       0       0
  6741 ;;      Locals:         1       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0
  6743 ;;      Totals:         1       0       0       0       0
  6744 ;;Total ram usage:        1 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 4
  6747 ;; This function calls:
  6748 ;;		_est_executa
  6749 ;; This function is called by:
  6750 ;;		_est_maquina
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754     15FE                     _est_estado_menu_limpar:	
  6755                           ;psect for function _est_estado_menu_limpar
  6756                           
  6757                           
  6758                           ;incstack = 0
  6759 ;; hardware stack exceeded
  6760                           ; Regs used in _est_estado_menu_limpar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  6761                           ;est_estado_menu_limpar@botao stored from wreg
  6762     15FE  00FC               	movwf	est_estado_menu_limpar@botao
  6763     15FF                     i1l5461:
  6764                           
  6765                           ;src/estados.c: 239:   if (botao == BTN_STOP) {
  6766     15FF  3002               	movlw	2
  6767     1600  067C               	xorwf	est_estado_menu_limpar@botao,w
  6768     1601  1D03               	btfss	3,2
  6769     1602  2E04               	goto	u512_21
  6770     1603  2E05               	goto	u512_20
  6771     1604                     u512_21:
  6772     1604  2E0B               	goto	i1l315
  6773     1605                     u512_20:
  6774     1605                     i1l5463:
  6775                           
  6776                           ;src/estados.c: 240:     est_executa(EST_ESTADO_MENU_PRINCIPAL);
  6777     1605  3001               	movlw	1
  6778     1606  120A  118A  203E  160A  118A  	fcall	_est_executa
  6779     160B                     i1l315:
  6780     160B  0008               	return
  6781     160C                     __end_of_est_estado_menu_limpar:
  6782                           
  6783                           	psect	text29
  6784     0D75                     __ptext29:	
  6785 ;; *************** function _est_estado_menu_conf_tempo_amostra *****************
  6786 ;; Defined at:
  6787 ;;		line 306 in file "src/estados.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  botao           1    wreg     enum E1289
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  botao           1   56[BANK0 ] enum E1289
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         0       0       0       0       0
  6802 ;;      Locals:         0       1       0       0       0
  6803 ;;      Temps:          2       0       0       0       0
  6804 ;;      Totals:         2       1       0       0       0
  6805 ;;Total ram usage:        3 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 4
  6808 ;; This function calls:
  6809 ;;		_est_executa
  6810 ;;		_menu_confirma_index
  6811 ;;		_menu_dec_index
  6812 ;;		_menu_get_value_active
  6813 ;;		_menu_inc_index
  6814 ;;		_menu_restore_index
  6815 ;;		i1_eeprom_grava_word
  6816 ;; This function is called by:
  6817 ;;		_est_maquina
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821     0D75                     _est_estado_menu_conf_tempo_amostra:	
  6822                           ;psect for function _est_estado_menu_conf_tempo_amostra
  6823                           
  6824                           
  6825                           ;incstack = 0
  6826 ;; hardware stack exceeded
  6827                           ; Regs used in _est_estado_menu_conf_tempo_amostra: [wreg-fsr0h+status,2+status,0+btemp+
      +                          1+pclath+cstack]
  6828                           ;est_estado_menu_conf_tempo_amostra@botao stored from wreg
  6829     0D75  1283               	bcf	3,5	;RP0=0, select bank0
  6830     0D76  1303               	bcf	3,6	;RP1=0, select bank0
  6831     0D77  00D8               	movwf	est_estado_menu_conf_tempo_amostra@botao
  6832     0D78                     i1l5465:
  6833                           
  6834                           ;src/estados.c: 307:   switch (botao) {
  6835     0D78  2DCE               	goto	i1l5485
  6836     0D79                     i1l5467:
  6837                           
  6838                           ;src/estados.c: 309:       if (menu_dec_index(&menu_cfg_tempo_amostra) >= 0) {
  6839     0D79  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  6840     0D7A  160A  118A  262D  120A  158A  	fcall	_menu_dec_index
  6841     0D7F  00FC               	movwf	??_est_estado_menu_conf_tempo_amostra
  6842     0D80  1BFC               	btfsc	??_est_estado_menu_conf_tempo_amostra,7
  6843     0D81  2D83               	goto	u513_21
  6844     0D82  2D84               	goto	u513_20
  6845     0D83                     u513_21:
  6846     0D83  2DE4               	goto	i1l350
  6847     0D84                     u513_20:
  6848     0D84                     i1l5469:
  6849                           
  6850                           ;src/estados.c: 310:         est_executa(EST_ESTADO_MENU_CONF_TEMPO_AMOSTRA);
  6851     0D84  3007               	movlw	7
  6852     0D85  120A  118A  203E  120A  158A  	fcall	_est_executa
  6853     0D8A  2DE4               	goto	i1l350
  6854     0D8B                     i1l5471:
  6855                           
  6856                           ;src/estados.c: 314:       if ( menu_inc_index(&menu_cfg_tempo_amostra) >= 0 ) {
  6857     0D8B  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  6858     0D8C  120A  158A  2003  120A  158A  	fcall	_menu_inc_index
  6859     0D91  00FC               	movwf	??_est_estado_menu_conf_tempo_amostra
  6860     0D92  1BFC               	btfsc	??_est_estado_menu_conf_tempo_amostra,7
  6861     0D93  2D95               	goto	u514_21
  6862     0D94  2D96               	goto	u514_20
  6863     0D95                     u514_21:
  6864     0D95  2DE4               	goto	i1l350
  6865     0D96                     u514_20:
  6866     0D96                     i1l5473:
  6867                           
  6868                           ;src/estados.c: 315:         est_executa(EST_ESTADO_MENU_CONF_TEMPO_AMOSTRA);
  6869     0D96  3007               	movlw	7
  6870     0D97  120A  118A  203E  120A  158A  	fcall	_est_executa
  6871     0D9C  2DE4               	goto	i1l350
  6872     0D9D                     i1l5475:
  6873                           
  6874                           ;src/estados.c: 319:       menu_restore_index(&menu_cfg_tempo_amostra);
  6875     0D9D  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  6876     0D9E  160A  118A  25E6  120A  158A  	fcall	_menu_restore_index
  6877                           
  6878                           ;src/estados.c: 320:       est_executa(EST_ESTADO_MENU_PRINCIPAL);
  6879     0DA3  3001               	movlw	1
  6880     0DA4  120A  118A  203E  120A  158A  	fcall	_est_executa
  6881                           
  6882                           ;src/estados.c: 321:       break;
  6883     0DA9  2DE4               	goto	i1l350
  6884     0DAA                     i1l5477:
  6885                           
  6886                           ;src/estados.c: 323:       menu_confirma_index(&menu_cfg_tempo_amostra);
  6887     0DAA  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  6888     0DAB  160A  118A  25DB  120A  158A  	fcall	_menu_confirma_index
  6889                           
  6890                           ;src/estados.c: 324:       cfg_tempo_amostra_atual = (uint8_t)(menu_get_value_active(&me
      +                          nu_cfg_tempo_amostra));
  6891     0DB0  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  6892     0DB1  120A  158A  20C3  120A  158A  	fcall	_menu_get_value_active
  6893     0DB6  0870               	movf	?_menu_get_value_active,w
  6894     0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  6895     0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  6896     0DB9  00E9               	movwf	_cfg_tempo_amostra_atual
  6897     0DBA                     i1l5479:
  6898                           
  6899                           ;src/estados.c: 325:       eeprom_grava_word(0x02, cfg_tempo_amostra_atual);
  6900     0DBA  0869               	movf	_cfg_tempo_amostra_atual,w
  6901     0DBB  00FC               	movwf	??_est_estado_menu_conf_tempo_amostra
  6902     0DBC  01FD               	clrf	??_est_estado_menu_conf_tempo_amostra+1
  6903     0DBD  087C               	movf	??_est_estado_menu_conf_tempo_amostra,w
  6904     0DBE  00F2               	movwf	i1eeprom_grava_word@dado
  6905     0DBF  087D               	movf	??_est_estado_menu_conf_tempo_amostra+1,w
  6906     0DC0  00F3               	movwf	i1eeprom_grava_word@dado+1
  6907     0DC1  3002               	movlw	2
  6908     0DC2  160A  118A  261A  120A  158A  	fcall	i1_eeprom_grava_word
  6909     0DC7                     i1l5481:
  6910                           
  6911                           ;src/estados.c: 326:       est_executa(EST_ESTADO_MENU_PRINCIPAL);
  6912     0DC7  3001               	movlw	1
  6913     0DC8  120A  118A  203E  120A  158A  	fcall	_est_executa
  6914                           
  6915                           ;src/estados.c: 327:       break;
  6916     0DCD  2DE4               	goto	i1l350
  6917     0DCE                     i1l5485:
  6918     0DCE  0858               	movf	est_estado_menu_conf_tempo_amostra@botao,w
  6919     0DCF  00FC               	movwf	??_est_estado_menu_conf_tempo_amostra
  6920     0DD0  01FD               	clrf	??_est_estado_menu_conf_tempo_amostra+1
  6921                           
  6922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6923                           ; Switch size 1, requested type "simple"
  6924                           ; Number of cases is 1, Range of values is 0 to 0
  6925                           ; switch strategies available:
  6926                           ; Name         Instructions Cycles
  6927                           ; simple_byte            4     3 (average)
  6928                           ; direct_byte           11     8 (fixed)
  6929                           ; jumptable            260     6 (fixed)
  6930                           ;	Chosen strategy is simple_byte
  6931     0DD1  087D               	movf	??_est_estado_menu_conf_tempo_amostra+1,w
  6932     0DD2  3A00               	xorlw	0	; case 0
  6933     0DD3  1903               	skipnz
  6934     0DD4  2DD6               	goto	i1l6247
  6935     0DD5  2DE4               	goto	i1l350
  6936     0DD6                     i1l6247:
  6937                           
  6938                           ; Switch size 1, requested type "simple"
  6939                           ; Number of cases is 4, Range of values is 1 to 4
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte           13     7 (average)
  6943                           ; direct_byte           23    11 (fixed)
  6944                           ; jumptable            263     9 (fixed)
  6945                           ;	Chosen strategy is simple_byte
  6946     0DD6  087C               	movf	??_est_estado_menu_conf_tempo_amostra,w
  6947     0DD7  3A01               	xorlw	1	; case 1
  6948     0DD8  1903               	skipnz
  6949     0DD9  2DAA               	goto	i1l5477
  6950     0DDA  3A03               	xorlw	3	; case 2
  6951     0DDB  1903               	skipnz
  6952     0DDC  2D9D               	goto	i1l5475
  6953     0DDD  3A01               	xorlw	1	; case 3
  6954     0DDE  1903               	skipnz
  6955     0DDF  2D79               	goto	i1l5467
  6956     0DE0  3A07               	xorlw	7	; case 4
  6957     0DE1  1903               	skipnz
  6958     0DE2  2D8B               	goto	i1l5471
  6959     0DE3  2DE4               	goto	i1l350
  6960     0DE4                     i1l350:
  6961     0DE4  0008               	return
  6962     0DE5                     __end_of_est_estado_menu_conf_tempo_amostra:
  6963                           
  6964                           	psect	text30
  6965     0D0A                     __ptext30:	
  6966 ;; *************** function _est_estado_menu_conf_quant_sensores *****************
  6967 ;; Defined at:
  6968 ;;		line 338 in file "src/estados.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  botao           1    wreg     enum E1289
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  botao           1   56[BANK0 ] enum E1289
  6973 ;;  quant_sens      1    0        unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6983 ;;      Params:         0       0       0       0       0
  6984 ;;      Locals:         0       1       0       0       0
  6985 ;;      Temps:          2       0       0       0       0
  6986 ;;      Totals:         2       1       0       0       0
  6987 ;;Total ram usage:        3 bytes
  6988 ;; Hardware stack levels used: 1
  6989 ;; Hardware stack levels required when called: 4
  6990 ;; This function calls:
  6991 ;;		_est_executa
  6992 ;;		_menu_confirma_index
  6993 ;;		_menu_dec_index
  6994 ;;		_menu_get_value_active
  6995 ;;		_menu_inc_index
  6996 ;;		_menu_restore_index
  6997 ;;		i1_eeprom_write
  6998 ;; This function is called by:
  6999 ;;		_est_maquina
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003     0D0A                     _est_estado_menu_conf_quant_sensores:	
  7004                           ;psect for function _est_estado_menu_conf_quant_sensores
  7005                           
  7006                           
  7007                           ;incstack = 0
  7008 ;; hardware stack exceeded
  7009                           ; Regs used in _est_estado_menu_conf_quant_sensores: [wreg-fsr0h+status,2+status,0+btemp
      +                          +1+pclath+cstack]
  7010                           ;est_estado_menu_conf_quant_sensores@botao stored from wreg
  7011     0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  7012     0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  7013     0D0C  00D8               	movwf	est_estado_menu_conf_quant_sensores@botao
  7014     0D0D                     i1l5493:
  7015                           
  7016                           ;src/estados.c: 339:   uint8_t quant_sens;;src/estados.c: 340:     switch (botao) {
  7017     0D0D  2D5E               	goto	i1l5513
  7018     0D0E                     i1l5495:
  7019                           
  7020                           ;src/estados.c: 343:         if (menu_dec_index(&menu_cfg_quant_sensores) >= 0) {
  7021     0D0E  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  7022     0D0F  160A  118A  262D  120A  158A  	fcall	_menu_dec_index
  7023     0D14  00FC               	movwf	??_est_estado_menu_conf_quant_sensores
  7024     0D15  1BFC               	btfsc	??_est_estado_menu_conf_quant_sensores,7
  7025     0D16  2D18               	goto	u515_21
  7026     0D17  2D19               	goto	u515_20
  7027     0D18                     u515_21:
  7028     0D18  2D74               	goto	i1l362
  7029     0D19                     u515_20:
  7030     0D19                     i1l5497:
  7031                           
  7032                           ;src/estados.c: 344:           est_executa(EST_ESTADO_MENU_CONF_QUANT_SENSORES);
  7033     0D19  3008               	movlw	8
  7034     0D1A  120A  118A  203E  120A  158A  	fcall	_est_executa
  7035     0D1F  2D74               	goto	i1l362
  7036     0D20                     i1l5499:
  7037                           
  7038                           ;src/estados.c: 349:         if ( menu_inc_index(&menu_cfg_quant_sensores) >= 0 ) {
  7039     0D20  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  7040     0D21  120A  158A  2003  120A  158A  	fcall	_menu_inc_index
  7041     0D26  00FC               	movwf	??_est_estado_menu_conf_quant_sensores
  7042     0D27  1BFC               	btfsc	??_est_estado_menu_conf_quant_sensores,7
  7043     0D28  2D2A               	goto	u516_21
  7044     0D29  2D2B               	goto	u516_20
  7045     0D2A                     u516_21:
  7046     0D2A  2D74               	goto	i1l362
  7047     0D2B                     u516_20:
  7048     0D2B                     i1l5501:
  7049                           
  7050                           ;src/estados.c: 350:           est_executa(EST_ESTADO_MENU_CONF_QUANT_SENSORES);
  7051     0D2B  3008               	movlw	8
  7052     0D2C  120A  118A  203E  120A  158A  	fcall	_est_executa
  7053     0D31  2D74               	goto	i1l362
  7054     0D32                     i1l5503:
  7055                           
  7056                           ;src/estados.c: 354:         menu_restore_index(&menu_cfg_quant_sensores);
  7057     0D32  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  7058     0D33  160A  118A  25E6  120A  158A  	fcall	_menu_restore_index
  7059                           
  7060                           ;src/estados.c: 355:         est_executa(EST_ESTADO_MENU_PRINCIPAL);
  7061     0D38  3001               	movlw	1
  7062     0D39  120A  118A  203E  120A  158A  	fcall	_est_executa
  7063                           
  7064                           ;src/estados.c: 356:         break;
  7065     0D3E  2D74               	goto	i1l362
  7066     0D3F                     i1l5505:
  7067                           
  7068                           ;src/estados.c: 358:         menu_confirma_index(&menu_cfg_quant_sensores);
  7069     0D3F  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  7070     0D40  160A  118A  25DB  120A  158A  	fcall	_menu_confirma_index
  7071                           
  7072                           ;src/estados.c: 359:         cfg_quant_sensores_atual = (uint8_t)(menu_get_value_active(
      +                          &menu_cfg_quant_sensores));
  7073     0D45  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  7074     0D46  120A  158A  20C3  120A  158A  	fcall	_menu_get_value_active
  7075     0D4B  0870               	movf	?_menu_get_value_active,w
  7076     0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  7077     0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  7078     0D4E  00EB               	movwf	_cfg_quant_sensores_atual
  7079     0D4F                     i1l5507:
  7080                           
  7081                           ;src/estados.c: 360:         eeprom_write(0x00, cfg_quant_sensores_atual);
  7082     0D4F  086B               	movf	_cfg_quant_sensores_atual,w
  7083     0D50  00F0               	movwf	i1eeprom_write@value
  7084     0D51  3000               	movlw	0
  7085     0D52  160A  118A  2778  120A  158A  	fcall	i1_eeprom_write
  7086     0D57                     i1l5509:
  7087                           
  7088                           ;src/estados.c: 361:         est_executa(EST_ESTADO_MENU_PRINCIPAL);
  7089     0D57  3001               	movlw	1
  7090     0D58  120A  118A  203E  120A  158A  	fcall	_est_executa
  7091                           
  7092                           ;src/estados.c: 362:         break;
  7093     0D5D  2D74               	goto	i1l362
  7094     0D5E                     i1l5513:
  7095     0D5E  0858               	movf	est_estado_menu_conf_quant_sensores@botao,w
  7096     0D5F  00FC               	movwf	??_est_estado_menu_conf_quant_sensores
  7097     0D60  01FD               	clrf	??_est_estado_menu_conf_quant_sensores+1
  7098                           
  7099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7100                           ; Switch size 1, requested type "simple"
  7101                           ; Number of cases is 1, Range of values is 0 to 0
  7102                           ; switch strategies available:
  7103                           ; Name         Instructions Cycles
  7104                           ; simple_byte            4     3 (average)
  7105                           ; direct_byte           11     8 (fixed)
  7106                           ; jumptable            260     6 (fixed)
  7107                           ;	Chosen strategy is simple_byte
  7108     0D61  087D               	movf	??_est_estado_menu_conf_quant_sensores+1,w
  7109     0D62  3A00               	xorlw	0	; case 0
  7110     0D63  1903               	skipnz
  7111     0D64  2D66               	goto	i1l6249
  7112     0D65  2D74               	goto	i1l362
  7113     0D66                     i1l6249:
  7114                           
  7115                           ; Switch size 1, requested type "simple"
  7116                           ; Number of cases is 4, Range of values is 1 to 4
  7117                           ; switch strategies available:
  7118                           ; Name         Instructions Cycles
  7119                           ; simple_byte           13     7 (average)
  7120                           ; direct_byte           23    11 (fixed)
  7121                           ; jumptable            263     9 (fixed)
  7122                           ;	Chosen strategy is simple_byte
  7123     0D66  087C               	movf	??_est_estado_menu_conf_quant_sensores,w
  7124     0D67  3A01               	xorlw	1	; case 1
  7125     0D68  1903               	skipnz
  7126     0D69  2D3F               	goto	i1l5505
  7127     0D6A  3A03               	xorlw	3	; case 2
  7128     0D6B  1903               	skipnz
  7129     0D6C  2D32               	goto	i1l5503
  7130     0D6D  3A01               	xorlw	1	; case 3
  7131     0D6E  1903               	skipnz
  7132     0D6F  2D0E               	goto	i1l5495
  7133     0D70  3A07               	xorlw	7	; case 4
  7134     0D71  1903               	skipnz
  7135     0D72  2D20               	goto	i1l5499
  7136     0D73  2D74               	goto	i1l362
  7137     0D74                     i1l362:
  7138     0D74  0008               	return
  7139     0D75                     __end_of_est_estado_menu_conf_quant_sensores:
  7140                           
  7141                           	psect	text31
  7142     15E6                     __ptext31:	
  7143 ;; *************** function _menu_restore_index *****************
  7144 ;; Defined at:
  7145 ;;		line 59 in file "src/menu.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  menu            1    wreg     PTR struct .
  7148 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  menu            1    0[COMMON] PTR struct .
  7151 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), 
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, fsr0l, fsr0h, btemp+1
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7161 ;;      Params:         0       0       0       0       0
  7162 ;;      Locals:         1       0       0       0       0
  7163 ;;      Temps:          0       0       0       0       0
  7164 ;;      Totals:         1       0       0       0       0
  7165 ;;Total ram usage:        1 bytes
  7166 ;; Hardware stack levels used: 1
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_est_estado_menu_conf_tempo_amostra
  7171 ;;		_est_estado_menu_conf_quant_sensores
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175     15E6                     _menu_restore_index:	
  7176                           ;psect for function _menu_restore_index
  7177                           
  7178                           
  7179                           ;incstack = 0
  7180                           ; Regs used in _menu_restore_index: [wreg-fsr0h+btemp+1]
  7181                           ;menu_restore_index@menu stored from wreg
  7182     15E6  00F0               	movwf	menu_restore_index@menu
  7183     15E7                     i1l5333:
  7184                           
  7185                           ;src/menu.c: 60:   menu->index_nav = menu->index_active;
  7186     15E7  0870               	movf	menu_restore_index@menu,w
  7187     15E8  0084               	movwf	4
  7188     15E9  1383               	bcf	3,7	;select IRP bank0
  7189     15EA  0800               	movf	0,w
  7190     15EB  00FF               	movwf	btemp+1
  7191     15EC  0A70               	incf	menu_restore_index@menu,w
  7192     15ED  0084               	movwf	4
  7193     15EE  087F               	movf	btemp+1,w
  7194     15EF  0080               	movwf	0
  7195     15F0                     i1l530:
  7196     15F0  0008               	return
  7197     15F1                     __end_of_menu_restore_index:
  7198                           
  7199                           	psect	text32
  7200     0803                     __ptext32:	
  7201 ;; *************** function _menu_inc_index *****************
  7202 ;; Defined at:
  7203 ;;		line 39 in file "src/menu.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  menu            1    wreg     PTR struct .
  7206 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  menu            1    2[COMMON] PTR struct .
  7209 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      char 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7219 ;;      Params:         0       0       0       0       0
  7220 ;;      Locals:         1       0       0       0       0
  7221 ;;      Temps:          2       0       0       0       0
  7222 ;;      Totals:         3       0       0       0       0
  7223 ;;Total ram usage:        3 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_est_estado_menu_principal
  7229 ;;		_est_estado_menu_conf_tempo_amostra
  7230 ;;		_est_estado_menu_conf_quant_sensores
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234     0803                     _menu_inc_index:	
  7235                           ;psect for function _menu_inc_index
  7236                           
  7237                           
  7238                           ;incstack = 0
  7239                           ; Regs used in _menu_inc_index: [wreg-fsr0h+status,2+status,0+btemp+1]
  7240                           ;menu_inc_index@menu stored from wreg
  7241     0803  00F2               	movwf	menu_inc_index@menu
  7242     0804                     i1l5319:
  7243                           
  7244                           ;src/menu.c: 40:   if (menu->index_nav < menu->quant_itens - 1) {
  7245     0804  0872               	movf	menu_inc_index@menu,w
  7246     0805  3E02               	addlw	2
  7247     0806  0084               	movwf	4
  7248     0807  1383               	bcf	3,7	;select IRP bank0
  7249     0808  0800               	movf	0,w
  7250     0809  3EFF               	addlw	255
  7251     080A  00F0               	movwf	??_menu_inc_index
  7252     080B  30FF               	movlw	255
  7253     080C  1803               	skipnc
  7254     080D  3000               	movlw	0
  7255     080E  00F1               	movwf	??_menu_inc_index+1
  7256     080F  0A72               	incf	menu_inc_index@menu,w
  7257     0810  0084               	movwf	4
  7258     0811  0871               	movf	??_menu_inc_index+1,w
  7259     0812  3A80               	xorlw	128
  7260     0813  3C80               	sublw	128
  7261     0814  1D03               	skipz
  7262     0815  2818               	goto	u497_25
  7263     0816  0870               	movf	??_menu_inc_index,w
  7264     0817  0200               	subwf	0,w
  7265     0818                     u497_25:
  7266     0818  1803               	skipnc
  7267     0819  281B               	goto	u497_21
  7268     081A  281C               	goto	u497_20
  7269     081B                     u497_21:
  7270     081B  2827               	goto	i1l5327
  7271     081C                     u497_20:
  7272     081C                     i1l5321:
  7273                           
  7274                           ;src/menu.c: 41:     menu->index_nav++;
  7275     081C  3001               	movlw	1
  7276     081D  00FF               	movwf	btemp+1
  7277     081E  0A72               	incf	menu_inc_index@menu,w
  7278     081F  0084               	movwf	4
  7279     0820  087F               	movf	btemp+1,w
  7280     0821  1383               	bcf	3,7	;select IRP bank0
  7281     0822  0780               	addwf	0,f
  7282     0823                     i1l5323:
  7283                           
  7284                           ;src/menu.c: 42:     return (int8_t)(menu->index_nav);
  7285     0823  0A72               	incf	menu_inc_index@menu,w
  7286     0824  0084               	movwf	4
  7287     0825  0800               	movf	0,w
  7288     0826  2828               	goto	i1l523
  7289     0827                     i1l5327:
  7290                           
  7291                           ;src/menu.c: 44:   return -1;
  7292     0827  30FF               	movlw	255
  7293     0828                     i1l523:
  7294     0828  0008               	return
  7295     0829                     __end_of_menu_inc_index:
  7296                           
  7297                           	psect	text33
  7298     08C3                     __ptext33:	
  7299 ;; *************** function _menu_get_value_active *****************
  7300 ;; Defined at:
  7301 ;;		line 20 in file "src/menu.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  menu            1    wreg     PTR struct .
  7304 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  menu            1    9[COMMON] PTR struct .
  7307 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  2    0[COMMON] unsigned int 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7317 ;;      Params:         2       0       0       0       0
  7318 ;;      Locals:         1       0       0       0       0
  7319 ;;      Temps:          7       0       0       0       0
  7320 ;;      Totals:        10       0       0       0       0
  7321 ;;Total ram usage:       10 bytes
  7322 ;; Hardware stack levels used: 2
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_est_estado_menu_conf_tempo_amostra
  7327 ;;		_est_estado_menu_conf_quant_sensores
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331     08C3                     _menu_get_value_active:	
  7332                           ;psect for function _menu_get_value_active
  7333                           
  7334                           
  7335                           ;incstack = 0
  7336                           ; Regs used in _menu_get_value_active: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7337                           ;menu_get_value_active@menu stored from wreg
  7338     08C3  00F9               	movwf	menu_get_value_active@menu
  7339     08C4                     i1l5335:
  7340                           
  7341                           ;src/menu.c: 21:   return menu->itens[menu->index_active].i_value;
  7342     08C4  3002               	movlw	2
  7343     08C5  00F2               	movwf	??_menu_get_value_active
  7344     08C6  3000               	movlw	0
  7345     08C7  00F3               	movwf	??_menu_get_value_active+1
  7346     08C8  0879               	movf	menu_get_value_active@menu,w
  7347     08C9  3E03               	addlw	3
  7348     08CA  0084               	movwf	4
  7349     08CB  1383               	bcf	3,7	;select IRP bank0
  7350     08CC  0800               	movf	0,w
  7351     08CD  00F4               	movwf	??_menu_get_value_active+2
  7352     08CE  0A84               	incf	4,f
  7353     08CF  0800               	movf	0,w
  7354     08D0  00F5               	movwf	??_menu_get_value_active+3
  7355     08D1  0879               	movf	menu_get_value_active@menu,w
  7356     08D2  0084               	movwf	4
  7357     08D3  0800               	movf	0,w
  7358     08D4  00F6               	movwf	??_menu_get_value_active+4
  7359     08D5  3001               	movlw	1
  7360     08D6                     u498_25:
  7361     08D6  1003               	clrc
  7362     08D7  0DF6               	rlf	??_menu_get_value_active+4,f
  7363     08D8  3EFF               	addlw	-1
  7364     08D9  1D03               	skipz
  7365     08DA  28D6               	goto	u498_25
  7366     08DB  1003               	clrc
  7367     08DC  0D76               	rlf	??_menu_get_value_active+4,w
  7368     08DD  0774               	addwf	??_menu_get_value_active+2,w
  7369     08DE  00F7               	movwf	??_menu_get_value_active+5
  7370     08DF  0875               	movf	??_menu_get_value_active+3,w
  7371     08E0  1803               	skipnc
  7372     08E1  3E01               	addlw	1
  7373     08E2  00F8               	movwf	??_menu_get_value_active+6
  7374     08E3  0872               	movf	??_menu_get_value_active,w
  7375     08E4  0777               	addwf	??_menu_get_value_active+5,w
  7376     08E5  0084               	movwf	4
  7377     08E6  0873               	movf	??_menu_get_value_active+1,w
  7378     08E7  1803               	skipnc
  7379     08E8  0A73               	incf	??_menu_get_value_active+1,w
  7380     08E9  0778               	addwf	??_menu_get_value_active+6,w
  7381     08EA  1283               	bcf	3,5	;RP0=0, select bank0
  7382     08EB  1303               	bcf	3,6	;RP1=0, select bank0
  7383     08EC  00FF               	movwf	btemp+1
  7384     08ED  120A  118A  2300  120A  158A  	fcall	stringtab
  7385     08F2  00F0               	movwf	?_menu_get_value_active
  7386     08F3  120A  118A  2300  120A  158A  	fcall	stringtab
  7387     08F8  00F1               	movwf	?_menu_get_value_active+1
  7388     08F9                     i1l512:
  7389     08F9  0008               	return
  7390     08FA                     __end_of_menu_get_value_active:
  7391                           
  7392                           	psect	text34
  7393     162D                     __ptext34:	
  7394 ;; *************** function _menu_dec_index *****************
  7395 ;; Defined at:
  7396 ;;		line 49 in file "src/menu.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  menu            1    wreg     PTR struct .
  7399 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  menu            1    0[COMMON] PTR struct .
  7402 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      char 
  7405 ;; Registers used:
  7406 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7412 ;;      Params:         0       0       0       0       0
  7413 ;;      Locals:         1       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0
  7415 ;;      Totals:         1       0       0       0       0
  7416 ;;Total ram usage:        1 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_est_estado_menu_principal
  7422 ;;		_est_estado_menu_conf_tempo_amostra
  7423 ;;		_est_estado_menu_conf_quant_sensores
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427     162D                     _menu_dec_index:	
  7428                           ;psect for function _menu_dec_index
  7429                           
  7430                           
  7431                           ;incstack = 0
  7432                           ; Regs used in _menu_dec_index: [wreg-fsr0h+status,2+status,0]
  7433                           ;menu_dec_index@menu stored from wreg
  7434     162D  00F0               	movwf	menu_dec_index@menu
  7435     162E                     i1l5307:
  7436                           
  7437                           ;src/menu.c: 50:   if (menu->index_nav >= 1) {
  7438     162E  0A70               	incf	menu_dec_index@menu,w
  7439     162F  0084               	movwf	4
  7440     1630  1383               	bcf	3,7	;select IRP bank0
  7441     1631  0800               	movf	0,w
  7442     1632  1903               	btfsc	3,2
  7443     1633  2E35               	goto	u496_21
  7444     1634  2E36               	goto	u496_20
  7445     1635                     u496_21:
  7446     1635  2E3E               	goto	i1l5315
  7447     1636                     u496_20:
  7448     1636                     i1l5309:
  7449                           
  7450                           ;src/menu.c: 51:     menu->index_nav--;
  7451     1636  0A70               	incf	menu_dec_index@menu,w
  7452     1637  0084               	movwf	4
  7453     1638  3001               	movlw	1
  7454     1639  0280               	subwf	0,f
  7455     163A                     i1l5311:
  7456                           
  7457                           ;src/menu.c: 52:     return (int8_t)(menu->index_nav);
  7458     163A  0A70               	incf	menu_dec_index@menu,w
  7459     163B  0084               	movwf	4
  7460     163C  0800               	movf	0,w
  7461     163D  2E3F               	goto	i1l527
  7462     163E                     i1l5315:
  7463                           
  7464                           ;src/menu.c: 54:   return -1;
  7465     163E  30FF               	movlw	255
  7466     163F                     i1l527:
  7467     163F  0008               	return
  7468     1640                     __end_of_menu_dec_index:
  7469                           
  7470                           	psect	text35
  7471     15DB                     __ptext35:	
  7472 ;; *************** function _menu_confirma_index *****************
  7473 ;; Defined at:
  7474 ;;		line 65 in file "src/menu.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  menu            1    wreg     PTR struct .
  7477 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;  menu            1    0[COMMON] PTR struct .
  7480 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		wreg, fsr0l, fsr0h, btemp+1
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         0       0       0       0       0
  7491 ;;      Locals:         1       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0
  7493 ;;      Totals:         1       0       0       0       0
  7494 ;;Total ram usage:        1 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_est_estado_menu_principal
  7500 ;;		_est_estado_menu_conf_tempo_amostra
  7501 ;;		_est_estado_menu_conf_quant_sensores
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505     15DB                     _menu_confirma_index:	
  7506                           ;psect for function _menu_confirma_index
  7507                           
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in _menu_confirma_index: [wreg-fsr0h+btemp+1]
  7511                           ;menu_confirma_index@menu stored from wreg
  7512     15DB  00F0               	movwf	menu_confirma_index@menu
  7513     15DC                     i1l5331:
  7514                           
  7515                           ;src/menu.c: 66:   menu->index_active = menu->index_nav;
  7516     15DC  0A70               	incf	menu_confirma_index@menu,w
  7517     15DD  0084               	movwf	4
  7518     15DE  1383               	bcf	3,7	;select IRP bank0
  7519     15DF  0800               	movf	0,w
  7520     15E0  00FF               	movwf	btemp+1
  7521     15E1  0870               	movf	menu_confirma_index@menu,w
  7522     15E2  0084               	movwf	4
  7523     15E3  087F               	movf	btemp+1,w
  7524     15E4  0080               	movwf	0
  7525     15E5                     i1l533:
  7526     15E5  0008               	return
  7527     15E6                     __end_of_menu_confirma_index:
  7528                           
  7529                           	psect	text36
  7530     15CC                     __ptext36:	
  7531 ;; *************** function _est_estado_inicial *****************
  7532 ;; Defined at:
  7533 ;;		line 162 in file "src/estados.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  botao           1    wreg     enum E1289
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  botao           1    0[COMMON] enum E1289
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7547 ;;      Params:         0       0       0       0       0
  7548 ;;      Locals:         0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0
  7550 ;;      Totals:         0       0       0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; Hardware stack levels required when called: 4
  7554 ;; This function calls:
  7555 ;;		_est_executa
  7556 ;; This function is called by:
  7557 ;;		_est_maquina
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561     15CC                     _est_estado_inicial:	
  7562                           ;psect for function _est_estado_inicial
  7563                           
  7564     15CC                     i1l5375:	
  7565                           ;incstack = 0
  7566 ;; hardware stack exceeded
  7567                           ; Regs used in _est_estado_inicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7568                           
  7569                           
  7570                           ;src/estados.c: 163:     est_executa(EST_ESTADO_MENU_PRINCIPAL);
  7571     15CC  3001               	movlw	1
  7572     15CD  120A  118A  203E  160A  118A  	fcall	_est_executa
  7573     15D2                     i1l291:
  7574     15D2  0008               	return
  7575     15D3                     __end_of_est_estado_inicial:
  7576                           
  7577                           	psect	text37
  7578     003E                     __ptext37:	
  7579 ;; *************** function _est_executa *****************
  7580 ;; Defined at:
  7581 ;;		line 384 in file "src/estados.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  novo_estado     1    wreg     enum E1298
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  novo_estado     1   40[BANK0 ] enum E1298
  7586 ;;  i               1   49[BANK0 ] unsigned char 
  7587 ;;  i               1   50[BANK0 ] unsigned char 
  7588 ;;  tmp            17   23[BANK0 ] unsigned char [17]
  7589 ;;  menor           2   47[BANK0 ] unsigned int 
  7590 ;;  temp_int        2   43[BANK0 ] unsigned int 
  7591 ;;  maior           2   41[BANK0 ] unsigned int 
  7592 ;;  index           1   55[BANK0 ] unsigned char 
  7593 ;;  endereco        1   46[BANK0 ] unsigned char 
  7594 ;;  qtd_sens        1   45[BANK0 ] unsigned char 
  7595 ;;  tmp8            1    0        unsigned char 
  7596 ;;  qtd_val         1    0        unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7606 ;;      Params:         0       0       0       0       0
  7607 ;;      Locals:         0      33       0       0       0
  7608 ;;      Temps:          0       4       0       0       0
  7609 ;;      Totals:         0      37       0       0       0
  7610 ;;Total ram usage:       37 bytes
  7611 ;; Hardware stack levels used: 1
  7612 ;; Hardware stack levels required when called: 3
  7613 ;; This function calls:
  7614 ;;		___bmul
  7615 ;;		___lwdiv
  7616 ;;		___lwmod
  7617 ;;		_eeprom_le_word
  7618 ;;		_lcd_clear
  7619 ;;		_lcd_goto_sensor
  7620 ;;		_menu_get_index_nav
  7621 ;;		_sprintf
  7622 ;;		i1_eeprom_grava_word
  7623 ;;		i1_eeprom_write
  7624 ;;		i1_lcd_goto
  7625 ;;		i1_lcd_puts
  7626 ;; This function is called by:
  7627 ;;		_est_estado_inicial
  7628 ;;		_est_estado_menu_principal
  7629 ;;		_est_estado_menu_limpar
  7630 ;;		_est_estado_monitora
  7631 ;;		_est_estado_ver_todos
  7632 ;;		_est_estado_mostra_max_min
  7633 ;;		_est_estado_menu_conf_tempo_amostra
  7634 ;;		_est_estado_menu_conf_quant_sensores
  7635 ;;		_est_estado_monitora_grava
  7636 ;;		_est_estado_enviar_dados
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640     003E                     _est_executa:	
  7641                           ;psect for function _est_executa
  7642                           
  7643                           
  7644                           ;incstack = 0
  7645 ;; hardware stack exceeded
  7646                           ; Regs used in _est_executa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7647                           ;est_executa@novo_estado stored from wreg
  7648     003E  1283               	bcf	3,5	;RP0=0, select bank0
  7649     003F  1303               	bcf	3,6	;RP1=0, select bank0
  7650     0040  00C8               	movwf	est_executa@novo_estado
  7651     0041                     i1l5193:
  7652                           
  7653                           ;src/estados.c: 386:   uint16_t maior, menor, temp_int;;src/estados.c: 387:   uint8_t en
      +                          dereco, qtd_val, qtd_sens;;src/estados.c: 388:   uint8_t index;;src/estados.c: 393:   ch
      +                          ar tmp[17] = {0};
  7654     0041  3037               	movlw	est_executa@tmp& (0+255)
  7655     0042  0084               	movwf	4
  7656     0043  30A0               	movlw	low est_executa@F1430
  7657     0044  00B3               	movwf	??_est_executa
  7658     0045  0804               	movf	4,w
  7659     0046  00B4               	movwf	??_est_executa+1
  7660     0047  3011               	movlw	17
  7661     0048  00B5               	movwf	??_est_executa+2
  7662     0049                     u488_20:
  7663     0049  0833               	movf	??_est_executa,w
  7664     004A  0084               	movwf	4
  7665     004B  1383               	bcf	3,7	;select IRP bank1
  7666     004C  0800               	movf	0,w
  7667     004D  00B6               	movwf	??_est_executa+3
  7668     004E  0AB3               	incf	??_est_executa,f
  7669     004F  0834               	movf	??_est_executa+1,w
  7670     0050  0084               	movwf	4
  7671     0051  0836               	movf	??_est_executa+3,w
  7672     0052  0080               	movwf	0
  7673     0053  0AB4               	incf	??_est_executa+1,f
  7674     0054  0BB5               	decfsz	??_est_executa+2,f
  7675     0055  2849               	goto	u488_20
  7676                           
  7677                           ;src/estados.c: 394:   uint8_t tmp8;;src/estados.c: 397:   switch (novo_estado) {
  7678     0056  2AB4               	goto	i1l5297
  7679     0057                     i1l5195:
  7680                           
  7681                           ;src/estados.c: 401:       lcd_clear();
  7682     0057  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  7683     005C                     i1l5197:
  7684                           
  7685                           ;src/estados.c: 402:       index = menu_get_index_nav(&menu_principal);
  7686     005C  30D9               	movlw	(low (_menu_principal| 0))& (0+255)
  7687     005D  160A  118A  25C6  120A  118A  	fcall	_menu_get_index_nav
  7688     0062  1283               	bcf	3,5	;RP0=0, select bank0
  7689     0063  1303               	bcf	3,6	;RP1=0, select bank0
  7690     0064  00D7               	movwf	est_executa@index
  7691     0065                     i1l5199:
  7692                           
  7693                           ;src/estados.c: 403:       lcd_puts(menu_principal.itens[index].str_text);
  7694     0065  0857               	movf	est_executa@index,w
  7695     0066  00B3               	movwf	??_est_executa
  7696     0067  3001               	movlw	1
  7697     0068                     u489_25:
  7698     0068  1003               	clrc
  7699     0069  0DB3               	rlf	??_est_executa,f
  7700     006A  3EFF               	addlw	-1
  7701     006B  1D03               	skipz
  7702     006C  2868               	goto	u489_25
  7703     006D  1003               	clrc
  7704     006E  0D33               	rlf	??_est_executa,w
  7705     006F  1683               	bsf	3,5	;RP0=1, select bank1
  7706     0070  1303               	bcf	3,6	;RP1=0, select bank1
  7707     0071  075C               	addwf	(low ((_menu_principal| 0+3)))^(0+128),w
  7708     0072  0084               	movwf	4
  7709     0073  085D               	movf	((low ((_menu_principal| 0+3))+1))^(0+128),w
  7710     0074  1803               	skipnc
  7711     0075  0A5D               	incf	((low ((_menu_principal| 0+3))+1))^(0+128),w
  7712     0076  1283               	bcf	3,5	;RP0=0, select bank0
  7713     0077  1303               	bcf	3,6	;RP1=0, select bank0
  7714     0078  00FF               	movwf	btemp+1
  7715     0079  120A  118A  2300  120A  118A  	fcall	stringtab
  7716     007E  00B4               	movwf	??_est_executa+1
  7717     007F  120A  118A  2300  120A  118A  	fcall	stringtab
  7718     0084  00B5               	movwf	??_est_executa+2
  7719     0085  0834               	movf	??_est_executa+1,w
  7720     0086  00F2               	movwf	i1lcd_puts@str
  7721     0087  0835               	movf	??_est_executa+2,w
  7722     0088  00F3               	movwf	i1lcd_puts@str+1
  7723     0089  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  7724                           
  7725                           ;src/estados.c: 404:       break;
  7726     008E  2AD6               	goto	i1l5299
  7727     008F                     i1l374:	
  7728                           ;src/estados.c: 406:     case EST_ESTADO_MONITORA:
  7729                           
  7730                           
  7731                           ;src/estados.c: 408:       INTCONbits.T0IE = 1;
  7732     008F  168B               	bsf	11,5	;volatile
  7733                           
  7734                           ;src/estados.c: 409:       break;
  7735     0090  2AD6               	goto	i1l5299
  7736     0091                     i1l375:	
  7737                           ;src/estados.c: 411:     case EST_ESTADO_MONITORA_GRAVA:
  7738                           
  7739                           
  7740                           ;src/estados.c: 413:       INTCONbits.T0IE = 1;
  7741     0091  168B               	bsf	11,5	;volatile
  7742                           
  7743                           ;src/estados.c: 414:       break;
  7744     0092  2AD6               	goto	i1l5299
  7745     0093                     i1l5201:
  7746                           
  7747                           ;src/estados.c: 419:       lcd_clear();
  7748     0093  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  7749     0098                     i1l5203:
  7750                           
  7751                           ;src/estados.c: 420:       if (adcon_quant_amostras_gravadas == 0) {
  7752     0098  1283               	bcf	3,5	;RP0=0, select bank0
  7753     0099  1303               	bcf	3,6	;RP1=0, select bank0
  7754     009A  086A               	movf	_adcon_quant_amostras_gravadas,w
  7755     009B  1D03               	btfss	3,2
  7756     009C  289E               	goto	u490_21
  7757     009D  289F               	goto	u490_20
  7758     009E                     u490_21:
  7759     009E  28A9               	goto	i1l5207
  7760     009F                     u490_20:
  7761     009F                     i1l5205:
  7762                           
  7763                           ;src/estados.c: 421:         lcd_puts("Nenhum Dado");
  7764     009F  303F               	movlw	low (STR_21| (0+32768))
  7765     00A0  00F2               	movwf	i1lcd_puts@str
  7766     00A1  3084               	movlw	high (STR_21| (0+32768))
  7767     00A2  00F3               	movwf	i1lcd_puts@str+1
  7768     00A3  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  7769                           
  7770                           ;src/estados.c: 422:       }
  7771     00A8  2AD6               	goto	i1l5299
  7772     00A9                     i1l5207:
  7773                           
  7774                           ;src/estados.c: 425:         qtd_sens = cfg_quant_sensores_atual;
  7775     00A9  086B               	movf	_cfg_quant_sensores_atual,w
  7776     00AA  00CD               	movwf	est_executa@qtd_sens
  7777     00AB                     i1l5209:
  7778                           
  7779                           ;src/estados.c: 426:         endereco = 0x10 + (est_ver_todos_index_amostra * qtd_sens *
      +                           2);
  7780     00AB  084D               	movf	est_executa@qtd_sens,w
  7781     00AC  00F0               	movwf	___bmul@multiplicand
  7782     00AD  0867               	movf	_est_ver_todos_index_amostra,w
  7783     00AE  160A  118A  2640  120A  118A  	fcall	___bmul
  7784     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  7785     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  7786     00B5  00B3               	movwf	??_est_executa
  7787     00B6  0733               	addwf	??_est_executa,w
  7788     00B7  3E10               	addlw	16
  7789     00B8  00CE               	movwf	est_executa@endereco
  7790     00B9                     i1l5211:
  7791                           
  7792                           ;src/estados.c: 428:         for (uint8_t i = 0; i < qtd_sens; i++) {
  7793     00B9  01D1               	clrf	est_executa@i
  7794     00BA  2920               	goto	i1l5225
  7795     00BB                     i1l5213:
  7796                           
  7797                           ;src/estados.c: 429:             temp_int = eeprom_le_word(endereco);
  7798     00BB  084E               	movf	est_executa@endereco,w
  7799     00BC  160A  118A  2728  120A  118A  	fcall	_eeprom_le_word
  7800     00C1  0872               	movf	?_eeprom_le_word+1,w
  7801     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  7802     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  7803     00C4  00CC               	movwf	est_executa@temp_int+1
  7804     00C5  0871               	movf	?_eeprom_le_word,w
  7805     00C6  00CB               	movwf	est_executa@temp_int
  7806                           
  7807                           ;src/estados.c: 430:             sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp_int
      +                           % 10);
  7808     00C7  300A               	movlw	10
  7809     00C8  00F0               	movwf	___lwdiv@divisor
  7810     00C9  3000               	movlw	0
  7811     00CA  00F1               	movwf	___lwdiv@divisor+1
  7812     00CB  084C               	movf	est_executa@temp_int+1,w
  7813     00CC  00F3               	movwf	___lwdiv@dividend+1
  7814     00CD  084B               	movf	est_executa@temp_int,w
  7815     00CE  00F2               	movwf	___lwdiv@dividend
  7816     00CF  120A  158A  21E7  120A  118A  	fcall	___lwdiv
  7817     00D4  0871               	movf	?___lwdiv+1,w
  7818     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  7819     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  7820     00D7  00D4               	movwf	_est_executa$1904+1
  7821     00D8  0870               	movf	?___lwdiv,w
  7822     00D9  00D3               	movwf	_est_executa$1904
  7823                           
  7824                           ;src/estados.c: 430:             sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp_int
      +                           % 10);
  7825     00DA  300A               	movlw	10
  7826     00DB  00F7               	movwf	___lwmod@divisor
  7827     00DC  3000               	movlw	0
  7828     00DD  00F8               	movwf	___lwmod@divisor+1
  7829     00DE  084C               	movf	est_executa@temp_int+1,w
  7830     00DF  00FA               	movwf	___lwmod@dividend+1
  7831     00E0  084B               	movf	est_executa@temp_int,w
  7832     00E1  00F9               	movwf	___lwmod@dividend
  7833     00E2  120A  158A  2131  120A  118A  	fcall	___lwmod
  7834     00E7  0878               	movf	?___lwmod+1,w
  7835     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  7836     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  7837     00EA  00D6               	movwf	_est_executa$1905+1
  7838     00EB  0877               	movf	?___lwmod,w
  7839     00EC  00D5               	movwf	_est_executa$1905
  7840     00ED                     i1l5215:
  7841                           
  7842                           ;src/estados.c: 430:             sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp_int
      +                           % 10);
  7843     00ED  30B3               	movlw	low (STR_2| (0+32768))
  7844     00EE  00A0               	movwf	sprintf@f
  7845     00EF  3084               	movlw	high (STR_2| (0+32768))
  7846     00F0  00A1               	movwf	sprintf@f+1
  7847     00F1  0851               	movf	est_executa@i,w
  7848     00F2  3E01               	addlw	1
  7849     00F3  00A2               	movwf	?_sprintf+2
  7850     00F4  3000               	movlw	0
  7851     00F5  1803               	skipnc
  7852     00F6  3001               	movlw	1
  7853     00F7  00A3               	movwf	?_sprintf+3
  7854     00F8  0854               	movf	_est_executa$1904+1,w
  7855     00F9  00A5               	movwf	?_sprintf+5
  7856     00FA  0853               	movf	_est_executa$1904,w
  7857     00FB  00A4               	movwf	?_sprintf+4
  7858     00FC  0856               	movf	_est_executa$1905+1,w
  7859     00FD  00A7               	movwf	?_sprintf+7
  7860     00FE  0855               	movf	_est_executa$1905,w
  7861     00FF  00A6               	movwf	?_sprintf+6
  7862     0100  3037               	movlw	(low (est_executa@tmp| 0))& (0+255)
  7863     0101  120A  118A  263D  120A  118A  	fcall	_sprintf
  7864     0106                     i1l5217:
  7865                           
  7866                           ;src/estados.c: 431:             lcd_goto_sensor(i);
  7867     0106  1283               	bcf	3,5	;RP0=0, select bank0
  7868     0107  1303               	bcf	3,6	;RP1=0, select bank0
  7869     0108  0851               	movf	est_executa@i,w
  7870     0109  120A  118A  22DB  120A  118A  	fcall	_lcd_goto_sensor
  7871     010E                     i1l5219:
  7872                           
  7873                           ;src/estados.c: 433:             lcd_puts(tmp);
  7874     010E  3037               	movlw	(low (est_executa@tmp| 0))& (0+255)
  7875     010F  00F2               	movwf	i1lcd_puts@str
  7876     0110  3000               	movlw	0
  7877     0111  00F3               	movwf	i1lcd_puts@str+1
  7878     0112  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  7879     0117                     i1l5221:
  7880                           
  7881                           ;src/estados.c: 434:             endereco = endereco + 2;
  7882     0117  1283               	bcf	3,5	;RP0=0, select bank0
  7883     0118  1303               	bcf	3,6	;RP1=0, select bank0
  7884     0119  084E               	movf	est_executa@endereco,w
  7885     011A  3E02               	addlw	2
  7886     011B  00CE               	movwf	est_executa@endereco
  7887     011C                     i1l5223:
  7888                           
  7889                           ;src/estados.c: 435:         }
  7890     011C  3001               	movlw	1
  7891     011D  00FF               	movwf	btemp+1
  7892     011E  087F               	movf	btemp+1,w
  7893     011F  07D1               	addwf	est_executa@i,f
  7894     0120                     i1l5225:
  7895     0120  084D               	movf	est_executa@qtd_sens,w
  7896     0121  0251               	subwf	est_executa@i,w
  7897     0122  1C03               	skipc
  7898     0123  2925               	goto	u491_21
  7899     0124  2926               	goto	u491_20
  7900     0125                     u491_21:
  7901     0125  28BB               	goto	i1l5213
  7902     0126                     u491_20:
  7903     0126  2AD6               	goto	i1l5299
  7904     0127                     i1l5227:
  7905                           
  7906                           ;src/estados.c: 441:       lcd_clear();
  7907     0127  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  7908     012C                     i1l5229:
  7909                           
  7910                           ;src/estados.c: 442:       maior = eeprom_le_word(0x06);
  7911     012C  3006               	movlw	6
  7912     012D  160A  118A  2728  120A  118A  	fcall	_eeprom_le_word
  7913     0132  0872               	movf	?_eeprom_le_word+1,w
  7914     0133  1283               	bcf	3,5	;RP0=0, select bank0
  7915     0134  1303               	bcf	3,6	;RP1=0, select bank0
  7916     0135  00CA               	movwf	est_executa@maior+1
  7917     0136  0871               	movf	?_eeprom_le_word,w
  7918     0137  00C9               	movwf	est_executa@maior
  7919     0138                     i1l5231:
  7920                           
  7921                           ;src/estados.c: 443:       menor = eeprom_le_word(0x04);
  7922     0138  3004               	movlw	4
  7923     0139  160A  118A  2728  120A  118A  	fcall	_eeprom_le_word
  7924     013E  0872               	movf	?_eeprom_le_word+1,w
  7925     013F  1283               	bcf	3,5	;RP0=0, select bank0
  7926     0140  1303               	bcf	3,6	;RP1=0, select bank0
  7927     0141  00D0               	movwf	est_executa@menor+1
  7928     0142  0871               	movf	?_eeprom_le_word,w
  7929     0143  00CF               	movwf	est_executa@menor
  7930     0144                     i1l5233:
  7931                           
  7932                           ;src/estados.c: 444:       if (menor == 0xFFFF) {
  7933     0144  0A4F               	incf	est_executa@menor,w
  7934     0145  1D03               	skipz
  7935     0146  294B               	goto	u492_21
  7936     0147  0A50               	incf	est_executa@menor+1,w
  7937     0148  1D03               	btfss	3,2
  7938     0149  294B               	goto	u492_21
  7939     014A  294C               	goto	u492_20
  7940     014B                     u492_21:
  7941     014B  2956               	goto	i1l5237
  7942     014C                     u492_20:
  7943     014C                     i1l5235:
  7944                           
  7945                           ;src/estados.c: 445:             lcd_puts("Nenhum Dado");
  7946     014C  303F               	movlw	low (STR_21| (0+32768))
  7947     014D  00F2               	movwf	i1lcd_puts@str
  7948     014E  3084               	movlw	high (STR_21| (0+32768))
  7949     014F  00F3               	movwf	i1lcd_puts@str+1
  7950     0150  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  7951                           
  7952                           ;src/estados.c: 446:       }
  7953     0155  2AD6               	goto	i1l5299
  7954     0156                     i1l5237:
  7955                           
  7956                           ;src/estados.c: 448:         sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7957     0156  300A               	movlw	10
  7958     0157  00F0               	movwf	___lwdiv@divisor
  7959     0158  3000               	movlw	0
  7960     0159  00F1               	movwf	___lwdiv@divisor+1
  7961     015A  084A               	movf	est_executa@maior+1,w
  7962     015B  00F3               	movwf	___lwdiv@dividend+1
  7963     015C  0849               	movf	est_executa@maior,w
  7964     015D  00F2               	movwf	___lwdiv@dividend
  7965     015E  120A  158A  21E7  120A  118A  	fcall	___lwdiv
  7966     0163  0871               	movf	?___lwdiv+1,w
  7967     0164  1283               	bcf	3,5	;RP0=0, select bank0
  7968     0165  1303               	bcf	3,6	;RP1=0, select bank0
  7969     0166  00D4               	movwf	_est_executa$1904+1
  7970     0167  0870               	movf	?___lwdiv,w
  7971     0168  00D3               	movwf	_est_executa$1904
  7972                           
  7973                           ;src/estados.c: 448:         sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7974     0169  300A               	movlw	10
  7975     016A  00F7               	movwf	___lwmod@divisor
  7976     016B  3000               	movlw	0
  7977     016C  00F8               	movwf	___lwmod@divisor+1
  7978     016D  084A               	movf	est_executa@maior+1,w
  7979     016E  00FA               	movwf	___lwmod@dividend+1
  7980     016F  0849               	movf	est_executa@maior,w
  7981     0170  00F9               	movwf	___lwmod@dividend
  7982     0171  120A  158A  2131  120A  118A  	fcall	___lwmod
  7983     0176  0878               	movf	?___lwmod+1,w
  7984     0177  1283               	bcf	3,5	;RP0=0, select bank0
  7985     0178  1303               	bcf	3,6	;RP1=0, select bank0
  7986     0179  00D6               	movwf	_est_executa$1905+1
  7987     017A  0877               	movf	?___lwmod,w
  7988     017B  00D5               	movwf	_est_executa$1905
  7989     017C                     i1l5239:
  7990                           
  7991                           ;src/estados.c: 448:         sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  7992     017C  308D               	movlw	low (STR_24| (0+32768))
  7993     017D  00A0               	movwf	sprintf@f
  7994     017E  3084               	movlw	high (STR_24| (0+32768))
  7995     017F  00A1               	movwf	sprintf@f+1
  7996     0180  0854               	movf	_est_executa$1904+1,w
  7997     0181  00A3               	movwf	?_sprintf+3
  7998     0182  0853               	movf	_est_executa$1904,w
  7999     0183  00A2               	movwf	?_sprintf+2
  8000     0184  0856               	movf	_est_executa$1905+1,w
  8001     0185  00A5               	movwf	?_sprintf+5
  8002     0186  0855               	movf	_est_executa$1905,w
  8003     0187  00A4               	movwf	?_sprintf+4
  8004     0188  3037               	movlw	(low (est_executa@tmp| 0))& (0+255)
  8005     0189  120A  118A  263D  120A  118A  	fcall	_sprintf
  8006     018E                     i1l5241:
  8007                           
  8008                           ;src/estados.c: 449:         lcd_puts(tmp);
  8009     018E  3037               	movlw	(low (est_executa@tmp| 0))& (0+255)
  8010     018F  00F2               	movwf	i1lcd_puts@str
  8011     0190  3000               	movlw	0
  8012     0191  00F3               	movwf	i1lcd_puts@str+1
  8013     0192  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  8014     0197                     i1l5243:
  8015                           
  8016                           ;src/estados.c: 450:         lcd_goto(2, 0);
  8017     0197  01F2               	clrf	i1lcd_goto@coluna
  8018     0198  3002               	movlw	2
  8019     0199  160A  118A  27D2  120A  118A  	fcall	i1_lcd_goto
  8020     019E                     i1l5245:
  8021                           
  8022                           ;src/estados.c: 451:         sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  8023     019E  300A               	movlw	10
  8024     019F  00F0               	movwf	___lwdiv@divisor
  8025     01A0  3000               	movlw	0
  8026     01A1  00F1               	movwf	___lwdiv@divisor+1
  8027     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  8028     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  8029     01A4  0850               	movf	est_executa@menor+1,w
  8030     01A5  00F3               	movwf	___lwdiv@dividend+1
  8031     01A6  084F               	movf	est_executa@menor,w
  8032     01A7  00F2               	movwf	___lwdiv@dividend
  8033     01A8  120A  158A  21E7  120A  118A  	fcall	___lwdiv
  8034     01AD  0871               	movf	?___lwdiv+1,w
  8035     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  8036     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  8037     01B0  00D4               	movwf	_est_executa$1904+1
  8038     01B1  0870               	movf	?___lwdiv,w
  8039     01B2  00D3               	movwf	_est_executa$1904
  8040     01B3                     i1l5247:
  8041                           
  8042                           ;src/estados.c: 451:         sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  8043     01B3  300A               	movlw	10
  8044     01B4  00F7               	movwf	___lwmod@divisor
  8045     01B5  3000               	movlw	0
  8046     01B6  00F8               	movwf	___lwmod@divisor+1
  8047     01B7  0850               	movf	est_executa@menor+1,w
  8048     01B8  00FA               	movwf	___lwmod@dividend+1
  8049     01B9  084F               	movf	est_executa@menor,w
  8050     01BA  00F9               	movwf	___lwmod@dividend
  8051     01BB  120A  158A  2131  120A  118A  	fcall	___lwmod
  8052     01C0  0878               	movf	?___lwmod+1,w
  8053     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  8054     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  8055     01C3  00D6               	movwf	_est_executa$1905+1
  8056     01C4  0877               	movf	?___lwmod,w
  8057     01C5  00D5               	movwf	_est_executa$1905
  8058     01C6                     i1l5249:
  8059                           
  8060                           ;src/estados.c: 451:         sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  8061     01C6  3083               	movlw	low (STR_25| (0+32768))
  8062     01C7  00A0               	movwf	sprintf@f
  8063     01C8  3084               	movlw	high (STR_25| (0+32768))
  8064     01C9  00A1               	movwf	sprintf@f+1
  8065     01CA  0854               	movf	_est_executa$1904+1,w
  8066     01CB  00A3               	movwf	?_sprintf+3
  8067     01CC  0853               	movf	_est_executa$1904,w
  8068     01CD  00A2               	movwf	?_sprintf+2
  8069     01CE  0856               	movf	_est_executa$1905+1,w
  8070     01CF  00A5               	movwf	?_sprintf+5
  8071     01D0  0855               	movf	_est_executa$1905,w
  8072     01D1  00A4               	movwf	?_sprintf+4
  8073     01D2  3037               	movlw	(low (est_executa@tmp| 0))& (0+255)
  8074     01D3  120A  118A  263D  120A  118A  	fcall	_sprintf
  8075     01D8                     i1l5251:
  8076                           
  8077                           ;src/estados.c: 452:         lcd_puts(tmp);
  8078     01D8  3037               	movlw	(low (est_executa@tmp| 0))& (0+255)
  8079     01D9  00F2               	movwf	i1lcd_puts@str
  8080     01DA  3000               	movlw	0
  8081     01DB  00F3               	movwf	i1lcd_puts@str+1
  8082     01DC  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  8083     01E1  2AD6               	goto	i1l5299
  8084     01E2                     i1l5253:
  8085                           
  8086                           ;src/estados.c: 457:       lcd_clear();
  8087     01E2  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  8088     01E7                     i1l5255:
  8089                           
  8090                           ;src/estados.c: 458:       lcd_puts("Limpando...");
  8091     01E7  3027               	movlw	low (STR_26| (0+32768))
  8092     01E8  00F2               	movwf	i1lcd_puts@str
  8093     01E9  3084               	movlw	high (STR_26| (0+32768))
  8094     01EA  00F3               	movwf	i1lcd_puts@str+1
  8095     01EB  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  8096     01F0                     i1l5257:
  8097                           
  8098                           ;src/estados.c: 460:       eeprom_write(0x00, 1);
  8099     01F0  01F0               	clrf	i1eeprom_write@value
  8100     01F1  0AF0               	incf	i1eeprom_write@value,f
  8101     01F2  3000               	movlw	0
  8102     01F3  160A  118A  2778  120A  118A  	fcall	i1_eeprom_write
  8103     01F8                     i1l5259:
  8104                           
  8105                           ;src/estados.c: 461:       eeprom_write(0x08, 0);
  8106     01F8  01F0               	clrf	i1eeprom_write@value
  8107     01F9  3008               	movlw	8
  8108     01FA  160A  118A  2778  120A  118A  	fcall	i1_eeprom_write
  8109     01FF                     i1l5261:
  8110                           
  8111                           ;src/estados.c: 462:       eeprom_grava_word(0x02, 18);
  8112     01FF  3012               	movlw	18
  8113     0200  00F2               	movwf	i1eeprom_grava_word@dado
  8114     0201  3000               	movlw	0
  8115     0202  00F3               	movwf	i1eeprom_grava_word@dado+1
  8116     0203  3002               	movlw	2
  8117     0204  160A  118A  261A  120A  118A  	fcall	i1_eeprom_grava_word
  8118     0209                     i1l5263:
  8119                           
  8120                           ;src/estados.c: 463:       eeprom_grava_word(0x04, 0xFFFF);
  8121     0209  30FF               	movlw	255
  8122     020A  00F2               	movwf	i1eeprom_grava_word@dado
  8123     020B  30FF               	movlw	255
  8124     020C  00F3               	movwf	i1eeprom_grava_word@dado+1
  8125     020D  3004               	movlw	4
  8126     020E  160A  118A  261A  120A  118A  	fcall	i1_eeprom_grava_word
  8127     0213                     i1l5265:
  8128                           
  8129                           ;src/estados.c: 464:       eeprom_grava_word(0x06, 0);
  8130     0213  3000               	movlw	0
  8131     0214  00F2               	movwf	i1eeprom_grava_word@dado
  8132     0215  00F3               	movwf	i1eeprom_grava_word@dado+1
  8133     0216  3006               	movlw	6
  8134     0217  160A  118A  261A  120A  118A  	fcall	i1_eeprom_grava_word
  8135     021C                     i1l5267:
  8136                           
  8137                           ;src/estados.c: 465:       for (uint8_t i = 0; i < 120 * 2; i++) {
  8138     021C  1283               	bcf	3,5	;RP0=0, select bank0
  8139     021D  1303               	bcf	3,6	;RP1=0, select bank0
  8140     021E  01D2               	clrf	est_executa@i_569
  8141     021F                     i1l5273:
  8142                           
  8143                           ;src/estados.c: 466:         eeprom_write(i + 0x10, 0);
  8144     021F  01F0               	clrf	i1eeprom_write@value
  8145     0220  0852               	movf	est_executa@i_569,w
  8146     0221  3E10               	addlw	16
  8147     0222  160A  118A  2778  120A  118A  	fcall	i1_eeprom_write
  8148     0227                     i1l5275:
  8149                           
  8150                           ;src/estados.c: 467:       }
  8151     0227  3001               	movlw	1
  8152     0228  00FF               	movwf	btemp+1
  8153     0229  087F               	movf	btemp+1,w
  8154     022A  1283               	bcf	3,5	;RP0=0, select bank0
  8155     022B  1303               	bcf	3,6	;RP1=0, select bank0
  8156     022C  07D2               	addwf	est_executa@i_569,f
  8157     022D                     i1l5277:
  8158     022D  30F0               	movlw	240
  8159     022E  0252               	subwf	est_executa@i_569,w
  8160     022F  1C03               	skipc
  8161     0230  2A32               	goto	u493_21
  8162     0231  2A33               	goto	u493_20
  8163     0232                     u493_21:
  8164     0232  2A1F               	goto	i1l5273
  8165     0233                     u493_20:
  8166     0233                     i1l5279:
  8167                           
  8168                           ;src/estados.c: 468:       lcd_clear();
  8169     0233  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  8170     0238                     i1l5281:
  8171                           
  8172                           ;src/estados.c: 469:       lcd_puts("Tudo Limpo.");
  8173     0238  3033               	movlw	low (STR_27| (0+32768))
  8174     0239  00F2               	movwf	i1lcd_puts@str
  8175     023A  3084               	movlw	high (STR_27| (0+32768))
  8176     023B  00F3               	movwf	i1lcd_puts@str+1
  8177     023C  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  8178                           
  8179                           ;src/estados.c: 470:       break;
  8180     0241  2AD6               	goto	i1l5299
  8181     0242                     i1l5283:
  8182                           
  8183                           ;src/estados.c: 474:       index = menu_get_index_nav(&menu_cfg_tempo_amostra);
  8184     0242  30CF               	movlw	(low (_menu_cfg_tempo_amostra| 0))& (0+255)
  8185     0243  160A  118A  25C6  120A  118A  	fcall	_menu_get_index_nav
  8186     0248  1283               	bcf	3,5	;RP0=0, select bank0
  8187     0249  1303               	bcf	3,6	;RP1=0, select bank0
  8188     024A  00D7               	movwf	est_executa@index
  8189     024B                     i1l5285:
  8190                           
  8191                           ;src/estados.c: 475:       lcd_clear();
  8192     024B  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  8193     0250                     i1l5287:
  8194                           
  8195                           ;src/estados.c: 476:       lcd_puts(menu_cfg_tempo_amostra.itens[index].str_text);
  8196     0250  1283               	bcf	3,5	;RP0=0, select bank0
  8197     0251  1303               	bcf	3,6	;RP1=0, select bank0
  8198     0252  0857               	movf	est_executa@index,w
  8199     0253  00B3               	movwf	??_est_executa
  8200     0254  3001               	movlw	1
  8201     0255                     u494_25:
  8202     0255  1003               	clrc
  8203     0256  0DB3               	rlf	??_est_executa,f
  8204     0257  3EFF               	addlw	-1
  8205     0258  1D03               	skipz
  8206     0259  2A55               	goto	u494_25
  8207     025A  1003               	clrc
  8208     025B  0D33               	rlf	??_est_executa,w
  8209     025C  1683               	bsf	3,5	;RP0=1, select bank1
  8210     025D  1303               	bcf	3,6	;RP1=0, select bank1
  8211     025E  0752               	addwf	(low ((_menu_cfg_tempo_amostra| 0+3)))^(0+128),w
  8212     025F  0084               	movwf	4
  8213     0260  0853               	movf	((low ((_menu_cfg_tempo_amostra| 0+3))+1))^(0+128),w
  8214     0261  1803               	skipnc
  8215     0262  0A53               	incf	((low ((_menu_cfg_tempo_amostra| 0+3))+1))^(0+128),w
  8216     0263  1283               	bcf	3,5	;RP0=0, select bank0
  8217     0264  1303               	bcf	3,6	;RP1=0, select bank0
  8218     0265  00FF               	movwf	btemp+1
  8219     0266  120A  118A  2300  120A  118A  	fcall	stringtab
  8220     026B  00B4               	movwf	??_est_executa+1
  8221     026C  120A  118A  2300  120A  118A  	fcall	stringtab
  8222     0271  00B5               	movwf	??_est_executa+2
  8223     0272  0834               	movf	??_est_executa+1,w
  8224     0273  00F2               	movwf	i1lcd_puts@str
  8225     0274  0835               	movf	??_est_executa+2,w
  8226     0275  00F3               	movwf	i1lcd_puts@str+1
  8227     0276  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  8228                           
  8229                           ;src/estados.c: 477:       break;
  8230     027B  2AD6               	goto	i1l5299
  8231     027C                     i1l5289:
  8232                           
  8233                           ;src/estados.c: 481:       lcd_clear();
  8234     027C  160A  118A  269B  120A  118A  	fcall	_lcd_clear
  8235     0281                     i1l5291:
  8236                           
  8237                           ;src/estados.c: 482:       index = menu_get_index_nav(&menu_cfg_quant_sensores);
  8238     0281  30D4               	movlw	(low (_menu_cfg_quant_sensores| 0))& (0+255)
  8239     0282  160A  118A  25C6  120A  118A  	fcall	_menu_get_index_nav
  8240     0287  1283               	bcf	3,5	;RP0=0, select bank0
  8241     0288  1303               	bcf	3,6	;RP1=0, select bank0
  8242     0289  00D7               	movwf	est_executa@index
  8243     028A                     i1l5293:
  8244                           
  8245                           ;src/estados.c: 483:       lcd_puts(menu_cfg_quant_sensores.itens[index].str_text);
  8246     028A  0857               	movf	est_executa@index,w
  8247     028B  00B3               	movwf	??_est_executa
  8248     028C  3001               	movlw	1
  8249     028D                     u495_25:
  8250     028D  1003               	clrc
  8251     028E  0DB3               	rlf	??_est_executa,f
  8252     028F  3EFF               	addlw	-1
  8253     0290  1D03               	skipz
  8254     0291  2A8D               	goto	u495_25
  8255     0292  1003               	clrc
  8256     0293  0D33               	rlf	??_est_executa,w
  8257     0294  1683               	bsf	3,5	;RP0=1, select bank1
  8258     0295  1303               	bcf	3,6	;RP1=0, select bank1
  8259     0296  0757               	addwf	(low ((_menu_cfg_quant_sensores| 0+3)))^(0+128),w
  8260     0297  0084               	movwf	4
  8261     0298  0858               	movf	((low ((_menu_cfg_quant_sensores| 0+3))+1))^(0+128),w
  8262     0299  1803               	skipnc
  8263     029A  0A58               	incf	((low ((_menu_cfg_quant_sensores| 0+3))+1))^(0+128),w
  8264     029B  1283               	bcf	3,5	;RP0=0, select bank0
  8265     029C  1303               	bcf	3,6	;RP1=0, select bank0
  8266     029D  00FF               	movwf	btemp+1
  8267     029E  120A  118A  2300  120A  118A  	fcall	stringtab
  8268     02A3  00B4               	movwf	??_est_executa+1
  8269     02A4  120A  118A  2300  120A  118A  	fcall	stringtab
  8270     02A9  00B5               	movwf	??_est_executa+2
  8271     02AA  0834               	movf	??_est_executa+1,w
  8272     02AB  00F2               	movwf	i1lcd_puts@str
  8273     02AC  0835               	movf	??_est_executa+2,w
  8274     02AD  00F3               	movwf	i1lcd_puts@str+1
  8275     02AE  120A  158A  222B  120A  118A  	fcall	i1_lcd_puts
  8276                           
  8277                           ;src/estados.c: 484:       break;
  8278     02B3  2AD6               	goto	i1l5299
  8279     02B4                     i1l5297:
  8280     02B4  0848               	movf	est_executa@novo_estado,w
  8281     02B5  00B3               	movwf	??_est_executa
  8282     02B6  01B4               	clrf	??_est_executa+1
  8283                           
  8284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8285                           ; Switch size 1, requested type "simple"
  8286                           ; Number of cases is 1, Range of values is 0 to 0
  8287                           ; switch strategies available:
  8288                           ; Name         Instructions Cycles
  8289                           ; simple_byte            4     3 (average)
  8290                           ; direct_byte           11     8 (fixed)
  8291                           ; jumptable            260     6 (fixed)
  8292                           ;	Chosen strategy is simple_byte
  8293     02B7  0834               	movf	??_est_executa+1,w
  8294     02B8  3A00               	xorlw	0	; case 0
  8295     02B9  1903               	skipnz
  8296     02BA  2ABC               	goto	i1l6251
  8297     02BB  2AD6               	goto	i1l5299
  8298     02BC                     i1l6251:
  8299                           
  8300                           ; Switch size 1, requested type "simple"
  8301                           ; Number of cases is 8, Range of values is 1 to 8
  8302                           ; switch strategies available:
  8303                           ; Name         Instructions Cycles
  8304                           ; simple_byte           25    13 (average)
  8305                           ; direct_byte           35    11 (fixed)
  8306                           ; jumptable            263     9 (fixed)
  8307                           ;	Chosen strategy is simple_byte
  8308     02BC  0833               	movf	??_est_executa,w
  8309     02BD  3A01               	xorlw	1	; case 1
  8310     02BE  1903               	skipnz
  8311     02BF  2857               	goto	i1l5195
  8312     02C0  3A03               	xorlw	3	; case 2
  8313     02C1  1903               	skipnz
  8314     02C2  288F               	goto	i1l374
  8315     02C3  3A01               	xorlw	1	; case 3
  8316     02C4  1903               	skipnz
  8317     02C5  2891               	goto	i1l375
  8318     02C6  3A07               	xorlw	7	; case 4
  8319     02C7  1903               	skipnz
  8320     02C8  2893               	goto	i1l5201
  8321     02C9  3A01               	xorlw	1	; case 5
  8322     02CA  1903               	skipnz
  8323     02CB  2927               	goto	i1l5227
  8324     02CC  3A03               	xorlw	3	; case 6
  8325     02CD  1903               	skipnz
  8326     02CE  29E2               	goto	i1l5253
  8327     02CF  3A01               	xorlw	1	; case 7
  8328     02D0  1903               	skipnz
  8329     02D1  2A42               	goto	i1l5283
  8330     02D2  3A0F               	xorlw	15	; case 8
  8331     02D3  1903               	skipnz
  8332     02D4  2A7C               	goto	i1l5289
  8333     02D5  2AD6               	goto	i1l5299
  8334     02D6                     i1l5299:
  8335                           
  8336                           ;src/estados.c: 501:     est_estado_atual = novo_estado;
  8337     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  8338     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  8339     02D8  0848               	movf	est_executa@novo_estado,w
  8340     02D9  00E8               	movwf	_est_estado_atual
  8341     02DA                     i1l391:
  8342     02DA  0008               	return
  8343     02DB                     __end_of_est_executa:
  8344                           
  8345                           	psect	text38
  8346     0A2B                     __ptext38:	
  8347 ;; *************** function i1_lcd_puts *****************
  8348 ;; Defined at:
  8349 ;;		line 101 in file "src/lcd.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  str             2    2[COMMON] PTR const unsigned char 
  8352 ;;		 -> mq_mostra@temp_str(16), STR_49(12), STR_48(13), STR_47(2), 
  8353 ;;		 -> STR_46(20), STR_45(7), STR_44(7), STR_43(7), 
  8354 ;;		 -> STR_42(6), STR_41(7), STR_40(7), STR_39(6), 
  8355 ;;		 -> STR_38(11), STR_37(11), STR_36(11), STR_35(9), 
  8356 ;;		 -> STR_34(16), STR_33(16), STR_32(9), STR_31(10), 
  8357 ;;		 -> STR_30(12), STR_29(14), STR_28(11), STR_27(12), 
  8358 ;;		 -> STR_26(12), STR_23(12), STR_21(12), est_executa@tmp(17), 
  8359 ;;		 -> STR_20(7), STR_19(7), STR_18(7), STR_17(6), 
  8360 ;;		 -> STR_16(7), STR_15(7), STR_14(6), STR_13(11), 
  8361 ;;		 -> STR_12(11), STR_11(11), STR_10(9), STR_9(16), 
  8362 ;;		 -> STR_8(16), STR_7(9), STR_6(10), STR_5(12), 
  8363 ;;		 -> STR_4(14), STR_3(11), adcon_print@temp_str(9), STR_1(14), 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;  cmd             1    5[COMMON] unsigned char 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8375 ;;      Params:         2       0       0       0       0
  8376 ;;      Locals:         1       0       0       0       0
  8377 ;;      Temps:          1       0       0       0       0
  8378 ;;      Totals:         4       0       0       0       0
  8379 ;;Total ram usage:        4 bytes
  8380 ;; Hardware stack levels used: 1
  8381 ;; Hardware stack levels required when called: 1
  8382 ;; This function calls:
  8383 ;;		i1_lcd_write
  8384 ;; This function is called by:
  8385 ;;		_adcon_amostra_print_grava
  8386 ;;		_adcon_print
  8387 ;;		_est_executa
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391     0A2B                     i1_lcd_puts:	
  8392                           ;psect for function i1_lcd_puts
  8393                           
  8394     0A2B                     i1l5039:	
  8395                           ;incstack = 0
  8396 ;; using string table level
  8397                           ; Regs used in i1_lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8398                           
  8399                           
  8400                           ;src/lcd.c: 102:   uint8_t cmd;;src/lcd.c: 103:   RC0 = 1;
  8401     0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  8402     0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  8403     0A2D  1407               	bsf	7,0	;volatile
  8404                           
  8405                           ;src/lcd.c: 105:   while (*str) {
  8406     0A2E  2A65               	goto	i1l5053
  8407     0A2F                     i1l5041:
  8408                           
  8409                           ;src/lcd.c: 107:     cmd = *str >> 4;
  8410     0A2F  0873               	movf	i1lcd_puts@str+1,w
  8411     0A30  00FF               	movwf	btemp+1
  8412     0A31  0872               	movf	i1lcd_puts@str,w
  8413     0A32  0084               	movwf	4
  8414     0A33  120A  118A  2300  120A  158A  	fcall	stringtab
  8415     0A38  00F4               	movwf	??i1_lcd_puts
  8416     0A39  3004               	movlw	4
  8417     0A3A                     u470_25:
  8418     0A3A  1003               	clrc
  8419     0A3B  0CF4               	rrf	??i1_lcd_puts,f
  8420     0A3C  3EFF               	addlw	-1
  8421     0A3D  1D03               	skipz
  8422     0A3E  2A3A               	goto	u470_25
  8423     0A3F  0874               	movf	??i1_lcd_puts,w
  8424     0A40  00F5               	movwf	i1lcd_puts@cmd
  8425     0A41                     i1l5043:
  8426                           
  8427                           ;src/lcd.c: 108:     lcd_write(cmd);
  8428     0A41  0875               	movf	i1lcd_puts@cmd,w
  8429     0A42  160A  118A  274E  120A  158A  	fcall	i1_lcd_write
  8430     0A47                     i1l5045:
  8431                           
  8432                           ;src/lcd.c: 109:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8433     0A47  300D               	movlw	13
  8434     0A48  00F4               	movwf	??i1_lcd_puts
  8435     0A49                     u580_27:
  8436     0A49  0BF4               	decfsz	??i1_lcd_puts,f
  8437     0A4A  2A49               	goto	u580_27
  8438     0A4B                     i1l5047:
  8439                           
  8440                           ;src/lcd.c: 112:     lcd_write(*str);
  8441     0A4B  0873               	movf	i1lcd_puts@str+1,w
  8442     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  8443     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  8444     0A4E  00FF               	movwf	btemp+1
  8445     0A4F  0872               	movf	i1lcd_puts@str,w
  8446     0A50  0084               	movwf	4
  8447     0A51  120A  118A  2300  120A  158A  	fcall	stringtab
  8448     0A56  160A  118A  274E  120A  158A  	fcall	i1_lcd_write
  8449     0A5B                     i1l5049:
  8450                           
  8451                           ;src/lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8452     0A5B  300D               	movlw	13
  8453     0A5C  00F4               	movwf	??i1_lcd_puts
  8454     0A5D                     u581_27:
  8455     0A5D  0BF4               	decfsz	??i1_lcd_puts,f
  8456     0A5E  2A5D               	goto	u581_27
  8457     0A5F                     i1l5051:
  8458                           
  8459                           ;src/lcd.c: 142:     str++;
  8460     0A5F  3001               	movlw	1
  8461     0A60  07F2               	addwf	i1lcd_puts@str,f
  8462     0A61  1803               	skipnc
  8463     0A62  0AF3               	incf	i1lcd_puts@str+1,f
  8464     0A63  3000               	movlw	0
  8465     0A64  07F3               	addwf	i1lcd_puts@str+1,f
  8466     0A65                     i1l5053:
  8467                           
  8468                           ;src/lcd.c: 105:   while (*str) {
  8469     0A65  0873               	movf	i1lcd_puts@str+1,w
  8470     0A66  1283               	bcf	3,5	;RP0=0, select bank0
  8471     0A67  1303               	bcf	3,6	;RP1=0, select bank0
  8472     0A68  00FF               	movwf	btemp+1
  8473     0A69  0872               	movf	i1lcd_puts@str,w
  8474     0A6A  0084               	movwf	4
  8475     0A6B  120A  118A  2300  120A  158A  	fcall	stringtab
  8476     0A70  3A00               	xorlw	0
  8477     0A71  1D03               	skipz
  8478     0A72  2A74               	goto	u471_21
  8479     0A73  2A75               	goto	u471_20
  8480     0A74                     u471_21:
  8481     0A74  2A2F               	goto	i1l5041
  8482     0A75                     u471_20:
  8483     0A75                     i1l52:
  8484     0A75  0008               	return
  8485     0A76                     __end_ofi1_lcd_puts:
  8486                           
  8487                           	psect	text39
  8488     161A                     __ptext39:	
  8489 ;; *************** function i1_eeprom_grava_word *****************
  8490 ;; Defined at:
  8491 ;;		line 16 in file "src/eeprom.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  end             1    wreg     unsigned char 
  8494 ;;  dado            2    2[COMMON] unsigned int 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  end             1    4[COMMON] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8506 ;;      Params:         2       0       0       0       0
  8507 ;;      Locals:         1       0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0
  8509 ;;      Totals:         3       0       0       0       0
  8510 ;;Total ram usage:        3 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 1
  8513 ;; This function calls:
  8514 ;;		i1_eeprom_write
  8515 ;; This function is called by:
  8516 ;;		_adcon_amostra_print_grava
  8517 ;;		_est_estado_menu_conf_tempo_amostra
  8518 ;;		_est_executa
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522     161A                     i1_eeprom_grava_word:	
  8523                           ;psect for function i1_eeprom_grava_word
  8524                           
  8525                           
  8526                           ;incstack = 0
  8527                           ; Regs used in i1_eeprom_grava_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8528                           ;i1eeprom_grava_word@end stored from wreg
  8529     161A  00F4               	movwf	i1eeprom_grava_word@end
  8530     161B                     i1l5143:
  8531                           
  8532                           ;src/eeprom.c: 17:     eeprom_write(end, dado >> 8);
  8533     161B  0873               	movf	i1eeprom_grava_word@dado+1,w
  8534     161C  00F0               	movwf	i1eeprom_write@value
  8535     161D  0874               	movf	i1eeprom_grava_word@end,w
  8536     161E  160A  118A  2778  160A  118A  	fcall	i1_eeprom_write
  8537                           
  8538                           ;src/eeprom.c: 18:     eeprom_write(end + 1, (uint8_t)dado);
  8539     1623  0872               	movf	i1eeprom_grava_word@dado,w
  8540     1624  00F0               	movwf	i1eeprom_write@value
  8541     1625  0874               	movf	i1eeprom_grava_word@end,w
  8542     1626  3E01               	addlw	1
  8543     1627  160A  118A  2778  160A  118A  	fcall	i1_eeprom_write
  8544     162C                     i1l187:
  8545     162C  0008               	return
  8546     162D                     __end_ofi1_eeprom_grava_word:
  8547                           
  8548                           	psect	text40
  8549     1778                     __ptext40:	
  8550 ;; *************** function i1_eeprom_write *****************
  8551 ;; Defined at:
  8552 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eewrite.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  addr            1    wreg     unsigned char 
  8555 ;;  value           1    0[COMMON] unsigned char 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  addr            1    1[COMMON] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      void 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, btemp+1
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8567 ;;      Params:         1       0       0       0       0
  8568 ;;      Locals:         1       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0
  8570 ;;      Totals:         2       0       0       0       0
  8571 ;;Total ram usage:        2 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_adcon_amostra_print_grava
  8577 ;;		_est_estado_menu_conf_quant_sensores
  8578 ;;		_est_executa
  8579 ;;		i1_eeprom_grava_word
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583     1778                     i1_eeprom_write:	
  8584                           ;psect for function i1_eeprom_write
  8585                           
  8586                           
  8587                           ;incstack = 0
  8588                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0+btemp+1]
  8589                           ;i1eeprom_write@addr stored from wreg
  8590     1778  00F1               	movwf	i1eeprom_write@addr
  8591     1779                     i1l727:	
  8592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  8593                           
  8594     1779                     i1l728:
  8595     1779  1683               	bsf	3,5	;RP0=1, select bank3
  8596     177A  1703               	bsf	3,6	;RP1=1, select bank3
  8597     177B  188C               	btfsc	12,1	;volsfr
  8598     177C  2F7E               	goto	u473_21
  8599     177D  2F7F               	goto	u473_20
  8600     177E                     u473_21:
  8601     177E  2F79               	goto	i1l728
  8602     177F                     u473_20:
  8603     177F                     i1l5059:
  8604     177F  0871               	movf	i1eeprom_write@addr,w
  8605     1780  1283               	bcf	3,5	;RP0=0, select bank2
  8606     1781  1703               	bsf	3,6	;RP1=1, select bank2
  8607     1782  008D               	movwf	13	;volatile
  8608     1783  0870               	movf	i1eeprom_write@value,w
  8609     1784  008C               	movwf	12	;volatile
  8610     1785                     i1l5061:
  8611     1785  303F               	movlw	63
  8612     1786  00FF               	movwf	btemp+1
  8613     1787  087F               	movf	btemp+1,w
  8614     1788  1683               	bsf	3,5	;RP0=1, select bank3
  8615     1789  1703               	bsf	3,6	;RP1=1, select bank3
  8616     178A  058C               	andwf	12,f	;volsfr
  8617     178B                     i1l5063:
  8618     178B  1283               	bcf	3,5	;RP0=0, select bank0
  8619     178C  1303               	bcf	3,6	;RP1=0, select bank0
  8620     178D  1003               	bcf	3,0	;volatile
  8621     178E                     i1l5065:
  8622     178E  1F8B               	btfss	11,7	;volatile
  8623     178F  2F91               	goto	u474_21
  8624     1790  2F92               	goto	u474_20
  8625     1791                     u474_21:
  8626     1791  2F93               	goto	i1l731
  8627     1792                     u474_20:
  8628     1792                     i1l5067:
  8629     1792  1403               	bsf	3,0	;volatile
  8630     1793                     i1l731:
  8631     1793  138B               	bcf	11,7	;volatile
  8632     1794  1683               	bsf	3,5	;RP0=1, select bank3
  8633     1795  1703               	bsf	3,6	;RP1=1, select bank3
  8634     1796  150C               	bsf	12,2	;volsfr
  8635     1797                     i1l5069:
  8636     1797  3055               	movlw	85
  8637     1798  008D               	movwf	13	;volsfr
  8638     1799  30AA               	movlw	170
  8639     179A  008D               	movwf	13	;volsfr
  8640     179B                     i1l5071:
  8641     179B  148C               	bsf	12,1	;volsfr
  8642     179C                     i1l5073:
  8643     179C  110C               	bcf	12,2	;volsfr
  8644     179D                     i1l5075:
  8645     179D  1283               	bcf	3,5	;RP0=0, select bank0
  8646     179E  1303               	bcf	3,6	;RP1=0, select bank0
  8647     179F  1C03               	btfss	3,0	;volatile
  8648     17A0  2FA2               	goto	u475_21
  8649     17A1  2FA3               	goto	u475_20
  8650     17A2                     u475_21:
  8651     17A2  2FA4               	goto	i1l734
  8652     17A3                     u475_20:
  8653     17A3                     i1l5077:
  8654     17A3  178B               	bsf	11,7	;volatile
  8655     17A4                     i1l734:
  8656     17A4  0008               	return
  8657     17A5                     __end_ofi1_eeprom_write:
  8658                           
  8659                           	psect	text41
  8660     063D                     __ptext41:	
  8661 ;; *************** function _sprintf *****************
  8662 ;; Defined at:
  8663 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;  sp              1    wreg     PTR unsigned char 
  8666 ;;		 -> mq_mostra@temp_str(16), est_executa@tmp(17), adcon_print@temp_str(9), 
  8667 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  8668 ;;		 -> STR_50(7), STR_25(10), STR_24(10), STR_22(9), 
  8669 ;;		 -> STR_2(9), 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  8672 ;;		 -> mq_mostra@temp_str(16), est_executa@tmp(17), adcon_print@temp_str(9), 
  8673 ;;  tmpval          4    0        struct .
  8674 ;;  val             2   15[BANK0 ] unsigned int 
  8675 ;;  cp              2    0        PTR const unsigned char 
  8676 ;;  len             2    0        unsigned int 
  8677 ;;  c               1   18[BANK0 ] unsigned char 
  8678 ;;  flag            1   14[BANK0 ] unsigned char 
  8679 ;;  ap              1   13[BANK0 ] PTR void [1]
  8680 ;;		 -> ?_sprintf(2), 
  8681 ;;  prec            1   12[BANK0 ] char 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  2    0[BANK0 ] int 
  8684 ;; Registers used:
  8685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8691 ;;      Params:         0       8       0       0       0
  8692 ;;      Locals:         0       7       0       0       0
  8693 ;;      Temps:          0       4       0       0       0
  8694 ;;      Totals:         0      19       0       0       0
  8695 ;;Total ram usage:       19 bytes
  8696 ;; Hardware stack levels used: 1
  8697 ;; Hardware stack levels required when called: 1
  8698 ;; This function calls:
  8699 ;;		___lwdiv
  8700 ;;		___lwmod
  8701 ;; This function is called by:
  8702 ;;		_adcon_print
  8703 ;;		_est_executa
  8704 ;;		_mq_mostra
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708     063D                     _sprintf:	
  8709                           ;psect for function _sprintf
  8710                           
  8711                           
  8712                           ;incstack = 0
  8713 ;; using string table level
  8714                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8715                           ;sprintf@sp stored from wreg
  8716     063D  1283               	bcf	3,5	;RP0=0, select bank0
  8717     063E  1303               	bcf	3,6	;RP1=0, select bank0
  8718     063F  00B1               	movwf	sprintf@sp
  8719     0640                     i1l4971:
  8720                           
  8721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  8722     0640  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8723     0641  00AD               	movwf	sprintf@ap
  8724                           
  8725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  8726     0642  2F27               	goto	i1l5029
  8727     0643                     i1l4973:
  8728                           
  8729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  8730     0643  3025               	movlw	37
  8731     0644  0632               	xorwf	sprintf@c,w
  8732     0645  1903               	btfsc	3,2
  8733     0646  2E48               	goto	u462_21
  8734     0647  2E49               	goto	u462_20
  8735     0648                     u462_21:
  8736     0648  2E53               	goto	i1l4979
  8737     0649                     u462_20:
  8738     0649                     i1l4975:
  8739                           
  8740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  8741     0649  0831               	movf	sprintf@sp,w
  8742     064A  0084               	movwf	4
  8743     064B  0832               	movf	sprintf@c,w
  8744     064C  1383               	bcf	3,7	;select IRP bank0
  8745     064D  0080               	movwf	0
  8746     064E                     i1l4977:
  8747     064E  3001               	movlw	1
  8748     064F  00FF               	movwf	btemp+1
  8749     0650  087F               	movf	btemp+1,w
  8750     0651  07B1               	addwf	sprintf@sp,f
  8751                           
  8752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 559:    continue;
  8753     0652  2F27               	goto	i1l5029
  8754     0653                     i1l4979:
  8755                           
  8756                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  8757     0653  01AE               	clrf	sprintf@flag
  8758                           
  8759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  8760     0654  2E57               	goto	i1l4983
  8761     0655                     i1l753:	
  8762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  8763                           
  8764                           
  8765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  8766     0655  172E               	bsf	sprintf@flag,6
  8767                           
  8768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 845:    break;
  8769     0656  2E7D               	goto	i1l751
  8770     0657                     i1l4983:
  8771     0657  0821               	movf	sprintf@f+1,w
  8772     0658  00A9               	movwf	??_sprintf+1
  8773     0659  0820               	movf	sprintf@f,w
  8774     065A  00A8               	movwf	??_sprintf
  8775     065B  0AA0               	incf	sprintf@f,f
  8776     065C  1903               	skipnz
  8777     065D  0AA1               	incf	sprintf@f+1,f
  8778     065E  0829               	movf	??_sprintf+1,w
  8779     065F  00FF               	movwf	btemp+1
  8780     0660  0828               	movf	??_sprintf,w
  8781     0661  0084               	movwf	4
  8782     0662  120A  118A  2300  120A  118A  	fcall	stringtab
  8783     0667  00B2               	movwf	sprintf@c
  8784     0668  00AA               	movwf	??_sprintf+2
  8785     0669  01AB               	clrf	??_sprintf+3
  8786                           
  8787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8788                           ; Switch size 1, requested type "simple"
  8789                           ; Number of cases is 1, Range of values is 0 to 0
  8790                           ; switch strategies available:
  8791                           ; Name         Instructions Cycles
  8792                           ; simple_byte            4     3 (average)
  8793                           ; direct_byte           11     8 (fixed)
  8794                           ; jumptable            260     6 (fixed)
  8795                           ;	Chosen strategy is simple_byte
  8796     066A  082B               	movf	??_sprintf+3,w
  8797     066B  3A00               	xorlw	0	; case 0
  8798     066C  1903               	skipnz
  8799     066D  2E6F               	goto	i1l6253
  8800     066E  2F27               	goto	i1l5029
  8801     066F                     i1l6253:
  8802                           
  8803                           ; Switch size 1, requested type "simple"
  8804                           ; Number of cases is 4, Range of values is 0 to 117
  8805                           ; switch strategies available:
  8806                           ; Name         Instructions Cycles
  8807                           ; simple_byte           13     7 (average)
  8808                           ; jumptable            260     6 (fixed)
  8809                           ;	Chosen strategy is simple_byte
  8810     066F  082A               	movf	??_sprintf+2,w
  8811     0670  3A00               	xorlw	0	; case 0
  8812     0671  1903               	skipnz
  8813     0672  2F3D               	goto	i1l5031
  8814     0673  3A64               	xorlw	100	; case 100
  8815     0674  1903               	skipnz
  8816     0675  2E7D               	goto	i1l751
  8817     0676  3A0D               	xorlw	13	; case 105
  8818     0677  1903               	skipnz
  8819     0678  2E7D               	goto	i1l751
  8820     0679  3A1C               	xorlw	28	; case 117
  8821     067A  1903               	skipnz
  8822     067B  2E55               	goto	i1l753
  8823     067C  2F27               	goto	i1l5029
  8824     067D                     i1l751:
  8825                           
  8826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  8827     067D  1B2E               	btfsc	sprintf@flag,6
  8828     067E  2E80               	goto	u463_21
  8829     067F  2E81               	goto	u463_20
  8830     0680                     u463_21:
  8831     0680  2E9B               	goto	i1l4995
  8832     0681                     u463_20:
  8833     0681                     i1l4985:
  8834                           
  8835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  8836     0681  082D               	movf	sprintf@ap,w
  8837     0682  0084               	movwf	4
  8838     0683  1383               	bcf	3,7	;select IRP bank0
  8839     0684  0800               	movf	0,w
  8840     0685  00AF               	movwf	sprintf@val
  8841     0686  0A84               	incf	4,f
  8842     0687  0800               	movf	0,w
  8843     0688  00B0               	movwf	sprintf@val+1
  8844     0689                     i1l4987:
  8845     0689  3002               	movlw	2
  8846     068A  00FF               	movwf	btemp+1
  8847     068B  087F               	movf	btemp+1,w
  8848     068C  07AD               	addwf	sprintf@ap,f
  8849     068D                     i1l4989:
  8850                           
  8851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  8852     068D  1FB0               	btfss	sprintf@val+1,7
  8853     068E  2E90               	goto	u464_21
  8854     068F  2E91               	goto	u464_20
  8855     0690                     u464_21:
  8856     0690  2EA7               	goto	i1l4999
  8857     0691                     u464_20:
  8858     0691                     i1l4991:
  8859                           
  8860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  8861     0691  3003               	movlw	3
  8862     0692  00FF               	movwf	btemp+1
  8863     0693  087F               	movf	btemp+1,w
  8864     0694  04AE               	iorwf	sprintf@flag,f
  8865     0695                     i1l4993:
  8866                           
  8867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  8868     0695  09AF               	comf	sprintf@val,f
  8869     0696  09B0               	comf	sprintf@val+1,f
  8870     0697  0AAF               	incf	sprintf@val,f
  8871     0698  1903               	skipnz
  8872     0699  0AB0               	incf	sprintf@val+1,f
  8873     069A  2EA7               	goto	i1l4999
  8874     069B                     i1l4995:
  8875                           
  8876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8877     069B  082D               	movf	sprintf@ap,w
  8878     069C  0084               	movwf	4
  8879     069D  1383               	bcf	3,7	;select IRP bank0
  8880     069E  0800               	movf	0,w
  8881     069F  00AF               	movwf	sprintf@val
  8882     06A0  0A84               	incf	4,f
  8883     06A1  0800               	movf	0,w
  8884     06A2  00B0               	movwf	sprintf@val+1
  8885     06A3                     i1l4997:
  8886     06A3  3002               	movlw	2
  8887     06A4  00FF               	movwf	btemp+1
  8888     06A5  087F               	movf	btemp+1,w
  8889     06A6  07AD               	addwf	sprintf@ap,f
  8890     06A7                     i1l4999:
  8891                           
  8892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8893     06A7  01B2               	clrf	sprintf@c
  8894     06A8  0AB2               	incf	sprintf@c,f
  8895     06A9                     i1l5005:
  8896                           
  8897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  8898     06A9  0832               	movf	sprintf@c,w
  8899     06AA  00A8               	movwf	??_sprintf
  8900     06AB  0728               	addwf	??_sprintf,w
  8901     06AC  3E12               	addlw	low (_dpowers| (0+32768))
  8902     06AD  0084               	movwf	4
  8903     06AE  3083               	movlw	high (_dpowers| (0+32768))
  8904     06AF  1803               	skipnc
  8905     06B0  3E01               	addlw	1
  8906     06B1  00FF               	movwf	btemp+1
  8907     06B2  120A  118A  2300  120A  118A  	fcall	stringtab
  8908     06B7  00A9               	movwf	??_sprintf+1
  8909     06B8  120A  118A  2300  120A  118A  	fcall	stringtab
  8910     06BD  00AA               	movwf	??_sprintf+2
  8911     06BE  082A               	movf	??_sprintf+2,w
  8912     06BF  0230               	subwf	sprintf@val+1,w
  8913     06C0  1D03               	skipz
  8914     06C1  2EC4               	goto	u465_25
  8915     06C2  0829               	movf	??_sprintf+1,w
  8916     06C3  022F               	subwf	sprintf@val,w
  8917     06C4                     u465_25:
  8918     06C4  1803               	skipnc
  8919     06C5  2EC7               	goto	u465_21
  8920     06C6  2EC8               	goto	u465_20
  8921     06C7                     u465_21:
  8922     06C7  2EC9               	goto	i1l5009
  8923     06C8                     u465_20:
  8924     06C8  2ED3               	goto	i1l5013
  8925     06C9                     i1l5009:
  8926     06C9  3001               	movlw	1
  8927     06CA  00FF               	movwf	btemp+1
  8928     06CB  087F               	movf	btemp+1,w
  8929     06CC  07B2               	addwf	sprintf@c,f
  8930     06CD                     i1l5011:
  8931     06CD  3005               	movlw	5
  8932     06CE  0632               	xorwf	sprintf@c,w
  8933     06CF  1D03               	btfss	3,2
  8934     06D0  2ED2               	goto	u466_21
  8935     06D1  2ED3               	goto	u466_20
  8936     06D2                     u466_21:
  8937     06D2  2EA9               	goto	i1l5005
  8938     06D3                     u466_20:
  8939     06D3                     i1l5013:
  8940                           
  8941                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  8942     06D3  082E               	movf	sprintf@flag,w
  8943     06D4  3903               	andlw	3
  8944     06D5  1903               	btfsc	3,2
  8945     06D6  2ED8               	goto	u467_21
  8946     06D7  2ED9               	goto	u467_20
  8947     06D8                     u467_21:
  8948     06D8  2EE2               	goto	i1l5019
  8949     06D9                     u467_20:
  8950     06D9                     i1l5015:
  8951                           
  8952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  8953     06D9  0831               	movf	sprintf@sp,w
  8954     06DA  0084               	movwf	4
  8955     06DB  302D               	movlw	45
  8956     06DC  1383               	bcf	3,7	;select IRP bank0
  8957     06DD  0080               	movwf	0
  8958     06DE                     i1l5017:
  8959     06DE  3001               	movlw	1
  8960     06DF  00FF               	movwf	btemp+1
  8961     06E0  087F               	movf	btemp+1,w
  8962     06E1  07B1               	addwf	sprintf@sp,f
  8963     06E2                     i1l5019:
  8964                           
  8965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  8966     06E2  0832               	movf	sprintf@c,w
  8967     06E3  00AC               	movwf	sprintf@prec
  8968                           
  8969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8970     06E4  2F1E               	goto	i1l5027
  8971     06E5                     i1l5021:
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  8974     06E5  300A               	movlw	10
  8975     06E6  00F7               	movwf	___lwmod@divisor
  8976     06E7  3000               	movlw	0
  8977     06E8  00F8               	movwf	___lwmod@divisor+1
  8978     06E9  082C               	movf	sprintf@prec,w
  8979     06EA  00A8               	movwf	??_sprintf
  8980     06EB  0728               	addwf	??_sprintf,w
  8981     06EC  3E12               	addlw	low (_dpowers| (0+32768))
  8982     06ED  0084               	movwf	4
  8983     06EE  3083               	movlw	high (_dpowers| (0+32768))
  8984     06EF  1803               	skipnc
  8985     06F0  3E01               	addlw	1
  8986     06F1  00FF               	movwf	btemp+1
  8987     06F2  120A  118A  2300  120A  118A  	fcall	stringtab
  8988     06F7  00F0               	movwf	___lwdiv@divisor
  8989     06F8  120A  118A  2300  120A  118A  	fcall	stringtab
  8990     06FD  00F1               	movwf	___lwdiv@divisor+1
  8991     06FE  0830               	movf	sprintf@val+1,w
  8992     06FF  00F3               	movwf	___lwdiv@dividend+1
  8993     0700  082F               	movf	sprintf@val,w
  8994     0701  00F2               	movwf	___lwdiv@dividend
  8995     0702  120A  158A  21E7  120A  118A  	fcall	___lwdiv
  8996     0707  0871               	movf	?___lwdiv+1,w
  8997     0708  00FA               	movwf	___lwmod@dividend+1
  8998     0709  0870               	movf	?___lwdiv,w
  8999     070A  00F9               	movwf	___lwmod@dividend
  9000     070B  120A  158A  2131  120A  118A  	fcall	___lwmod
  9001     0710  0877               	movf	?___lwmod,w
  9002     0711  3E30               	addlw	48
  9003     0712  1283               	bcf	3,5	;RP0=0, select bank0
  9004     0713  1303               	bcf	3,6	;RP1=0, select bank0
  9005     0714  00B2               	movwf	sprintf@c
  9006     0715                     i1l5023:
  9007                           
  9008                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  9009     0715  0831               	movf	sprintf@sp,w
  9010     0716  0084               	movwf	4
  9011     0717  0832               	movf	sprintf@c,w
  9012     0718  1383               	bcf	3,7	;select IRP bank0
  9013     0719  0080               	movwf	0
  9014     071A                     i1l5025:
  9015     071A  3001               	movlw	1
  9016     071B  00FF               	movwf	btemp+1
  9017     071C  087F               	movf	btemp+1,w
  9018     071D  07B1               	addwf	sprintf@sp,f
  9019     071E                     i1l5027:
  9020                           
  9021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  9022     071E  30FF               	movlw	255
  9023     071F  00FF               	movwf	btemp+1
  9024     0720  087F               	movf	btemp+1,w
  9025     0721  07AC               	addwf	sprintf@prec,f
  9026     0722  0A2C               	incf	sprintf@prec,w
  9027     0723  1D03               	btfss	3,2
  9028     0724  2F26               	goto	u468_21
  9029     0725  2F27               	goto	u468_20
  9030     0726                     u468_21:
  9031     0726  2EE5               	goto	i1l5021
  9032     0727                     u468_20:
  9033     0727                     i1l5029:
  9034                           
  9035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  9036     0727  0821               	movf	sprintf@f+1,w
  9037     0728  00A9               	movwf	??_sprintf+1
  9038     0729  0820               	movf	sprintf@f,w
  9039     072A  00A8               	movwf	??_sprintf
  9040     072B  0AA0               	incf	sprintf@f,f
  9041     072C  1903               	skipnz
  9042     072D  0AA1               	incf	sprintf@f+1,f
  9043     072E  0829               	movf	??_sprintf+1,w
  9044     072F  00FF               	movwf	btemp+1
  9045     0730  0828               	movf	??_sprintf,w
  9046     0731  0084               	movwf	4
  9047     0732  120A  118A  2300  120A  118A  	fcall	stringtab
  9048     0737  00B2               	movwf	sprintf@c
  9049     0738  0832               	movf	sprintf@c,w
  9050     0739  1D03               	btfss	3,2
  9051     073A  2F3C               	goto	u469_21
  9052     073B  2F3D               	goto	u469_20
  9053     073C                     u469_21:
  9054     073C  2E43               	goto	i1l4973
  9055     073D                     u469_20:
  9056     073D                     i1l5031:
  9057                           
  9058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  9059     073D  0831               	movf	sprintf@sp,w
  9060     073E  0084               	movwf	4
  9061     073F  1383               	bcf	3,7	;select IRP bank0
  9062     0740  0180               	clrf	0
  9063     0741                     i1l765:
  9064     0741  0008               	return
  9065     0742                     __end_of_sprintf:
  9066                           
  9067                           	psect	text42
  9068     0931                     __ptext42:	
  9069 ;; *************** function ___lwmod *****************
  9070 ;; Defined at:
  9071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwmod.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  divisor         2    7[COMMON] unsigned int 
  9074 ;;  dividend        2    9[COMMON] unsigned int 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  counter         1   11[COMMON] unsigned char 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  2    7[COMMON] unsigned int 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0, btemp+1
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9086 ;;      Params:         4       0       0       0       0
  9087 ;;      Locals:         1       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0
  9089 ;;      Totals:         5       0       0       0       0
  9090 ;;Total ram usage:        5 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_est_executa
  9096 ;;		_sprintf
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100     0931                     ___lwmod:	
  9101                           ;psect for function ___lwmod
  9102                           
  9103     0931                     i1l4923:	
  9104                           ;incstack = 0
  9105                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  9106                           
  9107     0931  0877               	movf	___lwmod@divisor,w
  9108     0932  0478               	iorwf	___lwmod@divisor+1,w
  9109     0933  1903               	btfsc	3,2
  9110     0934  2936               	goto	u456_21
  9111     0935  2937               	goto	u456_20
  9112     0936                     u456_21:
  9113     0936  2966               	goto	i1l4941
  9114     0937                     u456_20:
  9115     0937                     i1l4925:
  9116     0937  01FB               	clrf	___lwmod@counter
  9117     0938  0AFB               	incf	___lwmod@counter,f
  9118     0939  2945               	goto	i1l4931
  9119     093A                     i1l4927:
  9120     093A  3001               	movlw	1
  9121     093B                     u457_25:
  9122     093B  1003               	clrc
  9123     093C  0DF7               	rlf	___lwmod@divisor,f
  9124     093D  0DF8               	rlf	___lwmod@divisor+1,f
  9125     093E  3EFF               	addlw	-1
  9126     093F  1D03               	skipz
  9127     0940  293B               	goto	u457_25
  9128     0941                     i1l4929:
  9129     0941  3001               	movlw	1
  9130     0942  00FF               	movwf	btemp+1
  9131     0943  087F               	movf	btemp+1,w
  9132     0944  07FB               	addwf	___lwmod@counter,f
  9133     0945                     i1l4931:
  9134     0945  1FF8               	btfss	___lwmod@divisor+1,7
  9135     0946  2948               	goto	u458_21
  9136     0947  2949               	goto	u458_20
  9137     0948                     u458_21:
  9138     0948  293A               	goto	i1l4927
  9139     0949                     u458_20:
  9140     0949                     i1l4933:
  9141     0949  0878               	movf	___lwmod@divisor+1,w
  9142     094A  027A               	subwf	___lwmod@dividend+1,w
  9143     094B  1D03               	skipz
  9144     094C  294F               	goto	u459_25
  9145     094D  0877               	movf	___lwmod@divisor,w
  9146     094E  0279               	subwf	___lwmod@dividend,w
  9147     094F                     u459_25:
  9148     094F  1C03               	skipc
  9149     0950  2952               	goto	u459_21
  9150     0951  2953               	goto	u459_20
  9151     0952                     u459_21:
  9152     0952  2959               	goto	i1l4937
  9153     0953                     u459_20:
  9154     0953                     i1l4935:
  9155     0953  0877               	movf	___lwmod@divisor,w
  9156     0954  02F9               	subwf	___lwmod@dividend,f
  9157     0955  0878               	movf	___lwmod@divisor+1,w
  9158     0956  1C03               	skipc
  9159     0957  03FA               	decf	___lwmod@dividend+1,f
  9160     0958  02FA               	subwf	___lwmod@dividend+1,f
  9161     0959                     i1l4937:
  9162     0959  3001               	movlw	1
  9163     095A                     u460_25:
  9164     095A  1003               	clrc
  9165     095B  0CF8               	rrf	___lwmod@divisor+1,f
  9166     095C  0CF7               	rrf	___lwmod@divisor,f
  9167     095D  3EFF               	addlw	-1
  9168     095E  1D03               	skipz
  9169     095F  295A               	goto	u460_25
  9170     0960                     i1l4939:
  9171     0960  3001               	movlw	1
  9172     0961  02FB               	subwf	___lwmod@counter,f
  9173     0962  1D03               	btfss	3,2
  9174     0963  2965               	goto	u461_21
  9175     0964  2966               	goto	u461_20
  9176     0965                     u461_21:
  9177     0965  2949               	goto	i1l4933
  9178     0966                     u461_20:
  9179     0966                     i1l4941:
  9180     0966  087A               	movf	___lwmod@dividend+1,w
  9181     0967  00F8               	movwf	?___lwmod+1
  9182     0968  0879               	movf	___lwmod@dividend,w
  9183     0969  00F7               	movwf	?___lwmod
  9184     096A                     i1l1051:
  9185     096A  0008               	return
  9186     096B                     __end_of___lwmod:
  9187                           
  9188                           	psect	text43
  9189     09E7                     __ptext43:	
  9190 ;; *************** function ___lwdiv *****************
  9191 ;; Defined at:
  9192 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwdiv.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  divisor         2    0[COMMON] unsigned int 
  9195 ;;  dividend        2    2[COMMON] unsigned int 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;  quotient        2    5[COMMON] unsigned int 
  9198 ;;  counter         1    4[COMMON] unsigned char 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  2    0[COMMON] unsigned int 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0, btemp+1
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9208 ;;      Params:         4       0       0       0       0
  9209 ;;      Locals:         3       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0
  9211 ;;      Totals:         7       0       0       0       0
  9212 ;;Total ram usage:        7 bytes
  9213 ;; Hardware stack levels used: 1
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		_est_executa
  9218 ;;		_sprintf
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222     09E7                     ___lwdiv:	
  9223                           ;psect for function ___lwdiv
  9224                           
  9225     09E7                     i1l4897:	
  9226                           ;incstack = 0
  9227                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  9228                           
  9229     09E7  01F5               	clrf	___lwdiv@quotient
  9230     09E8  01F6               	clrf	___lwdiv@quotient+1
  9231     09E9                     i1l4899:
  9232     09E9  0870               	movf	___lwdiv@divisor,w
  9233     09EA  0471               	iorwf	___lwdiv@divisor+1,w
  9234     09EB  1903               	btfsc	3,2
  9235     09EC  29EE               	goto	u449_21
  9236     09ED  29EF               	goto	u449_20
  9237     09EE                     u449_21:
  9238     09EE  2A26               	goto	i1l4919
  9239     09EF                     u449_20:
  9240     09EF                     i1l4901:
  9241     09EF  01F4               	clrf	___lwdiv@counter
  9242     09F0  0AF4               	incf	___lwdiv@counter,f
  9243     09F1  29FD               	goto	i1l4907
  9244     09F2                     i1l4903:
  9245     09F2  3001               	movlw	1
  9246     09F3                     u450_25:
  9247     09F3  1003               	clrc
  9248     09F4  0DF0               	rlf	___lwdiv@divisor,f
  9249     09F5  0DF1               	rlf	___lwdiv@divisor+1,f
  9250     09F6  3EFF               	addlw	-1
  9251     09F7  1D03               	skipz
  9252     09F8  29F3               	goto	u450_25
  9253     09F9                     i1l4905:
  9254     09F9  3001               	movlw	1
  9255     09FA  00FF               	movwf	btemp+1
  9256     09FB  087F               	movf	btemp+1,w
  9257     09FC  07F4               	addwf	___lwdiv@counter,f
  9258     09FD                     i1l4907:
  9259     09FD  1FF1               	btfss	___lwdiv@divisor+1,7
  9260     09FE  2A00               	goto	u451_21
  9261     09FF  2A01               	goto	u451_20
  9262     0A00                     u451_21:
  9263     0A00  29F2               	goto	i1l4903
  9264     0A01                     u451_20:
  9265     0A01                     i1l4909:
  9266     0A01  3001               	movlw	1
  9267     0A02                     u452_25:
  9268     0A02  1003               	clrc
  9269     0A03  0DF5               	rlf	___lwdiv@quotient,f
  9270     0A04  0DF6               	rlf	___lwdiv@quotient+1,f
  9271     0A05  3EFF               	addlw	-1
  9272     0A06  1D03               	skipz
  9273     0A07  2A02               	goto	u452_25
  9274     0A08  0871               	movf	___lwdiv@divisor+1,w
  9275     0A09  0273               	subwf	___lwdiv@dividend+1,w
  9276     0A0A  1D03               	skipz
  9277     0A0B  2A0E               	goto	u453_25
  9278     0A0C  0870               	movf	___lwdiv@divisor,w
  9279     0A0D  0272               	subwf	___lwdiv@dividend,w
  9280     0A0E                     u453_25:
  9281     0A0E  1C03               	skipc
  9282     0A0F  2A11               	goto	u453_21
  9283     0A10  2A12               	goto	u453_20
  9284     0A11                     u453_21:
  9285     0A11  2A19               	goto	i1l4915
  9286     0A12                     u453_20:
  9287     0A12                     i1l4911:
  9288     0A12  0870               	movf	___lwdiv@divisor,w
  9289     0A13  02F2               	subwf	___lwdiv@dividend,f
  9290     0A14  0871               	movf	___lwdiv@divisor+1,w
  9291     0A15  1C03               	skipc
  9292     0A16  03F3               	decf	___lwdiv@dividend+1,f
  9293     0A17  02F3               	subwf	___lwdiv@dividend+1,f
  9294     0A18                     i1l4913:
  9295     0A18  1475               	bsf	___lwdiv@quotient,0
  9296     0A19                     i1l4915:
  9297     0A19  3001               	movlw	1
  9298     0A1A                     u454_25:
  9299     0A1A  1003               	clrc
  9300     0A1B  0CF1               	rrf	___lwdiv@divisor+1,f
  9301     0A1C  0CF0               	rrf	___lwdiv@divisor,f
  9302     0A1D  3EFF               	addlw	-1
  9303     0A1E  1D03               	skipz
  9304     0A1F  2A1A               	goto	u454_25
  9305     0A20                     i1l4917:
  9306     0A20  3001               	movlw	1
  9307     0A21  02F4               	subwf	___lwdiv@counter,f
  9308     0A22  1D03               	btfss	3,2
  9309     0A23  2A25               	goto	u455_21
  9310     0A24  2A26               	goto	u455_20
  9311     0A25                     u455_21:
  9312     0A25  2A01               	goto	i1l4909
  9313     0A26                     u455_20:
  9314     0A26                     i1l4919:
  9315     0A26  0876               	movf	___lwdiv@quotient+1,w
  9316     0A27  00F1               	movwf	?___lwdiv+1
  9317     0A28  0875               	movf	___lwdiv@quotient,w
  9318     0A29  00F0               	movwf	?___lwdiv
  9319     0A2A                     i1l1041:
  9320     0A2A  0008               	return
  9321     0A2B                     __end_of___lwdiv:
  9322                           
  9323                           	psect	text44
  9324     15C6                     __ptext44:	
  9325 ;; *************** function _menu_get_index_nav *****************
  9326 ;; Defined at:
  9327 ;;		line 15 in file "src/menu.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  menu            1    wreg     PTR struct .
  9330 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  menu            1    0[COMMON] PTR struct .
  9333 ;;		 -> menu_cfg_quant_sensores(5), menu_cfg_tempo_amostra(5), menu_principal(5), 
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      unsigned char 
  9336 ;; Registers used:
  9337 ;;		wreg, fsr0l, fsr0h
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9343 ;;      Params:         0       0       0       0       0
  9344 ;;      Locals:         1       0       0       0       0
  9345 ;;      Temps:          0       0       0       0       0
  9346 ;;      Totals:         1       0       0       0       0
  9347 ;;Total ram usage:        1 bytes
  9348 ;; Hardware stack levels used: 1
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_est_estado_menu_principal
  9353 ;;		_est_executa
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357     15C6                     _menu_get_index_nav:	
  9358                           ;psect for function _menu_get_index_nav
  9359                           
  9360                           
  9361                           ;incstack = 0
  9362                           ; Regs used in _menu_get_index_nav: [wregfsr0]
  9363                           ;menu_get_index_nav@menu stored from wreg
  9364     15C6  00F0               	movwf	menu_get_index_nav@menu
  9365     15C7                     i1l5123:
  9366                           
  9367                           ;src/menu.c: 16:   return menu->index_nav;
  9368     15C7  0A70               	incf	menu_get_index_nav@menu,w
  9369     15C8  0084               	movwf	4
  9370     15C9  1383               	bcf	3,7	;select IRP bank0
  9371     15CA  0800               	movf	0,w
  9372     15CB                     i1l509:
  9373     15CB  0008               	return
  9374     15CC                     __end_of_menu_get_index_nav:
  9375                           
  9376                           	psect	text45
  9377     02DB                     __ptext45:	
  9378 ;; *************** function _lcd_goto_sensor *****************
  9379 ;; Defined at:
  9380 ;;		line 93 in file "src/lcd.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  num_sensor      1    wreg     unsigned char 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;  num_sensor      1    7[COMMON] unsigned char 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      void 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9394 ;;      Params:         0       0       0       0       0
  9395 ;;      Locals:         1       0       0       0       0
  9396 ;;      Temps:          1       0       0       0       0
  9397 ;;      Totals:         2       0       0       0       0
  9398 ;;Total ram usage:        2 bytes
  9399 ;; Hardware stack levels used: 1
  9400 ;; Hardware stack levels required when called: 2
  9401 ;; This function calls:
  9402 ;;		i1_lcd_goto
  9403 ;; This function is called by:
  9404 ;;		_adcon_print
  9405 ;;		_est_executa
  9406 ;;		_mq_mostra
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410     02DB                     _lcd_goto_sensor:	
  9411                           ;psect for function _lcd_goto_sensor
  9412                           
  9413                           
  9414                           ;incstack = 0
  9415 ;; hardware stack exceeded
  9416                           ; Regs used in _lcd_goto_sensor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9417                           ;lcd_goto_sensor@num_sensor stored from wreg
  9418     02DB  00F7               	movwf	lcd_goto_sensor@num_sensor
  9419     02DC                     i1l4963:
  9420                           
  9421                           ;src/lcd.c: 94:   lcd_goto(LCD_V_POSICOES[num_sensor].linha, LCD_V_POSICOES[num_sensor].
      +                          coluna);
  9422     02DC  1403               	setc
  9423     02DD  0D77               	rlf	lcd_goto_sensor@num_sensor,w
  9424     02DE  3E1C               	addlw	low (_LCD_V_POSICOES| (0+32768))
  9425     02DF  0084               	movwf	4
  9426     02E0  3083               	movlw	high (_LCD_V_POSICOES| (0+32768))
  9427     02E1  1803               	skipnc
  9428     02E2  3E01               	addlw	1
  9429     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  9430     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  9431     02E5  00FF               	movwf	btemp+1
  9432     02E6  120A  118A  2300  120A  118A  	fcall	stringtab
  9433     02EB  00F2               	movwf	i1lcd_goto@coluna
  9434     02EC  0877               	movf	lcd_goto_sensor@num_sensor,w
  9435     02ED  00F6               	movwf	??_lcd_goto_sensor
  9436     02EE  0776               	addwf	??_lcd_goto_sensor,w
  9437     02EF  3E1C               	addlw	low (_LCD_V_POSICOES| (0+32768))
  9438     02F0  0084               	movwf	4
  9439     02F1  3083               	movlw	high (_LCD_V_POSICOES| (0+32768))
  9440     02F2  1803               	skipnc
  9441     02F3  3E01               	addlw	1
  9442     02F4  00FF               	movwf	btemp+1
  9443     02F5  120A  118A  2300  120A  118A  	fcall	stringtab
  9444     02FA  160A  118A  27D2  120A  118A  	fcall	i1_lcd_goto
  9445     02FF                     i1l46:
  9446     02FF  0008               	return
  9447     0300                     __end_of_lcd_goto_sensor:
  9448                           
  9449                           	psect	text46
  9450     17D2                     __ptext46:	
  9451 ;; *************** function i1_lcd_goto *****************
  9452 ;; Defined at:
  9453 ;;		line 75 in file "src/lcd.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  linha           1    wreg     unsigned char 
  9456 ;;  coluna          1    2[COMMON] unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  linha           1    5[COMMON] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9468 ;;      Params:         1       0       0       0       0
  9469 ;;      Locals:         1       0       0       0       0
  9470 ;;      Temps:          2       0       0       0       0
  9471 ;;      Totals:         4       0       0       0       0
  9472 ;;Total ram usage:        4 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; Hardware stack levels required when called: 1
  9475 ;; This function calls:
  9476 ;;		i1_lcd_write
  9477 ;; This function is called by:
  9478 ;;		_lcd_goto_sensor
  9479 ;;		_est_executa
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483     17D2                     i1_lcd_goto:	
  9484                           ;psect for function i1_lcd_goto
  9485                           
  9486                           
  9487                           ;incstack = 0
  9488                           ; Regs used in i1_lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9489                           ;i1lcd_goto@linha stored from wreg
  9490     17D2  00F5               	movwf	i1lcd_goto@linha
  9491     17D3                     i1l4945:
  9492                           
  9493                           ;src/lcd.c: 76:     RC0 = 0;
  9494     17D3  1283               	bcf	3,5	;RP0=0, select bank0
  9495     17D4  1303               	bcf	3,6	;RP1=0, select bank0
  9496     17D5  1007               	bcf	7,0	;volatile
  9497                           
  9498                           ;src/lcd.c: 77:     switch (linha) {
  9499     17D6  2FE5               	goto	i1l4953
  9500     17D7                     i1l4947:
  9501                           
  9502                           ;src/lcd.c: 79:             lcd_write(0x08);
  9503     17D7  3008               	movlw	8
  9504     17D8  160A  118A  274E  160A  118A  	fcall	i1_lcd_write
  9505                           
  9506                           ;src/lcd.c: 80:             break;
  9507     17DD  2FF5               	goto	i1l4955
  9508     17DE                     i1l4949:
  9509                           
  9510                           ;src/lcd.c: 82:             lcd_write(0x0C);
  9511     17DE  300C               	movlw	12
  9512     17DF  160A  118A  274E  160A  118A  	fcall	i1_lcd_write
  9513                           
  9514                           ;src/lcd.c: 83:             break;
  9515     17E4  2FF5               	goto	i1l4955
  9516     17E5                     i1l4953:
  9517     17E5  0875               	movf	i1lcd_goto@linha,w
  9518     17E6  00F3               	movwf	??i1_lcd_goto
  9519     17E7  01F4               	clrf	??i1_lcd_goto+1
  9520                           
  9521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9522                           ; Switch size 1, requested type "simple"
  9523                           ; Number of cases is 1, Range of values is 0 to 0
  9524                           ; switch strategies available:
  9525                           ; Name         Instructions Cycles
  9526                           ; simple_byte            4     3 (average)
  9527                           ; direct_byte           11     8 (fixed)
  9528                           ; jumptable            260     6 (fixed)
  9529                           ;	Chosen strategy is simple_byte
  9530     17E8  0874               	movf	??i1_lcd_goto+1,w
  9531     17E9  3A00               	xorlw	0	; case 0
  9532     17EA  1903               	skipnz
  9533     17EB  2FED               	goto	i1l6255
  9534     17EC  2FF5               	goto	i1l4955
  9535     17ED                     i1l6255:
  9536                           
  9537                           ; Switch size 1, requested type "simple"
  9538                           ; Number of cases is 2, Range of values is 1 to 2
  9539                           ; switch strategies available:
  9540                           ; Name         Instructions Cycles
  9541                           ; simple_byte            7     4 (average)
  9542                           ; direct_byte           17    11 (fixed)
  9543                           ; jumptable            263     9 (fixed)
  9544                           ;	Chosen strategy is simple_byte
  9545     17ED  0873               	movf	??i1_lcd_goto,w
  9546     17EE  3A01               	xorlw	1	; case 1
  9547     17EF  1903               	skipnz
  9548     17F0  2FD7               	goto	i1l4947
  9549     17F1  3A03               	xorlw	3	; case 2
  9550     17F2  1903               	skipnz
  9551     17F3  2FDE               	goto	i1l4949
  9552     17F4  2FF5               	goto	i1l4955
  9553     17F5                     i1l4955:
  9554                           
  9555                           ;src/lcd.c: 85:     lcd_write(coluna);
  9556     17F5  0872               	movf	i1lcd_goto@coluna,w
  9557     17F6  160A  118A  274E  160A  118A  	fcall	i1_lcd_write
  9558     17FB                     i1l4957:
  9559                           
  9560                           ;src/lcd.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9561     17FB  300D               	movlw	13
  9562     17FC  00F3               	movwf	??i1_lcd_goto
  9563     17FD                     u582_27:
  9564     17FD  0BF3               	decfsz	??i1_lcd_goto,f
  9565     17FE  2FFD               	goto	u582_27
  9566     17FF                     i1l43:
  9567     17FF  0008               	return
  9568     1800                     __end_ofi1_lcd_goto:
  9569                           
  9570                           	psect	text47
  9571     169B                     __ptext47:	
  9572 ;; *************** function _lcd_clear *****************
  9573 ;; Defined at:
  9574 ;;		line 54 in file "src/lcd.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;		None
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      void 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0, pclath, cstack
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9588 ;;      Params:         0       0       0       0       0
  9589 ;;      Locals:         0       0       0       0       0
  9590 ;;      Temps:          2       0       0       0       0
  9591 ;;      Totals:         2       0       0       0       0
  9592 ;;Total ram usage:        2 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; Hardware stack levels required when called: 1
  9595 ;; This function calls:
  9596 ;;		i1_lcd_write
  9597 ;; This function is called by:
  9598 ;;		_adcon_amostra_print
  9599 ;;		_adcon_amostra_print_grava
  9600 ;;		_est_executa
  9601 ;;		_mq_mostra
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605     169B                     _lcd_clear:	
  9606                           ;psect for function _lcd_clear
  9607                           
  9608     169B                     i1l5079:	
  9609                           ;incstack = 0
  9610                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  9611                           
  9612                           
  9613                           ;src/lcd.c: 55:     RC0 = 0;
  9614     169B  1283               	bcf	3,5	;RP0=0, select bank0
  9615     169C  1303               	bcf	3,6	;RP1=0, select bank0
  9616     169D  1007               	bcf	7,0	;volatile
  9617     169E                     i1l5081:
  9618                           
  9619                           ;src/lcd.c: 56:     lcd_write(0);
  9620     169E  3000               	movlw	0
  9621     169F  160A  118A  274E  160A  118A  	fcall	i1_lcd_write
  9622                           
  9623                           ;src/lcd.c: 57:     lcd_write(1);
  9624     16A4  3001               	movlw	1
  9625     16A5  160A  118A  274E  160A  118A  	fcall	i1_lcd_write
  9626     16AA                     i1l5083:
  9627                           
  9628                           ;src/lcd.c: 58:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9629     16AA  3003               	movlw	3
  9630     16AB  00F3               	movwf	??_lcd_clear+1
  9631     16AC  3097               	movlw	151
  9632     16AD  00F2               	movwf	??_lcd_clear
  9633     16AE                     u583_27:
  9634     16AE  0BF2               	decfsz	??_lcd_clear,f
  9635     16AF  2EAE               	goto	u583_27
  9636     16B0  0BF3               	decfsz	??_lcd_clear+1,f
  9637     16B1  2EAE               	goto	u583_27
  9638     16B2  2EB3               	nop2
  9639     16B3                     i1l36:
  9640     16B3  0008               	return
  9641     16B4                     __end_of_lcd_clear:
  9642                           
  9643                           	psect	text48
  9644     174E                     __ptext48:	
  9645 ;; *************** function i1_lcd_write *****************
  9646 ;; Defined at:
  9647 ;;		line 160 in file "src/lcd.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  c               1    wreg     unsigned char 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;  c               1    1[COMMON] unsigned char 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9661 ;;      Params:         0       0       0       0       0
  9662 ;;      Locals:         1       0       0       0       0
  9663 ;;      Temps:          1       0       0       0       0
  9664 ;;      Totals:         2       0       0       0       0
  9665 ;;Total ram usage:        2 bytes
  9666 ;; Hardware stack levels used: 1
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_lcd_clear
  9671 ;;		i1_lcd_goto
  9672 ;;		i1_lcd_puts
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676     174E                     i1_lcd_write:	
  9677                           ;psect for function i1_lcd_write
  9678                           
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in i1_lcd_write: [wreg]
  9682                           ;i1lcd_write@c stored from wreg
  9683     174E  00F1               	movwf	i1lcd_write@c
  9684     174F                     i1l4799:
  9685                           
  9686                           ;src/lcd.c: 161:     if (c & 0b00000001) {
  9687     174F  1C71               	btfss	i1lcd_write@c,0
  9688     1750  2F52               	goto	u426_21
  9689     1751  2F53               	goto	u426_20
  9690     1752                     u426_21:
  9691     1752  2F57               	goto	i1l55
  9692     1753                     u426_20:
  9693     1753                     i1l4801:
  9694                           
  9695                           ;src/lcd.c: 162:         RC2 = 1;
  9696     1753  1283               	bcf	3,5	;RP0=0, select bank0
  9697     1754  1303               	bcf	3,6	;RP1=0, select bank0
  9698     1755  1507               	bsf	7,2	;volatile
  9699                           
  9700                           ;src/lcd.c: 163:     } else {
  9701     1756  2F5A               	goto	i1l56
  9702     1757                     i1l55:
  9703                           
  9704                           ;src/lcd.c: 164:         RC2 = 0;
  9705     1757  1283               	bcf	3,5	;RP0=0, select bank0
  9706     1758  1303               	bcf	3,6	;RP1=0, select bank0
  9707     1759  1107               	bcf	7,2	;volatile
  9708     175A                     i1l56:	
  9709                           ;src/lcd.c: 165:     }
  9710                           
  9711                           
  9712                           ;src/lcd.c: 166:     if (c & 0b00000010) {
  9713     175A  1CF1               	btfss	i1lcd_write@c,1
  9714     175B  2F5D               	goto	u427_21
  9715     175C  2F5E               	goto	u427_20
  9716     175D                     u427_21:
  9717     175D  2F60               	goto	i1l57
  9718     175E                     u427_20:
  9719     175E                     i1l4803:
  9720                           
  9721                           ;src/lcd.c: 167:         RB2 = 1;
  9722     175E  1506               	bsf	6,2	;volatile
  9723                           
  9724                           ;src/lcd.c: 168:     } else {
  9725     175F  2F61               	goto	i1l58
  9726     1760                     i1l57:
  9727                           
  9728                           ;src/lcd.c: 169:         RB2 = 0;
  9729     1760  1106               	bcf	6,2	;volatile
  9730     1761                     i1l58:	
  9731                           ;src/lcd.c: 170:     }
  9732                           
  9733                           
  9734                           ;src/lcd.c: 171:     if (c & 0b00000100) {
  9735     1761  1D71               	btfss	i1lcd_write@c,2
  9736     1762  2F64               	goto	u428_21
  9737     1763  2F65               	goto	u428_20
  9738     1764                     u428_21:
  9739     1764  2F67               	goto	i1l59
  9740     1765                     u428_20:
  9741     1765                     i1l4805:
  9742                           
  9743                           ;src/lcd.c: 172:         RB1 = 1;
  9744     1765  1486               	bsf	6,1	;volatile
  9745                           
  9746                           ;src/lcd.c: 173:     } else {
  9747     1766  2F68               	goto	i1l60
  9748     1767                     i1l59:
  9749                           
  9750                           ;src/lcd.c: 174:         RB1 = 0;
  9751     1767  1086               	bcf	6,1	;volatile
  9752     1768                     i1l60:	
  9753                           ;src/lcd.c: 175:     }
  9754                           
  9755                           
  9756                           ;src/lcd.c: 176:     if (c & 0b00001000) {
  9757     1768  1DF1               	btfss	i1lcd_write@c,3
  9758     1769  2F6B               	goto	u429_21
  9759     176A  2F6C               	goto	u429_20
  9760     176B                     u429_21:
  9761     176B  2F6E               	goto	i1l61
  9762     176C                     u429_20:
  9763     176C                     i1l4807:
  9764                           
  9765                           ;src/lcd.c: 177:         RB0 = 1;
  9766     176C  1406               	bsf	6,0	;volatile
  9767                           
  9768                           ;src/lcd.c: 178:     } else {
  9769     176D  2F6F               	goto	i1l4809
  9770     176E                     i1l61:
  9771                           
  9772                           ;src/lcd.c: 179:         RB0 = 0;
  9773     176E  1006               	bcf	6,0	;volatile
  9774     176F                     i1l4809:
  9775                           
  9776                           ;src/lcd.c: 181:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9777     176F  300D               	movlw	13
  9778     1770  00F0               	movwf	??i1_lcd_write
  9779     1771                     u584_27:
  9780     1771  0BF0               	decfsz	??i1_lcd_write,f
  9781     1772  2F71               	goto	u584_27
  9782     1773                     i1l4811:
  9783                           
  9784                           ;src/lcd.c: 182:     RC1 = 1;
  9785     1773  1283               	bcf	3,5	;RP0=0, select bank0
  9786     1774  1303               	bcf	3,6	;RP1=0, select bank0
  9787     1775  1487               	bsf	7,1	;volatile
  9788     1776                     i1l4813:
  9789                           
  9790                           ;src/lcd.c: 183:     RC1 = 0;
  9791     1776  1087               	bcf	7,1	;volatile
  9792     1777                     i1l63:
  9793     1777  0008               	return
  9794     1778                     __end_ofi1_lcd_write:
  9795                           
  9796                           	psect	text49
  9797     1728                     __ptext49:	
  9798 ;; *************** function _eeprom_le_word *****************
  9799 ;; Defined at:
  9800 ;;		line 9 in file "src/eeprom.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  end             1    wreg     unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  end             1    5[COMMON] unsigned char 
  9805 ;;  temp_int        2    6[COMMON] unsigned int 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  2    1[COMMON] unsigned int 
  9808 ;; Registers used:
  9809 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9815 ;;      Params:         2       0       0       0       0
  9816 ;;      Locals:         3       0       0       0       0
  9817 ;;      Temps:          2       0       0       0       0
  9818 ;;      Totals:         7       0       0       0       0
  9819 ;;Total ram usage:        7 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 1
  9822 ;; This function calls:
  9823 ;;		i1_eeprom_read
  9824 ;; This function is called by:
  9825 ;;		_est_executa
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829     1728                     _eeprom_le_word:	
  9830                           ;psect for function _eeprom_le_word
  9831                           
  9832                           
  9833                           ;incstack = 0
  9834                           ; Regs used in _eeprom_le_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9835                           ;eeprom_le_word@end stored from wreg
  9836     1728  00F5               	movwf	eeprom_le_word@end
  9837     1729                     i1l5113:
  9838     1729                     i1l5115:
  9839                           
  9840                           ;src/eeprom.c: 11:     temp_int = eeprom_read(end+1);
  9841     1729  0875               	movf	eeprom_le_word@end,w
  9842     172A  3E01               	addlw	1
  9843     172B  160A  118A  2655  160A  118A  	fcall	i1_eeprom_read
  9844     1730  00F3               	movwf	??_eeprom_le_word
  9845     1731  01F4               	clrf	??_eeprom_le_word+1
  9846     1732  0873               	movf	??_eeprom_le_word,w
  9847     1733  00F6               	movwf	eeprom_le_word@temp_int
  9848     1734  0874               	movf	??_eeprom_le_word+1,w
  9849     1735  00F7               	movwf	eeprom_le_word@temp_int+1
  9850     1736                     i1l5117:
  9851                           
  9852                           ;src/eeprom.c: 12:     temp_int = temp_int + (uint16_t) (eeprom_read(end) << 8);
  9853     1736  0875               	movf	eeprom_le_word@end,w
  9854     1737  160A  118A  2655  160A  118A  	fcall	i1_eeprom_read
  9855     173C  00F3               	movwf	??_eeprom_le_word
  9856     173D  01F4               	clrf	??_eeprom_le_word+1
  9857     173E  0873               	movf	??_eeprom_le_word,w
  9858     173F  00F4               	movwf	??_eeprom_le_word+1
  9859     1740  01F3               	clrf	??_eeprom_le_word
  9860     1741  0876               	movf	eeprom_le_word@temp_int,w
  9861     1742  0773               	addwf	??_eeprom_le_word,w
  9862     1743  00F6               	movwf	eeprom_le_word@temp_int
  9863     1744  0877               	movf	eeprom_le_word@temp_int+1,w
  9864     1745  1803               	skipnc
  9865     1746  0A77               	incf	eeprom_le_word@temp_int+1,w
  9866     1747  0774               	addwf	??_eeprom_le_word+1,w
  9867     1748  00F7               	movwf	eeprom_le_word@temp_int+1
  9868     1749                     i1l5119:
  9869                           
  9870                           ;src/eeprom.c: 13:     return temp_int;
  9871     1749  0877               	movf	eeprom_le_word@temp_int+1,w
  9872     174A  00F2               	movwf	?_eeprom_le_word+1
  9873     174B  0876               	movf	eeprom_le_word@temp_int,w
  9874     174C  00F1               	movwf	?_eeprom_le_word
  9875     174D                     i1l184:
  9876     174D  0008               	return
  9877     174E                     __end_of_eeprom_le_word:
  9878                           
  9879                           	psect	text50
  9880     1655                     __ptext50:	
  9881 ;; *************** function i1_eeprom_read *****************
  9882 ;; Defined at:
  9883 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  addr            1    wreg     unsigned char 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  addr            1    0[COMMON] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      unsigned char 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0, btemp+1
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9897 ;;      Params:         0       0       0       0       0
  9898 ;;      Locals:         1       0       0       0       0
  9899 ;;      Temps:          0       0       0       0       0
  9900 ;;      Totals:         1       0       0       0       0
  9901 ;;Total ram usage:        1 bytes
  9902 ;; Hardware stack levels used: 1
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_eeprom_le_word
  9907 ;;		_rs232_transmite
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911     1655                     i1_eeprom_read:	
  9912                           ;psect for function i1_eeprom_read
  9913                           
  9914                           
  9915                           ;incstack = 0
  9916                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0+btemp+1]
  9917                           ;i1eeprom_read@addr stored from wreg
  9918     1655  00F0               	movwf	i1eeprom_read@addr
  9919     1656                     i1l708:	
  9920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 8:  do
  9921                           
  9922     1656  0064               	clrwdt	;# 
  9923     1657  1683               	bsf	3,5	;RP0=1, select bank3
  9924     1658  1703               	bsf	3,6	;RP1=1, select bank3
  9925     1659  188C               	btfsc	12,1	;volsfr
  9926     165A  2E5C               	goto	u472_21
  9927     165B  2E5D               	goto	u472_20
  9928     165C                     u472_21:
  9929     165C  2E56               	goto	i1l708
  9930     165D                     u472_20:
  9931     165D                     i1l5055:
  9932                           
  9933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  9934     165D  0870               	movf	i1eeprom_read@addr,w
  9935     165E  1283               	bcf	3,5	;RP0=0, select bank2
  9936     165F  1703               	bsf	3,6	;RP1=1, select bank2
  9937     1660  008D               	movwf	13	;volatile
  9938     1661  303F               	movlw	63
  9939     1662  00FF               	movwf	btemp+1
  9940     1663  087F               	movf	btemp+1,w
  9941     1664  1683               	bsf	3,5	;RP0=1, select bank3
  9942     1665  1703               	bsf	3,6	;RP1=1, select bank3
  9943     1666  058C               	andwf	12,f	;volsfr
  9944     1667  140C               	bsf	12,0	;volsfr
  9945     1668  1283               	bcf	3,5	;RP0=0, select bank2
  9946     1669  1703               	bsf	3,6	;RP1=1, select bank2
  9947     166A  080C               	movf	12,w	;volatile
  9948     166B                     i1l710:
  9949     166B  0008               	return
  9950     166C                     __end_ofi1_eeprom_read:
  9951                           
  9952                           	psect	text51
  9953     1640                     __ptext51:	
  9954 ;; *************** function ___bmul *****************
  9955 ;; Defined at:
  9956 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\Umul8.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  multiplier      1    wreg     unsigned char 
  9959 ;;  multiplicand    1    0[COMMON] unsigned char 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;  multiplier      1    2[COMMON] unsigned char 
  9962 ;;  product         1    1[COMMON] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      unsigned char 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0, btemp+1
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9972 ;;      Params:         1       0       0       0       0
  9973 ;;      Locals:         2       0       0       0       0
  9974 ;;      Temps:          0       0       0       0       0
  9975 ;;      Totals:         3       0       0       0       0
  9976 ;;Total ram usage:        3 bytes
  9977 ;; Hardware stack levels used: 1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_est_executa
  9982 ;;		_adcon_amostra_print_grava
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986     1640                     ___bmul:	
  9987                           ;psect for function ___bmul
  9988                           
  9989                           
  9990                           ;incstack = 0
  9991                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  9992                           ;___bmul@multiplier stored from wreg
  9993     1640  00F2               	movwf	___bmul@multiplier
  9994     1641                     i1l5127:
  9995     1641  01F1               	clrf	___bmul@product
  9996     1642                     i1l5129:
  9997     1642  1C72               	btfss	___bmul@multiplier,0
  9998     1643  2E45               	goto	u481_21
  9999     1644  2E46               	goto	u481_20
 10000     1645                     u481_21:
 10001     1645  2E4A               	goto	i1l5133
 10002     1646                     u481_20:
 10003     1646                     i1l5131:
 10004     1646  0870               	movf	___bmul@multiplicand,w
 10005     1647  00FF               	movwf	btemp+1
 10006     1648  087F               	movf	btemp+1,w
 10007     1649  07F1               	addwf	___bmul@product,f
 10008     164A                     i1l5133:
 10009     164A  1003               	clrc
 10010     164B  0DF0               	rlf	___bmul@multiplicand,f
 10011     164C                     i1l5135:
 10012     164C  1003               	clrc
 10013     164D  0CF2               	rrf	___bmul@multiplier,f
 10014     164E                     i1l5137:
 10015     164E  0872               	movf	___bmul@multiplier,w
 10016     164F  1D03               	btfss	3,2
 10017     1650  2E52               	goto	u482_21
 10018     1651  2E53               	goto	u482_20
 10019     1652                     u482_21:
 10020     1652  2E42               	goto	i1l5129
 10021     1653                     u482_20:
 10022     1653                     i1l5139:
 10023     1653  0871               	movf	___bmul@product,w
 10024     1654                     i1l795:
 10025     1654  0008               	return
 10026     1655                     __end_of___bmul:
 10027                           
 10028                           	psect	text52
 10029     1703                     __ptext52:	
 10030 ;; *************** function _btns_testa *****************
 10031 ;; Defined at:
 10032 ;;		line 29 in file "src/botoes.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      enum E1232
 10039 ;; Registers used:
 10040 ;;		wreg
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10046 ;;      Params:         0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0
 10048 ;;      Temps:          2       0       0       0       0
 10049 ;;      Totals:         2       0       0       0       0
 10050 ;;Total ram usage:        2 bytes
 10051 ;; Hardware stack levels used: 1
 10052 ;; This function calls:
 10053 ;;		Nothing
 10054 ;; This function is called by:
 10055 ;;		_handler
 10056 ;; This function uses a non-reentrant model
 10057 ;;
 10058                           
 10059     1703                     _btns_testa:	
 10060                           ;psect for function _btns_testa
 10061                           
 10062     1703                     i1l5589:	
 10063                           ;incstack = 0
 10064                           ; Regs used in _btns_testa: [wreg]
 10065                           
 10066                           
 10067                           ;src/botoes.c: 31:     if(RB4 == 0) {
 10068     1703  1283               	bcf	3,5	;RP0=0, select bank0
 10069     1704  1303               	bcf	3,6	;RP1=0, select bank0
 10070     1705  1A06               	btfsc	6,4	;volatile
 10071     1706  2F08               	goto	u528_21
 10072     1707  2F09               	goto	u528_20
 10073     1708                     u528_21:
 10074     1708  2F0B               	goto	i1l173
 10075     1709                     u528_20:
 10076     1709                     i1l5591:
 10077                           
 10078                           ;src/botoes.c: 32:         return BTN_START;
 10079     1709  3001               	movlw	1
 10080     170A  2F27               	goto	i1l174
 10081     170B                     i1l173:	
 10082                           ;src/botoes.c: 33:     }
 10083                           
 10084                           
 10085                           ;src/botoes.c: 34:     if(RB5 == 0) {
 10086     170B  1A86               	btfsc	6,5	;volatile
 10087     170C  2F0E               	goto	u529_21
 10088     170D  2F0F               	goto	u529_20
 10089     170E                     u529_21:
 10090     170E  2F11               	goto	i1l175
 10091     170F                     u529_20:
 10092     170F                     i1l5595:
 10093                           
 10094                           ;src/botoes.c: 35:         return BTN_STOP;
 10095     170F  3002               	movlw	2
 10096     1710  2F27               	goto	i1l174
 10097     1711                     i1l175:	
 10098                           ;src/botoes.c: 36:     }
 10099                           
 10100                           
 10101                           ;src/botoes.c: 37:     if(RB6 == 0) {
 10102     1711  1B06               	btfsc	6,6	;volatile
 10103     1712  2F14               	goto	u530_21
 10104     1713  2F15               	goto	u530_20
 10105     1714                     u530_21:
 10106     1714  2F17               	goto	i1l176
 10107     1715                     u530_20:
 10108     1715                     i1l5599:
 10109                           
 10110                           ;src/botoes.c: 38:         return BTN_UP;
 10111     1715  3003               	movlw	3
 10112     1716  2F27               	goto	i1l174
 10113     1717                     i1l176:	
 10114                           ;src/botoes.c: 39:     }
 10115                           
 10116                           
 10117                           ;src/botoes.c: 40:     if(RB7 == 0) {
 10118     1717  1B86               	btfsc	6,7	;volatile
 10119     1718  2F1A               	goto	u531_21
 10120     1719  2F1B               	goto	u531_20
 10121     171A                     u531_21:
 10122     171A  2F1D               	goto	i1l5607
 10123     171B                     u531_20:
 10124     171B                     i1l5603:
 10125                           
 10126                           ;src/botoes.c: 41:         return BTN_DOWN;
 10127     171B  3004               	movlw	4
 10128     171C  2F27               	goto	i1l174
 10129     171D                     i1l5607:
 10130                           
 10131                           ;src/botoes.c: 43:     _delay((unsigned long)((100)*(4000000/4000.0)));
 10132     171D  3082               	movlw	130
 10133     171E  00F1               	movwf	??_btns_testa+1
 10134     171F  30DD               	movlw	221
 10135     1720  00F0               	movwf	??_btns_testa
 10136     1721                     u585_27:
 10137     1721  0BF0               	decfsz	??_btns_testa,f
 10138     1722  2F21               	goto	u585_27
 10139     1723  0BF1               	decfsz	??_btns_testa+1,f
 10140     1724  2F21               	goto	u585_27
 10141     1725  2F26               	nop2
 10142                           
 10143                           ;src/botoes.c: 44:     return 0;
 10144     1726  3000               	movlw	0
 10145     1727                     i1l174:
 10146     1727  0008               	return
 10147     1728                     __end_of_btns_testa:
 10148     007E                     btemp	set	126	;btemp
 10149     007E                     wtemp0	set	126
 10150                           
 10151                           	psect	idloc
 10152                           
 10153                           ;Config register IDLOC0 @ 0x2000
 10154                           ;	unspecified, using default values
 10155     2000                     	org	8192
 10156     2000  3FFF               	dw	16383
 10157                           
 10158                           ;Config register IDLOC1 @ 0x2001
 10159                           ;	unspecified, using default values
 10160     2001                     	org	8193
 10161     2001  3FFF               	dw	16383
 10162                           
 10163                           ;Config register IDLOC2 @ 0x2002
 10164                           ;	unspecified, using default values
 10165     2002                     	org	8194
 10166     2002  3FFF               	dw	16383
 10167                           
 10168                           ;Config register IDLOC3 @ 0x2003
 10169                           ;	unspecified, using default values
 10170     2003                     	org	8195
 10171     2003  3FFF               	dw	16383
 10172                           
 10173                           	psect	config
 10174                           
 10175                           ;Config register CONFIG1 @ 0x2007
 10176                           ;	Oscillator Selection bits
 10177                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10178                           ;	Watchdog Timer Enable bit
 10179                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10180                           ;	Power-up Timer Enable bit
 10181                           ;	PWRTE = ON, PWRT enabled
 10182                           ;	RE3/MCLR pin function select bit
 10183                           ;	MCLRE = 0x1, unprogrammed default
 10184                           ;	Code Protection bit
 10185                           ;	CP = OFF, Program memory code protection is disabled
 10186                           ;	Data Code Protection bit
 10187                           ;	CPD = 0x1, unprogrammed default
 10188                           ;	Brown Out Reset Selection bits
 10189                           ;	BOREN = OFF, BOR disabled
 10190                           ;	Internal External Switchover bit
 10191                           ;	IESO = 0x1, unprogrammed default
 10192                           ;	Fail-Safe Clock Monitor Enabled bit
 10193                           ;	FCMEN = 0x1, unprogrammed default
 10194                           ;	Low Voltage Programming Enable bit
 10195                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10196                           ;	In-Circuit Debugger Mode bit
 10197                           ;	DEBUG = 0x1, unprogrammed default
 10198     2007                     	org	8199
 10199     2007  2CE1               	dw	11489
 10200                           
 10201                           ;Config register CONFIG2 @ 0x2008
 10202                           ;	unspecified, using default values
 10203                           ;	Brown-out Reset Selection bit
 10204                           ;	BOR4V = 0x1, unprogrammed default
 10205                           ;	Flash Program Memory Self Write Enable bits
 10206                           ;	WRT = 0x3, unprogrammed default
 10207     2008                     	org	8200
 10208     2008  3FFF               	dw	16383

Data Sizes:
    Strings     310
    Constant    172
    Data        2
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      78
    BANK1            80     14      76
    BANK3            96      7      23
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@str	PTR const unsigned char  size(2) Largest target is 20
		 -> adcon_print@temp_str(BANK0[9]), est_executa@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), STR_1(CODE[14]), 
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_21(CODE[12]), 
		 -> STR_23(CODE[12]), STR_26(CODE[12]), STR_27(CODE[12]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_46(CODE[20]), 
		 -> STR_47(CODE[2]), STR_48(CODE[13]), STR_49(CODE[12]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_cfg_quant_sensores$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_cfg_quant_sensores$itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_cfg_quant_sensores_itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_cfg_tempo_amostra$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_cfg_tempo_amostra$itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_cfg_tempo_amostra_itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_confirma_index@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), menu_principal(BANK1[5]), 

    menu_confirma_index@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_confirma_index@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_dec_index@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), menu_principal(BANK1[5]), 

    menu_dec_index@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_dec_index@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_get_index_nav@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), menu_principal(BANK1[5]), 

    menu_get_index_nav@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_get_index_nav@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_get_value_active@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), 

    menu_get_value_active@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_get_value_active@menu$itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_get_value_active@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_inc_index@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), menu_principal(BANK1[5]), 

    menu_inc_index@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_inc_index@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_init@itens	PTR const struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_init@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), menu_principal(BANK1[5]), 

    menu_init@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_init@menu$itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_init@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_principal$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_principal$itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_principal_itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_restore_index@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), menu_cfg_tempo_amostra(BANK1[5]), 

    menu_restore_index@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_restore_index@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_set_value_indexes@menu	PTR struct . size(1) Largest target is 5
		 -> menu_cfg_quant_sensores(BANK1[5]), 

    menu_set_value_indexes@menu$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    menu_set_value_indexes@menu$itens$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    menu_set_value_indexes@menu$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    S347$str_text	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[9]), STR_11(CODE[11]), STR_12(CODE[11]), STR_13(CODE[11]), 
		 -> STR_14(CODE[6]), STR_15(CODE[7]), STR_16(CODE[7]), STR_17(CODE[6]), 
		 -> STR_18(CODE[7]), STR_19(CODE[7]), STR_20(CODE[7]), STR_28(CODE[11]), 
		 -> STR_29(CODE[14]), STR_3(CODE[11]), STR_30(CODE[12]), STR_31(CODE[10]), 
		 -> STR_32(CODE[9]), STR_33(CODE[16]), STR_34(CODE[16]), STR_35(CODE[9]), 
		 -> STR_36(CODE[11]), STR_37(CODE[11]), STR_38(CODE[11]), STR_39(CODE[6]), 
		 -> STR_4(CODE[14]), STR_40(CODE[7]), STR_41(CODE[7]), STR_42(CODE[6]), 
		 -> STR_43(CODE[7]), STR_44(CODE[7]), STR_45(CODE[7]), STR_5(CODE[12]), 
		 -> STR_6(CODE[10]), STR_7(CODE[9]), STR_8(CODE[16]), STR_9(CODE[16]), 

    S350$itens	PTR struct . size(2) Largest target is 28
		 -> menu_cfg_quant_sensores_itens(CODE[16]), menu_cfg_tempo_amostra_itens(CODE[28]), menu_principal_itens(CODE[28]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[9]), STR_22(CODE[9]), STR_24(CODE[10]), STR_25(CODE[10]), 
		 -> STR_50(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> adcon_print@temp_str(BANK0[9]), est_executa@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _handler in COMMON

    _handler->_adcon_amostra_print_grava
    _rs232_transmite->i1_eeprom_read
    _est_maquina->_est_estado_menu_conf_quant_sensores
    _est_maquina->_est_estado_menu_conf_tempo_amostra
    _est_maquina->_est_estado_ver_todos
    _est_estado_menu_principal->_adcon_amostra_print_grava
    _adcon_amostra_print_grava->_adcon_le_sensor
    _adcon_amostra_print->_adcon_le_sensor
    _adcon_print->_div
    _div->___awdiv
    _est_executa->___lwmod
    i1_lcd_puts->i1_lcd_write
    i1_eeprom_grava_word->i1_eeprom_write
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_goto_sensor->i1_lcd_goto
    i1_lcd_goto->i1_lcd_write
    _lcd_clear->i1_lcd_write
    _eeprom_le_word->i1_eeprom_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _handler in BANK0

    _handler->_est_maquina
    _est_maquina->_est_estado_menu_principal
    _est_estado_ver_todos->_est_executa
    _est_estado_mostra_max_min->_est_executa
    _est_estado_monitora->_est_executa
    _est_estado_menu_principal->_est_executa
    _adcon_amostra_print_grava->_adcon_print
    _adcon_amostra_print->_adcon_print
    _adcon_print->_sprintf
    _est_estado_menu_limpar->_est_executa
    _est_estado_menu_conf_tempo_amostra->_est_executa
    _est_estado_menu_conf_quant_sensores->_est_executa
    _est_estado_inicial->_est_executa
    _est_executa->_sprintf

Critical Paths under _main in BANK1

    _main->_menu_set_value_indexes
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write
    _lcd_goto->_lcd_write
    _eeprom_grava_word->_eeprom_write

Critical Paths under _handler in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_menu_set_value_indexes

Critical Paths under _handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    6297
                                              2 BANK3      5     5      0
                         _adcon_init
                          _btns_init
                  _eeprom_grava_word
                        _eeprom_read
                       _eeprom_write
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                          _menu_init
             _menu_set_value_indexes
                         _rs232_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rs232_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu_set_value_indexes                              13    11      2     442
                                              3 BANK1     11     9      2
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _menu_init                                            4     1      3     834
                                              3 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2    1364
                                              5 BANK1      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     124
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     3      1     476
                                              5 BANK1      4     3      1
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0     124
                                              3 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      31
                                              3 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_grava_word                                    3     1      2    1836
                                              5 BANK1      3     1      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1    1057
                                              3 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _btns_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcon_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _handler                                              9     9      0  111106
                                             63 BANK0      6     6      0
                                              0 BANK1      3     3      0
                _adcon_amostra_print
          _adcon_amostra_print_grava
                         _btns_testa
                        _est_maquina
                    _rs232_transmite
 ---------------------------------------------------------------------------------
 (4) _rs232_transmite                                      7     7      0     338
                                              1 COMMON     7     7      0
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (4) _est_maquina                                          3     3      0   94563
                                             60 BANK0      3     3      0
                 _est_estado_inicial
_est_estado_menu_conf_quant_sensores
 _est_estado_menu_conf_tempo_amostra
             _est_estado_menu_limpar
          _est_estado_menu_principal
                _est_estado_monitora
          _est_estado_mostra_max_min
               _est_estado_ver_todos
 ---------------------------------------------------------------------------------
 (5) _est_estado_ver_todos                                 3     3      0    9334
                                             12 COMMON     2     2      0
                                             56 BANK0      1     1      0
                        _est_executa
 ---------------------------------------------------------------------------------
 (5) _est_estado_mostra_max_min                            1     1      0    9334
                                             12 COMMON     1     1      0
                        _est_executa
 ---------------------------------------------------------------------------------
 (5) _est_estado_monitora                                  1     1      0    9334
                                             12 COMMON     1     1      0
                        _est_executa
 ---------------------------------------------------------------------------------
 (5) _est_estado_menu_principal                            4     4      0   26252
                                             56 BANK0      4     4      0
                _adcon_amostra_print
          _adcon_amostra_print_grava
                        _est_executa
                _menu_confirma_index
                     _menu_dec_index
                 _menu_get_index_nav
                     _menu_inc_index
 ---------------------------------------------------------------------------------
 (6) _adcon_amostra_print_grava                            9     9      0    9170
                                             13 COMMON     1     1      0
                                             39 BANK0      8     8      0
                             ___bmul
                    _adcon_le_sensor
                        _adcon_print
                          _lcd_clear
                i1_eeprom_grava_word
                     i1_eeprom_write
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (6) _adcon_amostra_print                                  3     3      0    6936
                                             39 BANK0      3     3      0
                    _adcon_le_sensor
                        _adcon_print
                          _lcd_clear
 ---------------------------------------------------------------------------------
 (7) _adcon_print                                         20    17      3    6543
                                             19 BANK0     20    17      3
                                _div
                    _lcd_goto_sensor
                            _sprintf
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (8) _div                                                  8     4      4    1613
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     613
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     625
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _adcon_le_sensor                                     13    11      2     136
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (5) _est_estado_menu_limpar                               1     1      0    9334
                                             12 COMMON     1     1      0
                        _est_executa
 ---------------------------------------------------------------------------------
 (5) _est_estado_menu_conf_tempo_amostra                   3     3      0   10881
                                             12 COMMON     2     2      0
                                             56 BANK0      1     1      0
                        _est_executa
                _menu_confirma_index
                     _menu_dec_index
              _menu_get_value_active
                     _menu_inc_index
                 _menu_restore_index
                i1_eeprom_grava_word
 ---------------------------------------------------------------------------------
 (5) _est_estado_menu_conf_quant_sensores                  4     4      0   10512
                                             12 COMMON     2     2      0
                                             56 BANK0      1     1      0
                        _est_executa
                _menu_confirma_index
                     _menu_dec_index
              _menu_get_value_active
                     _menu_inc_index
                 _menu_restore_index
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (6) _menu_restore_index                                   1     1      0     134
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _menu_inc_index                                       3     3      0     232
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _menu_get_value_active                               10     8      2     134
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (6) _menu_dec_index                                       1     1      0     201
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _menu_confirma_index                                  1     1      0     170
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _est_estado_inicial                                   1     1      0    9303
                        _est_executa
 ---------------------------------------------------------------------------------
 (6) _est_executa                                         39    39      0    9303
                                             19 BANK0     37    37      0
                             ___bmul
                            ___lwdiv
                            ___lwmod
                     _eeprom_le_word
                          _lcd_clear
                    _lcd_goto_sensor
                 _menu_get_index_nav
                            _sprintf
                i1_eeprom_grava_word
                     i1_eeprom_write
                         i1_lcd_goto
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (7) i1_lcd_puts                                           4     2      2     674
                                              2 COMMON     4     2      2
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (7) i1_eeprom_grava_word                                  3     1      2     676
                                              2 COMMON     3     1      2
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (7) i1_eeprom_write                                       2     1      1     307
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             27    19      8    3310
                                              0 BANK0     19    11      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     952
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     961
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) _menu_get_index_nav                                   1     1      0     175
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _lcd_goto_sensor                                      2     2      0     318
                                              6 COMMON     2     2      0
                         i1_lcd_goto
 ---------------------------------------------------------------------------------
 (7) i1_lcd_goto                                           4     3      1     256
                                              2 COMMON     4     3      1
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (7) _lcd_clear                                            2     2      0     124
                                              2 COMMON     2     2      0
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (8) i1_lcd_write                                          2     2      0     124
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _eeprom_le_word                                       7     5      2     164
                                              1 COMMON     7     5      2
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (5) i1_eeprom_read                                        1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               3     2      1     230
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _btns_testa                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcon_init
   _btns_init
   _eeprom_grava_word
     _eeprom_write
   _eeprom_read
   _eeprom_write
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_write
   _lcd_puts
     _lcd_write
   _menu_init
   _menu_set_value_indexes
   _rs232_init
   _timer0_init

 _handler (ROOT)
   _adcon_amostra_print
     _adcon_le_sensor
     _adcon_print
       _div
         ___awdiv
         ___awmod
       _lcd_goto_sensor
         i1_lcd_goto
           i1_lcd_write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       i1_lcd_puts
         i1_lcd_write
     _lcd_clear
       i1_lcd_write
   _adcon_amostra_print_grava
     ___bmul
     _adcon_le_sensor
     _adcon_print
     _lcd_clear
     i1_eeprom_grava_word
       i1_eeprom_write
     i1_eeprom_write
     i1_lcd_puts
   _btns_testa
   _est_maquina
     _est_estado_inicial
       _est_executa
         ___bmul
         ___lwdiv
         ___lwmod
         _eeprom_le_word
           i1_eeprom_read
         _lcd_clear
         _lcd_goto_sensor
         _menu_get_index_nav
         _sprintf
         i1_eeprom_grava_word
         i1_eeprom_write
         i1_lcd_goto
         i1_lcd_puts
     _est_estado_menu_conf_quant_sensores
       _est_executa
       _menu_confirma_index
       _menu_dec_index
       _menu_get_value_active
       _menu_inc_index
       _menu_restore_index
       i1_eeprom_write
     _est_estado_menu_conf_tempo_amostra
       _est_executa
       _menu_confirma_index
       _menu_dec_index
       _menu_get_value_active
       _menu_inc_index
       _menu_restore_index
       i1_eeprom_grava_word
     _est_estado_menu_limpar
       _est_executa
     _est_estado_menu_principal
       _adcon_amostra_print
       _adcon_amostra_print_grava
       _est_executa
       _menu_confirma_index
       _menu_dec_index
       _menu_get_index_nav
       _menu_inc_index
     _est_estado_monitora
       _est_executa
     _est_estado_mostra_max_min
       _est_executa
     _est_estado_ver_todos
       _est_executa
   _rs232_transmite
     i1_eeprom_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      7      17       9       24.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      E      4C       7       95.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Oct 08 19:49:07 2023

                 adcon_amostra_print_grava@i 004C                                menu_init@menu 00E4  
                        _menu_confirma_index 15DB                               menu_init@itens 00E1  
                                          pc 0002                      est_estado_inicial@botao 0070  
                             ___bmul@product 0071        __end_of_menu_cfg_quant_sensores_itens 03BC  
              _menu_cfg_quant_sensores_itens 03AC                                           l33 09A5  
                                         l43 0930                                           l60 09CE  
                                         l52 0D09                                           l61 09D8  
                                         l63 09E6                                           l55 09B1  
                                         l56 09B4                                           l57 09BE  
                                         l58 09C1                                           l59 09CB  
                               ___awdiv@sign 0075                          est_executa@endereco 004E  
                                         fsr 0004                       ??_est_estado_ver_todos 007C  
                    _cfg_tempo_amostra_atual 0069                                          l110 16CC  
                                        l170 08C2                                          l500 0639  
                                        l501 0639                                          l506 169A  
                                        l187 1682                                          l710 1702  
                                        l518 0E57                                          l609 15FD  
                                        l731 087B                                          l708 16E9  
                                        l734 088C                                          l727 085B  
                                        l728 085B                                          l594 16E5  
                                        _RB0 0030                                          _RB1 0031  
                                        _RC0 0038                                          _RB2 0032  
                                        _RC1 0039                                          _RC2 003A  
                                        _RB4 0034                                          _RB5 0035  
                                        _RB6 0036                                          _RB7 0037  
                                        _TX9 04C6                                          _div 0829  
                                        fsr0 0004                                          indf 0000  
                               ___awmod@sign 0075                                   i1_lcd_goto 17D2  
                                 i1_lcd_puts 0A2B                         ?_menu_confirma_index 0070  
                     i1eeprom_grava_word@end 0074                          est_executa@temp_int 004B  
                      _menu_get_value_active 08C3                                         ?_div 0078  
                                       l5341 09AD                                         l5351 09E2  
                                       l5343 09BA                                         l5361 0876  
                                       l5353 09E5                                         l5345 09C7  
                                       l5371 0885                                         l5363 087A  
                                       l5355 0861                                         l5611 16F2  
                                       l5347 09D4                                         l5339 09A9  
                                       l5531 096B                                         l5373 088B  
                                       l5365 087F                                         l5357 086D  
                                       l5349 09DB                                         l6237 0919  
                                       l5533 097B                                         l5701 0E3B  
                                       l5367 0883                                         l5359 0873  
                                       l5543 090F                                         l5535 08FD  
                                       l5711 168D                                         l5369 0884  
                                       l5545 0921                                         l5537 0901  
                                       l5561 0CCE                                         l5553 0CA1  
                                       l5713 1692                                         l5705 0E47  
                                       l5801 0509                                         l5571 16BC  
                                       l5547 0929                                         l5539 0908  
                                       l5563 0CE4                                         l5555 0CA5  
                                       l5707 0E4D                                         l5811 0532  
                                       l5803 0514                                         l5573 16BF  
                                       l5581 166F                                         l5565 0CEB  
                                       l5557 0CC1                                         l5709 1686  
                                       l5821 055A                                         l5813 0535  
                                       l5805 051D                                         l5575 16C0  
                                       l5583 088D                                         l5559 0CC7  
                                       l5567 0CF3                                         l5831 0596  
                                       l5823 055E                                         l5815 0538  
                                       l5807 0528                                         l5577 16C6  
                                       l5569 16B4                                         l5585 08B7  
                                       l5681 16E2                                         l5841 05B0  
                                       l5833 05A1                                         l5825 0567  
                                       l5817 0547                                         l5809 052D  
                                       l5579 16C9                                         l5587 08C1  
                                       l5675 16CD                                         l5691 15FB  
                                       l5683 15F1                                         l5851 05EC  
                                       l5843 05B6                                         l5827 0573  
                                       l5819 0552                                         l5677 16DF  
                                       l5693 15FC                                         l5685 15F5  
                                       l5861 0633                                         l5853 05F5  
                                       l5845 05BC                                         l5829 058A  
                                       l5695 0DE8                                         l5679 16E1  
                                       l5687 15F8                                         l5863 0638  
                                       l5855 0603                                         l5839 05A4  
                                       l5847 05C7                                         l5697 0DED  
                                       l5689 15F9                                         l5857 0611  
                                       l5849 05D9                                         l5699 0DEF  
                                       l5859 061F                                         l5797 04F4  
                                       l5799 04FE                                         STR_1 0400  
                                       STR_2 04B3                                         STR_3 0457  
                                       STR_4 03F2                                         STR_5 044B  
                                       STR_6 0497                                         STR_7 04A1  
                                       STR_8 03D2                                         STR_9 03E2  
                        est_executa@qtd_sens 004D                                         _BRGH 04C2  
                                       _CREN 00C4                                         _IOCB 0096  
                          ??_adcon_le_sensor 0072                                         u5000 09BA  
                                       u5001 09B9                                         u5010 09C7  
                                       u5011 09C6                                         u5020 09D4  
                                       u5021 09D3                                         u5030 0861  
                                       u5031 0860                                         u5040 087A  
                                       u5041 0879                                         u5050 088B  
                                       u5051 088A                                         u5230 0D09  
                                       u5231 0D08                                         u5240 0897  
                                       u5320 16F2                                         u5241 0893  
                                       u5321 16EF                                         u5225 0CBA  
                                       u5250 08A1                                         u5251 089D  
                                       u5260 08AB                                         u5261 08A7  
                                       u5254 089A                                         u5350 0E3B  
                                       u5351 0E3A                                         _RBIE 005B  
                                       u5264 08A4                                         u5360 0E57  
                                       u5520 0552                                         _RBIF 0058  
                                       u5361 0E56                                         u5345 0E08  
                                       u5521 0551                                         u5274 08AE  
                                       u5530 05BC                                         i1l43 17FF  
                                       u5355 0E37                                         u5531 05BB  
                                       i1l60 1768                                         i1l36 16B3  
                                       i1l52 0A75                                         i1l61 176E  
                                       i1l46 02FF                                         i1l63 1777  
                                       i1l55 1757                                         i1l56 175A  
                                       i1l57 1760                                         i1l58 1761  
                                       i1l59 1767                                         u5707 0540  
                                       u5717 0CCB                                         u5727 0CE8  
                                       u5737 092D                                         u5747 09DF  
                                       u4990 09AD                                         u4991 09AC  
                                       _TMR0 0001                                         _SPEN 00C7  
                                       _TXEN 04C5                                         _SYNC 04C4  
                                       _WPUB 0095                               ??_eeprom_write 00E2  
                                       _main 04F4                                         btemp 007E  
                                lcd_puts@cmd 00E6                                  lcd_puts@str 00E3  
                                       start 0012                             ??_menu_dec_index 0070  
                          ___bmul@multiplier 0072                                  i1_lcd_write 174E  
                   est_estado_monitora@botao 007C                      i1eeprom_grava_word@dado 0072  
                                      ??_div 007C                                 ?_est_executa 0070  
                               ?_est_maquina 0070                                        ?_main 0070  
                            __end_of___awdiv 0C38                                        _EEADR 010D  
                                      STR_10 04AA                                        STR_11 0462  
                                      STR_20 04C3                                        STR_12 046D  
                                      STR_13 0478                                        STR_21 043F  
                                      STR_22 04B3                                        STR_14 04E6  
                                      STR_30 044B                                        STR_23 043F  
                                      STR_15 04CA                                        STR_31 0497  
                                      STR_16 04D1                                        STR_24 048D  
                                      _BRG16 0C3B                                        STR_32 04A1  
                                      STR_40 04CA                                        STR_17 04EC  
                                      STR_25 0483                                        STR_33 03D2  
                                      STR_41 04D1                                        STR_18 04D8  
                                      STR_50 04BC                                        STR_26 0427  
                                      STR_34 03E2                                        STR_42 04EC  
                                      STR_19 04DF                                        STR_27 0433  
                                      STR_35 04AA                                        STR_43 04D8  
                                      STR_36 0462                                        STR_28 0457  
                                      STR_44 04DF                              __end_of___awmod 0B1B  
                                      STR_37 046D                                        STR_29 03F2  
                                      STR_45 04C3                                        STR_46 03BE  
                                      STR_38 0478                                        STR_47 04F2  
                                      STR_39 04E6                                        STR_48 040E  
                                      STR_49 041B                             _est_executa$1904 0053  
                           _est_executa$1905 0055                                        _ANSEL 0188  
                            ___awdiv@divisor 0070                              __end_of___lwdiv 0A2B  
                                      i1l131 0B73                                        i1l116 17D1  
                                      i1l134 0E7E                                        i1l126 0FFF  
                                      i1l119 0FF5                                        i1l311 07ED  
                                      i1l136 0E81                                        i1l315 160B  
                                      i1l139 0ECD                                        i1l173 170B  
                                      i1l174 1727                                        i1l350 0DE4  
                                      i1l334 0AC1                                        i1l175 1711  
                                      i1l319 07FC                                        i1l176 1717  
                                      i1l184 174D                                        i1l512 08F9  
                                      i1l600 0BD0                              __end_of___lwmod 096B  
                                      i1l530 15F0                                        i1l362 0D74  
                                      i1l338 1619                                        i1l187 162C  
                                      i1l291 15D2                                        i1l523 0828  
                                      i1l435 0F2E                                        i1l509 15CB  
                                      i1l533 15E5                                        i1l710 166B  
                                      i1l374 008F                                        i1l391 02DA  
                                      i1l375 0091                                        i1l527 163F  
                                      i1l439 0F4D                                        i1l288 0CA0  
                                      i1l731 1793                                        i1l708 1656  
                                      i1l734 17A4                                        i1l751 067D  
                                      i1l727 1779                                        i1l728 1779  
                                      i1l753 0655                                        i1l922 0C37  
                                      i1l765 0741                                        i1l935 0B1A  
                                      i1l795 1654                              ___awdiv@counter 0074  
                                      _RCREG 001A                                        _SPBRG 0099  
                                      _TRISA 0085                       _menu_set_value_indexes 0DE5  
                                      _TXREG 0019                              __end_of_handler 0F5A  
                      ??_menu_confirma_index 0070                             ??_menu_inc_index 0070  
                            __end_of_dpowers 031C            __end_of_est_estado_mostra_max_min 161A  
                                      _errno 00CA                                        div@rv 0020  
                       eeprom_grava_word@end 00E5                   __end_of_menu_restore_index 15F1  
                                      main@i 01A6                             _est_estado_atual 0068  
                               main@qtd_sens 01A5                                        pclath 000A  
                  lcd_goto_sensor@num_sensor 0077                                lcd_goto@linha 00E6  
                     menu_restore_index@menu 0070                                        status 0003  
                                      wtemp0 007E                              __end_of_sprintf 0742  
                __end_ofi1_eeprom_grava_word 162D                          adcon_print@temp_div 0043  
                            __initialization 0015                          adcon_print@temp_str 003A  
                               __end_of_main 063D                   __end_of_est_estado_inicial 15D3  
                                     ??_main 01A2                   ?_adcon_amostra_print_grava 0070  
                    adcon_print@valor_sensor 0033                       _est_estado_menu_limpar 15FE  
                                ?i1_lcd_goto 0072                                  ?i1_lcd_puts 0072  
                  menu_get_value_active@menu 0079                       ?_menu_get_value_active 0070  
                           ??_eeprom_le_word 0073                   __end_of_menu_get_index_nav 15CC  
                                     _ADRESH 001E                                       _ADRESL 009E  
                                     _EEDATA 010C                                       _EECON1 018C  
                                     _EECON2 018D                             ___awdiv@dividend 0072  
                                     _ANSELH 0189                                       i1l1041 0A2A  
                                     i1l1051 096A                                       i1l1220 0857  
                                     i1l5011 06CD                                       i1l5021 06E5  
                                     i1l5013 06D3                                       i1l5005 06A9  
                                     i1l5023 0715                                       i1l5015 06D9  
                                     i1l5031 073D                                       i1l5111 0B6A  
                                     i1l5103 0B1B                                       i1l5113 1729  
                                     i1l5025 071A                                       i1l5017 06DE  
                                     i1l5009 06C9                                       i1l5041 0A2F  
                                     i1l5201 0093                                       i1l5105 0B32  
                                     i1l5131 1646                                       i1l5115 1729  
                                     i1l5123 15C7                                       i1l5027 071E  
                                     i1l5019 06E2                                       i1l5051 0A5F  
                                     i1l5043 0A41                                       i1l5211 00B9  
                                     i1l5203 0098                                       i1l5107 0B49  
                                     i1l5133 164A                                       i1l5117 1736  
                                     i1l5029 0727                                       i1l5061 1785  
                                     i1l5045 0A47                                       i1l5053 0A65  
                                     i1l5221 0117                                       i1l5213 00BB  
                                     i1l5205 009F                                       i1l5109 0B62  
                                     i1l5135 164C                                       i1l5127 1641  
                                     i1l5055 165D                                       i1l5119 1749  
                                     i1l5071 179B                                       i1l5063 178B  
                                     i1l5143 161B                                       i1l5047 0A4B  
                                     i1l5039 0A2B                                       i1l5231 0138  
                                     i1l5223 011C                                       i1l5215 00ED  
                                     i1l5207 00A9                                       i1l5311 163A  
                                     i1l5151 17C5                                       i1l5137 164E  
                                     i1l5129 1642                                       i1l5081 169E  
                                     i1l5073 179C                                       i1l5065 178E  
                                     i1l5049 0A5B                                       i1l5241 018E  
                                     i1l5233 0144                                       i1l5217 0106  
                                     i1l5225 0120                                       i1l5209 00AB  
                                     i1l5321 081C                                       i1l5153 17CB  
                                     i1l5145 17A5                                       i1l5161 0F74  
                                     i1l5401 07AB                                       i1l5139 1653  
                                     i1l5083 16AA                                       i1l5075 179D  
                                     i1l5067 1792                                       i1l5059 177F  
                                     i1l5251 01D8                                       i1l5243 0197  
                                     i1l5235 014C                                       i1l5227 0127  
                                     i1l5219 010E                                       i1l5331 15DC  
                                     i1l5315 163E                                       i1l5307 162E  
                                     i1l5323 0823                                       i1l5091 0E7C  
                                     i1l5147 17AA                                       i1l5171 0F9A  
                                     i1l5163 0F76                                       i1l5155 0F5A  
                                     i1l5403 07B2                                       i1l5411 07DA  
                                     i1l5077 17A3                                       i1l5069 1797  
                                     i1l5261 01FF                                       i1l5253 01E2  
                                     i1l5245 019E                                       i1l5237 0156  
                                     i1l5229 012C                                       i1l5309 1636  
                                     i1l5333 15E7                                       i1l5501 0D2B  
                                     i1l5085 0E59                                       i1l5149 17AE  
                                     i1l5181 0FD1                                       i1l5173 0FA6  
                                     i1l5165 0F82                                       i1l5157 0F67  
                                     i1l5079 169B                                       i1l5263 0209  
                                     i1l5255 01E7                                       i1l5247 01B3  
                                     i1l5239 017C                                       i1l5335 08C4  
                                     i1l5327 0827                                       i1l5319 0804  
                                     i1l5503 0D32                                       i1l5087 0E61  
                                     i1l5191 0FF6                                       i1l5183 0FDC  
                                     i1l5175 0FB0                                       i1l5167 0F8C  
                                     i1l5159 0F6C                                       i1l5407 07B9  
                                     i1l5431 0A79                                       i1l4801 1753  
                                     i1l5281 0238                                       i1l5273 021F  
                                     i1l5265 0213                                       i1l5257 01F0  
                                     i1l5249 01C6                                       i1l5193 0041  
                                     i1l5505 0D3F                                       i1l5513 0D5E  
                                     i1l5097 0E85                                       i1l5089 0E77  
                                     i1l5177 0FBC                                       i1l5169 0F90  
                                     i1l5185 0FE2                                       i1l5425 07EF  
                                     i1l6241 0AB6                                       i1l5441 0A9A  
                                     i1l5433 0A7A                                       i1l5603 171B  
                                     i1l4811 1773                                       i1l4803 175E  
                                     i1l6251 02BC                                       i1l5291 0281  
                                     i1l5283 0242                                       i1l5275 0227  
                                     i1l5267 021C                                       i1l5259 01F8  
                                     i1l5195 0057                                       i1l5507 0D4F  
                                     i1l5099 0EB8                                       i1l5187 0FE8  
                                     i1l5179 0FCB                                       i1l6243 07C3  
                                     i1l5427 07F5                                       i1l5443 0AA0  
                                     i1l5435 0A7F                                       i1l4813 1776  
                                     i1l4805 1765                                       i1l4901 09EF  
                                     i1l6253 066F                                       i1l5293 028A  
                                     i1l5285 024B                                       i1l5277 022D  
                                     i1l5197 005C                                       i1l5509 0D57  
                                     i1l5461 15FF                                       i1l4821 0BDB  
                                     i1l5189 0FEC                                       i1l6245 07E2  
                                     i1l5381 0753                                       i1l5429 07F6  
                                     i1l5445 0AA7                                       i1l5437 0A81  
                                     i1l5621 0C4A                                       i1l5607 171D  
                                     i1l4807 176C                                       i1l6255 17ED  
                                     i1l4911 0A12                                       i1l4903 09F2  
                                     i1l5287 0250                                       i1l5279 0233  
                                     i1l5199 0065                                       i1l5375 15CC  
                                     i1l6247 0DD6                                       i1l5471 0D8B  
                                     i1l5463 1605                                       i1l4831 0BEC  
                                     i1l4823 0BDD                                       i1l4815 0BD1  
                                     i1l5391 077E                                       i1l5383 075A  
                                     i1l5439 0A88                                       i1l6239 0C83  
                                     i1l5631 0C6D                                       i1l5623 0C51  
                                     i1l5615 0C3B                                       i1l4809 176F  
                                     i1l4913 0A18                                       i1l4905 09F9  
                                     i1l5289 027C                                       i1l5297 02B4  
                                     i1l6249 0D66                                       i1l5481 0DC7  
                                     i1l5473 0D96                                       i1l5465 0D78  
                                     i1l4841 0C04                                       i1l4833 0BF2  
                                     i1l4825 0BE1                                       i1l4817 0BD2  
                                     i1l5393 078A                                       i1l5385 0767  
                                     i1l5377 0745                                       i1l5457 160D  
                                     i1l5449 0AAE                                       i1l5633 0C74  
                                     i1l5625 0C58                                       i1l5617 0C3C  
                                     i1l4915 0A19                                       i1l4907 09FD  
                                     i1l4931 0945                                       i1l4923 0931  
                                     i1l5299 02D6                                       i1l5475 0D9D  
                                     i1l5467 0D79                                       i1l4843 0C15  
                                     i1l4835 0BF5                                       i1l4851 0C29  
                                     i1l4827 0BE6                                       i1l4819 0BD6  
                                     i1l5395 0796                                       i1l5387 076E  
                                     i1l5379 0746                                       i1l5459 1613  
                                     i1l5627 0C5F                                       i1l5619 0C43  
                                     i1l5651 0B80                                       i1l4917 0A20  
                                     i1l4909 0A01                                       i1l4933 0949  
                                     i1l4925 0937                                       i1l4941 0966  
                                     i1l5493 0D0D                                       i1l5477 0DAA  
                                     i1l5469 0D84                                       i1l5485 0DCE  
                                     i1l4853 0C2E                                       i1l4845 0C1B  
                                     i1l4837 0BFC                                       i1l4829 0BEA  
                                     i1l4861 0AC3                                       i1l5397 079D  
                                     i1l5389 0777                                       i1l5629 0C66  
                                     i1l5637 0C7B                                       i1l5661 0B9F  
                                     i1l5653 0B87                                       i1l5645 0B74  
                                     i1l5591 1709                                       i1l4919 0A26  
                                     i1l4935 0953                                       i1l4927 093A  
                                     i1l5495 0D0E                                       i1l5479 0DBA  
                                     i1l4855 0C33                                       i1l4847 0C1C  
                                     i1l4839 0C00                                       i1l4871 0AD7  
                                     i1l4863 0AC7                                       i1l5399 07A4  
                                     i1l5671 0BC7                                       i1l5663 0BA7  
                                     i1l5655 0B8B                                       i1l5647 0B75  
                                     i1l4953 17E5                                       i1l4945 17D3  
                                     i1l4937 0959                                       i1l4929 0941  
                                     i1l5497 0D19                                       i1l4849 0C23  
                                     i1l4881 0AEF                                       i1l4873 0ADD  
                                     i1l4865 0ACC                                       i1l5665 0BAB  
                                     i1l5673 0BCA                                       i1l5657 0B93  
                                     i1l5649 0B7C                                       i1l5761 0EDA  
                                     i1l5595 170F                                       i1l4955 17F5  
                                     i1l4947 17D7                                       i1l4963 02DC  
                                     i1l4939 0960                                       i1l4971 0640  
                                     i1l5499 0D20                                       i1l4891 0B11  
                                     i1l4883 0AF9                                       i1l4875 0AE0  
                                     i1l4867 0ACE                                       i1l4859 0AC2  
                                     i1l5667 0BBB                                       i1l5659 0B96  
                                     i1l5771 0F0C                                       i1l5763 0EE0  
                                     i1l5589 1703                                       i1l4957 17FB  
                                     i1l4949 17DE                                       i1l4973 0643  
                                     i1l4893 0B16                                       i1l4885 0AFF  
                                     i1l4877 0AE7                                       i1l4869 0AD2  
                                     i1l4965 0829                                       i1l5669 0BBF  
                                     i1l5773 0F12                                       i1l5781 0F28  
                                     i1l5765 0EE5                                       i1l5757 0ECE  
                                     i1l5599 1715                                       i1l4799 174F  
                                     i1l4991 0691                                       i1l4983 0657  
                                     i1l4975 0649                                       i1l4887 0B06  
                                     i1l4879 0AEB                                       i1l4967 084F  
                                     i1l5791 0F41                                       i1l5783 0F30  
                                     i1l5775 0F18                                       i1l5767 0EE9  
                                     i1l5759 0ED4                                       i1l4897 09E7  
                                     i1l4993 0695                                       i1l4985 0681  
                                     i1l4977 064E                                       i1l4889 0B0C  
                                     i1l5793 0F46                                       i1l5777 0F1E  
                                     i1l5769 0EED                                       i1l5785 0F31  
                                     i1l4899 09E9                                       i1l4987 0689  
                                     i1l4995 069B                                       i1l4979 0653  
                                     i1l5795 0F4C                                       i1l5787 0F35  
                                     i1l5779 0F23                                       i1l4997 06A3  
                                     i1l4989 068D                                       i1l5789 0F39  
                                     i1l4999 06A7                                       u430_20 0BD6  
                                     u510_20 0A9A                                       u430_21 0BD5  
                                     u510_21 0A99                                       u510_25 0A96  
                                     u431_20 0BE1                                       u511_20 1613  
                                     u431_21 0BE0                                       u511_21 1612  
                                     u512_20 1605                                       u432_20 0BF2  
                                     u440_20 0AC7                                       u512_21 1604  
                                     u432_21 0BF1                                       u440_21 0AC6  
                                     u513_20 0D84                                       u441_20 0AD2  
                                     u513_21 0D83                                       u441_21 0AD1  
                                     u433_25 0BF6                                       u530_20 1715  
                                     u426_20 1753                                       u514_20 0D96  
                                     u434_20 0C04                                       u442_20 0ADD  
                                     u506_20 0753                                       u530_21 1714  
                                     u426_21 1752                                       u514_21 0D95  
                                     u434_21 0C03                                       u442_21 0ADC  
                                     u506_21 0752                                       u450_25 09F3  
                                     u531_20 171B                                       u427_20 175E  
                                     u451_20 0A01                                       u515_20 0D19  
                                     u507_20 0767                                       u531_21 171A  
                                     u427_21 175D                                       u451_21 0A00  
                                     u515_21 0D18                                       u507_21 0766  
                                     u435_25 0C05                                       u443_25 0AE1  
                                     u428_20 1765                                       u516_20 0D2B  
                                     u436_20 0C15                                       u444_20 0AEF  
                                     u508_20 07F5                                       u428_21 1764  
                                     u516_21 0D2A                                       u436_21 0C14  
                                     u444_21 0AEE                                       u508_21 07F4  
                                     u452_25 0A02                                       u460_25 095A  
                                     u436_25 0C11                                       u429_20 176C  
                                     u453_20 0A12                                       u461_20 0966  
                                     u445_20 0AF9                                       u509_20 0A7F  
                                     u533_20 0BD0                                       u541_20 0ED4  
                                     u429_21 176B                                       u453_21 0A11  
                                     u461_21 0965                                       u445_21 0AF8  
                                     u509_21 0A7E                                       u533_21 0BCF  
                                     u541_21 0ED3                                       u453_25 0A0E  
                                     u437_25 0C1D                                       u445_25 0AF5  
                                     u462_20 0649                                       u438_20 0C29  
                                     u550_20 0F39                                       u542_20 0EDA  
                                     u462_21 0648                                       u438_21 0C28  
                                     u550_21 0F38                                       u542_21 0ED9  
                                     u454_25 0A1A                                       u470_25 0A3A  
                                     u446_25 0B00                                       u455_20 0A26  
                                     u463_20 0681                                       u471_20 0A75  
                                     u439_20 0C2E                                       u447_20 0B0C  
                                     u551_20 0F46                                       u543_20 0EE0  
                                     u455_21 0A25                                       u463_21 0680  
                                     u471_21 0A74                                       u439_21 0C2D  
                                     u447_21 0B0B                                       u551_21 0F45  
                                     u543_21 0EDF                                       u528_20 1709  
                                     u472_20 165D                                       u456_20 0937  
                                     u464_20 0691                                       u448_20 0B11  
                                     u480_20 0B25                                       u544_20 0EE9  
                                     u528_21 1708                                       u472_21 165C  
                                     u456_21 0936                                       u464_21 0690  
                                     u448_21 0B10                                       u544_21 0EE8  
                                     u529_20 170F                                       u481_20 1646  
                                     u449_20 09EF                                       u465_20 06C8  
                                     u473_20 177F                                       u545_20 0EED  
                                     u529_21 170E                                       u481_21 1645  
                                     u449_21 09EE                                       u465_21 06C7  
                                     u473_21 177E                                       u545_21 0EEC  
                                     u457_25 093B                                       u465_25 06C4  
                                     u482_20 1653                                       u458_20 0949  
                                     u466_20 06D3                                       u474_20 1792  
                                     u490_20 009F                                       u546_20 0F0C  
                                     u482_21 1652                                       u458_21 0948  
                                     u466_21 06D2                                       u474_21 1791  
                                     u490_21 009E                                       u546_21 0F0B  
                                     u546_25 0F08                                       u459_20 0953  
                                     u467_20 06D9                                       u475_20 17A3  
                                     u491_20 0126                                       u483_20 17D1  
                                     u547_20 0F12                                       u459_21 0952  
                                     u467_21 06D8                                       u475_21 17A2  
                                     u491_21 0125                                       u483_21 17D0  
                                     u547_21 0F11                                       u459_25 094F  
                                     u468_20 0727                                       u492_20 014C  
                                     u476_20 0E85                                       u484_20 0F74  
                                     u548_20 0F1E                                       u468_21 0726  
                                     u492_21 014B                                       u476_21 0E84  
                                     u484_21 0F73                                       u548_21 0F1D  
                                     u580_27 0A49                                       u469_20 073D  
                                     u493_20 0233                                       u485_20 0F8C  
                                     u549_20 0F35                                       u469_21 073C  
                                     u493_21 0232                                       u477_21 0E9B  
                                     u485_21 0F8B                                       u549_21 0F34  
                                     u477_22 0EA2                                       u477_23 0EA9  
                                     u485_25 0F88                                       u581_27 0A5D  
                                     u478_20 0EB8                                       u486_20 0FA6  
                                     u478_21 0EB7                                       u486_21 0FA5  
                                     u494_25 0255                                       u486_25 0FA2  
                                     u582_27 17FD                                       u479_20 0EC6  
                                     u487_20 0FE8                                       u487_21 0FE7  
                                     u495_25 028D                                       u479_25 0EC1  
                                     u583_27 16AE                                       u575_27 0B8F  
                                     u488_20 0049                                       u496_20 1636  
                                     u496_21 1635                                       u584_27 1771  
                                     u576_27 0B9A                                       u497_20 081C  
                                     u497_21 081B                                       u489_25 0068  
                                     u497_25 0818                                       u585_27 1721  
                                     u577_27 0BAF                                       u498_25 08D6  
                                     u578_27 0BC3                                       u579_27 0E79  
                                     _TRISB0 0430                                       _TRISB1 0431  
                                     _TRISC0 0438                                       _TRISB2 0432  
                                     _TRISC1 0439                                       _TRISC2 043A  
                                     _TRISB4 0434                                       _TRISB5 0435  
                                     _TRISB6 0436                                       _TRISB7 0437  
                                     _TRISC6 043E                                       _TRISC7 043F  
                           __end_of_lcd_init 09A6                             __end_of_lcd_goto 0931  
                     menu_get_index_nav@menu 0070                                       ___bmul 1640  
                           __end_of_lcd_puts 0D0A                                       _canais 0324  
                                  ??___awdiv 0074                                    ??___awmod 0074  
                               ?_timer0_init 0070                                    ??___lwdiv 0074  
                                  ??___lwmod 007B                            _adcon_leitura_max 00CC  
                          _adcon_leitura_min 006C                             ___awdiv@quotient 0076  
                      eeprom_grava_word@dado 00E3                              ___awmod@divisor 0070  
                           __end_of_mq_gl_r0 03BE                         __end_of_eeprom_write 088D  
                            ___awmod@counter 0074            __end_of_est_estado_menu_principal 07EE  
                                  ??_handler 005F                                       saved_w 007E  
                             lcd_goto@coluna 00E3                  _est_ver_todos_index_amostra 0067  
                                  ??_sprintf 0028                             __end_ofexp@coeff 0350  
                           __end_oflog@coeff 0374                      __end_of__initialization 003A  
                            eeprom_read@addr 00E1                                i1_eeprom_read 1655  
                         adcon_le_sensor@acc 0077                          ___bmul@multiplicand 0070  
                            i1lcd_goto@linha 0075                   menu_set_value_indexes@menu 01A1  
                             __pcstackCOMMON 0070                                 __pidataBANK0 07FD  
                            _adcon_le_sensor 0E58                                   _adcon_init 16B4  
                             _OPTION_REGbits 0081                                   _rs232_init 16CD  
                               i1lcd_write@c 0071                            eeprom_write@value 00E1  
                  adcon_le_sensor@num_sensor 0076                                   __pbssBANK0 0065  
                                 __pbssBANK1 00A0                                   __pbssBANK3 0190  
                           adcon_le_sensor@n 007B                  __end_of_est_estado_monitora 07FD  
                            handler@count_t0 0065                               ?i1_eeprom_read 0070  
                                 __pmaintext 04F4                                      ?___bmul 0070  
                               ?i1_lcd_write 0070                                   __pintentry 0004  
                          _eeprom_grava_word 166C                      ?_menu_set_value_indexes 00E1  
                     est_executa@novo_estado 0048                           ?_eeprom_grava_word 00E3  
                           est_executa@F1430 00A0                             est_executa@i_569 0052  
                        ??_eeprom_grava_word 00E5                                    ?_lcd_init 0070  
                                  ?_lcd_goto 00E3                                    ?_lcd_puts 00E3  
                                 __stringtab 0300                             est_executa@maior 0049  
                           est_executa@index 0057                             est_executa@menor 004F  
                          ??_rs232_transmite 0071                                ??_adcon_print 0036  
                                 _btns_testa 1703                                 est_executa@i 0051  
                          __end_of_lcd_clear 16B4                           _menu_restore_index 15E6  
                  __end_of_eeprom_grava_word 1683                      __end_of_adcon_le_sensor 0ECE  
                                    ___awdiv 0BD1                                      ___awmod 0AC2  
                          __end_of_lcd_write 09E7               __end_of_menu_set_value_indexes 0E58  
                                    ___lwdiv 09E7                                      ___lwmod 0931  
                          __end_of_btns_init 08C3                          ?_menu_restore_index 0070  
                    ?_est_estado_menu_limpar 0070                                      _handler 0ECE  
                   rs232_transmite@qtd_bytes 0075                                      __ptext1 15F1  
                                    __ptext2 16CD                                      __ptext3 0DE5  
                                    __ptext4 1683                                      __ptext5 0CA1  
                                    __ptext6 096B                                      __ptext7 08FA  
                                    __ptext8 09A6                                      __ptext9 16E6  
                __end_of_menu_confirma_index 15E6                                  ?_adcon_init 0070  
                    ??_menu_get_value_active 0072                                      _dpowers 0312  
                ??_adcon_amostra_print_grava 007D                             ___awmod@dividend 0072  
                          __end_of_menu_init 169B                             est_maquina@botao 005E  
                                ?_rs232_init 0070                                 ??i1_lcd_goto 0073  
                               ??i1_lcd_puts 0074                         adcon_amostra_print@i 0049  
                       adcon_amostra_print@x 0047                                      _sprintf 063D  
                                    clrloop0 15D4                                   ??_lcd_init 00E3  
                                 ??_lcd_goto 00E4                                   ??_lcd_puts 00E5  
                       end_of_initialization 003A                           _est_estado_inicial 15CC  
                 ?_est_estado_mostra_max_min 0070               est_estado_mostra_max_min@botao 007C  
                       ??_menu_restore_index 0070                              ??i1_eeprom_read 0070  
                               _eeprom_write 0858                          ?_est_estado_inicial 0070  
                        __end_of_adcon_print 0B74                           _menu_get_index_nav 15C6  
                        _adcon_amostra_print 17A5                                    _RCSTAbits 0018  
                         __end_ofi1_lcd_goto 1800                                 __pstringtext 0300  
                         __end_ofi1_lcd_puts 0A76               __end_of_est_estado_menu_limpar 160C  
                        ?_menu_get_index_nav 0070                            ??_lcd_goto_sensor 0076  
                           adcon_print@F1457 00C1                         ??_est_estado_inicial 007C  
                       ?_adcon_amostra_print 0070                         ??_menu_get_index_nav 0070  
                              ??_eeprom_read 00E1                                    _TXSTAbits 0098  
                  _adcon_amostra_print_grava 0F5A                                  ?_btns_testa 0070  
                             i1_eeprom_write 1778                             i1lcd_goto@coluna 0072  
                                 lcd_write@c 00E2                  menu_set_value_indexes@value 00E1  
              _cfg_quant_sensores_amostrados 00CE                             ?_adcon_le_sensor 0070  
                       menu_init@quant_itens 00E3                 __end_of_menu_principal_itens 03AC  
                             __end_of___bmul 1655                        adcon_print@num_sensor 0035  
                             __end_of_canais 0328      est_estado_menu_conf_tempo_amostra@botao 0058  
                 ?_est_estado_menu_principal 0070                          start_initialization 0015  
                      ??_adcon_amostra_print 007D                                  __end_of_div 0858  
                                _adcon_print 0B1B                       __end_ofi1_eeprom_write 17A5  
                         menu_dec_index@menu 0070                                i1lcd_puts@cmd 0075  
                              i1lcd_puts@str 0072                               est_executa@tmp 0037  
             est_estado_menu_principal@botao 005A               est_estado_menu_principal@index 005B  
                                   ??___bmul 0071                          __end_of_eeprom_read 1703  
                                __pdataBANK0 006C                                ??_est_executa 0033  
                              ??_est_maquina 005C               adcon_amostra_print_grava@maior 0047  
             adcon_amostra_print_grava@menor 0049                              _rs232_transmite 0B74  
             adcon_amostra_print_grava@t_int 004D                                    ___latbits 0002  
                              __pcstackBANK0 0020                                __pcstackBANK1 00DE  
                              __pcstackBANK3 01A0                             eeprom_write@addr 00E2  
                                sprintf@flag 002E                              ?i1_eeprom_write 0070  
                           rs232_transmite@i 0077                                  sprintf@prec 002C  
                           rs232_transmite@x 0076                 __end_of_est_estado_ver_todos 0AC2  
                           ___lwdiv@dividend 0072                          i1eeprom_write@value 0070  
                                   ?___awdiv 0070                                     ?___awmod 0070  
                                   ?___lwdiv 0070                                     ?___lwmod 0077  
                                  _lcd_clear 169B                                     ?_handler 0070  
                             _menu_dec_index 162D                                    _lcd_write 09A6  
                               ??_adcon_init 00E1                                    _btns_init 088D  
                               ??_rs232_init 00E1                          __end_of_est_executa 02DB  
                        __end_of_est_maquina 0CA1                __end_of_menu_get_value_active 08FA  
                             mq_mostra@F1381 0190                               mq_mostra@F1379 00B1  
                           ___lwdiv@quotient 0075                                     ?_sprintf 0020  
                    rs232_transmite@qtd_sens 0074                                    _menu_init 1683  
                        i1_eeprom_grava_word 161A                      menu_confirma_index@menu 0070  
                       _menu_principal_itens 0390                  ??_est_estado_mostra_max_min 007C  
                          interrupt_function 0004                                    clear_ram0 15D3  
                                _eeprom_read 16E6                                    div@number 0078  
                                   _PIE1bits 008C                               _menu_inc_index 0803  
                            _lcd_goto_sensor 02DB                           __end_of_adcon_init 16CD  
                                   _PIR1bits 000C                                ??_timer0_init 00E1  
                         __end_of_rs232_init 16E6                      __end_of_rs232_transmite 0BD1  
                       ?i1_eeprom_grava_word 0072                       __end_of_menu_dec_index 1640  
                                 ?_lcd_clear 0070                _adcon_quant_amostras_gravadas 006A  
      adcon_amostra_print_grava@qtd_leituras 004B                                   _ADCON0bits 001F  
                                __stringbase 0312                                   _ADCON1bits 009F  
                                 ?_lcd_write 0070                    est_estado_ver_todos@botao 0058  
                                 ?_btns_init 0070   __end_of_est_estado_menu_conf_tempo_amostra 0DE5  
       ??_est_estado_menu_conf_tempo_amostra 007C          ?_est_estado_menu_conf_tempo_amostra 0070  
         _est_estado_menu_conf_tempo_amostra 0D75                     _cfg_quant_sensores_atual 006B  
                             _menu_principal 00D9                                   ?_menu_init 00E1  
                     __end_of_menu_inc_index 0829                                 ??_btns_testa 0070  
                      __end_ofi1_eeprom_read 166C                                   _EECON1bits 018C  
                             _eeprom_le_word 1728                       _menu_cfg_tempo_amostra 00CF  
                      ??i1_eeprom_grava_word 0074                    _est_estado_mostra_max_min 160C  
                            ?_menu_dec_index 0070                                  _est_executa 003E  
                                _est_maquina 0C38            __end_of_adcon_amostra_print_grava 1000  
                         __end_of__stringtab 0312                          __end_of_timer0_init 15FE  
                ??_est_estado_menu_principal 0058                                   sprintf@val 002F  
                       _est_estado_ver_todos 0A76                           i1eeprom_write@addr 0071  
__end_of_est_estado_menu_conf_quant_sensores 0D75        ??_est_estado_menu_conf_quant_sensores 007C  
       ?_est_estado_menu_conf_quant_sensores 0070          _est_estado_menu_conf_quant_sensores 0D0A  
                         __end_of_btns_testa 1728                              ___lwdiv@divisor 0070  
                            ___lwdiv@counter 0074                                     __ptext10 166C  
                                   __ptext11 0858                                     __ptext20 0742  
                                   __ptext12 088D                                     __ptext21 0F5A  
                                   __ptext13 16B4                                     __ptext30 0D0A  
                                   __ptext22 17A5                                     __ptext14 0ECE  
                                   __ptext31 15E6                                     __ptext23 0B1B  
                                   __ptext15 0B74                                     __ptext40 1778  
                                   __ptext32 0803                                     __ptext24 0829  
                                   __ptext16 0C38                                     __ptext41 063D  
                                   __ptext33 08C3                                     __ptext25 0AC2  
                                   __ptext17 0A76                                     __ptext50 1655  
                                   __ptext42 0931                                     __ptext34 162D  
                                   __ptext26 0BD1                                     __ptext18 160C  
                                   __ptext51 1640                                     __ptext43 09E7  
                                   __ptext35 15DB                                     __ptext27 0E58  
                                   __ptext19 07EE                                     __ptext52 1703  
                                   __ptext44 15C6                                     __ptext36 15CC  
                                   __ptext28 15FE                                     __ptext45 02DB  
                                   __ptext37 003E                                     __ptext29 0D75  
   est_estado_menu_conf_quant_sensores@botao 0058                                     __ptext46 17D2  
                                   __ptext38 0A2B                                     __ptext47 169B  
                                   __ptext39 161A                                     __ptext48 174E  
                                   __ptext49 1728                                     _lcd_init 096B  
                                   _lcd_goto 08FA                                     _lcd_puts 0CA1  
                          i1eeprom_read@addr 0070                      __end_of_lcd_goto_sensor 0300  
                               ?_adcon_print 0033         __end_of_menu_cfg_tempo_amostra_itens 0390  
               _menu_cfg_tempo_amostra_itens 0374                       __end_of_eeprom_le_word 174E  
                            ?_menu_inc_index 0070                       rs232_transmite@qtd_val 0073  
                                   _mq_gl_r0 03BC                                     div@denom 007A  
                   ??_menu_set_value_indexes 00E3                                ??i1_lcd_write 0070  
                         menu_inc_index@menu 0072                             ?_rs232_transmite 0070  
                                ??_lcd_clear 0072                  __end_of_adcon_amostra_print 17D2  
                     eeprom_le_word@temp_int 0076                                  ??_lcd_write 00E1  
                                   exp@coeff 0328                                     log@coeff 0350  
                      ?_est_estado_ver_todos 0070                                  ??_btns_init 00E1  
                                 _INTCONbits 000B                      _menu_cfg_quant_sensores 00D4  
                           ??i1_eeprom_write 0071                          _est_estado_monitora 07EE  
                                ??_menu_init 00E4                                     intlevel1 0000  
                                  sprintf@ap 002D                                    sprintf@sp 0031  
                               handler@botao 00E0                              ?_eeprom_le_word 0071  
                           ___lwmod@dividend 0079                    _est_estado_menu_principal 0742  
                                  stringcode 030A                     ??_est_estado_menu_limpar 007C  
                             _LCD_V_POSICOES 031C                      menu_set_value_indexes@i 01A0  
                       ?_est_estado_monitora 0070                                  _timer0_init 15F1  
                est_estado_menu_limpar@botao 007C                          __end_ofi1_lcd_write 1778  
                                   sprintf@c 0032                                     sprintf@f 0020  
                            ___lwmod@divisor 0077                              ___lwmod@counter 007B  
                                   stringtab 0300                         handler@tempo_amostra 00DE  
                           ?_lcd_goto_sensor 0070                                ?_eeprom_write 00E1  
                                 _STATUSbits 0003                                 ?_eeprom_read 0070  
                     __end_of_LCD_V_POSICOES 0324                            eeprom_le_word@end 0075  
                      ??_est_estado_monitora 007C  
